{"version":3,"sources":["pages/App.tsx","reportWebVitals.ts","pages/Json.tsx","pages/PageNotFound.tsx","compontents/ContentCopyAdornment.tsx","compontents/ContentCopyButton.tsx","pages/URL.tsx","pages/Markdown.tsx","compontents/Block.tsx","scripts/Random.ts","scripts/RandomStringUtils.ts","pages/Random.tsx","index.tsx"],"names":["App","Container","style","marginTop","Grid","container","spacing","item","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Link","RouterLink","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","options","language","mode","Json","editorRef","useRef","useEffect","current","JSONEditor","Box","ref","height","PageNotFound","ContentCopyAdornment","content","onCopy","useState","open","setOpen","Fragment","text","result","InputAdornment","position","IconButton","ContentCopy","Snackbar","onClose","autoHideDuration","message","ContentCopyButton","URL","uri","setUri","encodedURI","setEncodedURI","mt","TextField","type","label","value","onChange","e","target","multiline","minRows","fullWidth","InputProps","endAdornment","ButtonGroup","Button","onClick","encodeURI","encodeURIComponent","decodeURIComponent","sx","wordWrap","paddingTop","pb","disableSpacing","Markdown","editor","useEditor","root","Editor","make","config","ctx","set","rootCtx","use","nord","commonmark","history","pt","Block","styled","padding","margin","border","borderRadius","random","min","max","Math","ceil","floor","NUMERIC_CHARS","LOWERCASE_CHARS","UPPERCASE_CHARS","SYMBOL_CHARS","generator","length","numeric","lowercase","uppercase","symbol","chars","concat","_","str","i","randomInt","Random","randomString","setRandomString","setNumeric","upperCase","setUpperCase","lowerCase","setLowerCase","setSymbol","setLength","refresh","varchar","inputProps","FormGroup","row","FormControlLabel","control","Checkbox","defaultChecked","size","Slider","defaultValue","valueLabelDisplay","step","marks","event","startIcon","Refresh","ReactDOM","render","StrictMode","CssBaseline","index","element","path","document","getElementById"],"mappings":"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","file":"static/js/main.d566b0f0.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  Grid,\n  Link,\n  Typography,\n} from '@mui/material';\nimport {Link as RouterLink} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Container style={{marginTop: '64px'}}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                JSON\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。\n                易于人阅读和编写。同时也易于机器解析和生成。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/json'}>\n                JSON\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                URL\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                URL(Uniform Resource Locator)\n                统一资源定位符，俗称网页地址，简称网址，是因特网上标准的资源的地址（Address），如同在网络上的门牌。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/url'}>\n                URL\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Markdown\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Markdown\n                是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/markdown'}>\n                Markdown\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Random\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                生成包含数字、小写字母、大写字母、符号的随机字符串\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/random'}>\n                Random\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useRef, useEffect} from 'react';\nimport {Box, Container} from '@mui/material';\nimport JSONEditor, {JSONEditorOptions} from 'jsoneditor';\n\nimport 'jsoneditor/dist/jsoneditor.css';\n\nconst options: JSONEditorOptions = {\n  language: 'zh-CN',\n  mode: 'code',\n};\n\nexport default function Json() {\n  const editorRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (editorRef.current) {\n      new JSONEditor(editorRef.current, options);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Box ref={editorRef} height=\"100vh\" />\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Container, Typography} from '@mui/material';\n\nexport default function PageNotFound() {\n  return (\n    <Container>\n      <Typography>Page Not Found.</Typography>\n    </Container>\n  );\n}\n","import React, {useState} from 'react';\nimport {IconButton, InputAdornment, Snackbar} from '@mui/material';\nimport {ContentCopy} from '@mui/icons-material';\n// @ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\ninterface Props {\n  content?: string | undefined;\n  onCopy?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({content, onCopy}: Props) {\n  const [open, setOpen] = useState<boolean>(false);\n  const handleOnCopy = (text: string, result: DataTransfer) => {\n    setOpen(true);\n    if (onCopy) {\n      onCopy(text, result);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <React.Fragment>\n      <CopyToClipboard text={content} onCopy={handleOnCopy}>\n        <InputAdornment position={'end'}>\n          <IconButton aria-label={'Copy content'}>\n            <ContentCopy />\n          </IconButton>\n        </InputAdornment>\n      </CopyToClipboard>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        autoHideDuration={3000}\n        message={'复制成功'}\n      />\n    </React.Fragment>\n  );\n}\n","import React, {useState} from 'react';\nimport {IconButton, Snackbar} from '@mui/material';\nimport {ContentCopy} from '@mui/icons-material';\n// @ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\ninterface Props {\n  text?: string | undefined;\n}\n\nexport default function ContentCopyButton({text}: Props) {\n  const [open, setOpen] = useState(false);\n  return (\n    <React.Fragment>\n      <CopyToClipboard\n        text={text}\n        onCopy={() => {\n          setOpen(true);\n        }}\n      >\n        <IconButton aria-label={'Copy content'}>\n          <ContentCopy />\n        </IconButton>\n      </CopyToClipboard>\n\n      <Snackbar\n        open={open}\n        onClose={() => setOpen(false)}\n        autoHideDuration={3000}\n        message={'复制成功'}\n      />\n    </React.Fragment>\n  );\n}\n","import React, {useState} from 'react';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport ContentCopyAdornment from '../compontents/ContentCopyAdornment';\nimport ContentCopyButton from '../compontents/ContentCopyButton';\n\nexport default function URL() {\n  const [uri, setUri] = useState<string>('');\n  const [encodedURI, setEncodedURI] = useState<string>('');\n\n  const handleEncodeURI = function () {\n    setEncodedURI(encodeURI(uri));\n  };\n\n  const handleEncodeURIComponent = function () {\n    setEncodedURI(encodeURIComponent(uri));\n  };\n\n  const handleDecodeURIComponent = function () {\n    setEncodedURI(decodeURIComponent(uri));\n  };\n\n  return (\n    <Container>\n      <Box mt={2}>\n        <TextField\n          type={'text'}\n          label={'URL'}\n          value={uri}\n          onChange={e => {\n            setUri(e.target.value);\n          }}\n          multiline\n          minRows={3}\n          variant={'outlined'}\n          fullWidth\n          InputProps={{\n            endAdornment: <ContentCopyAdornment content={uri} />,\n          }}\n        />\n      </Box>\n      <Box mt={2}>\n        <ButtonGroup>\n          <Button variant={'outlined'} onClick={handleEncodeURI}>\n            链接参数编码\n          </Button>\n          <Button variant={'outlined'} onClick={handleEncodeURIComponent}>\n            全链接编码\n          </Button>\n          <Button variant={'outlined'} onClick={handleDecodeURIComponent}>\n            链接解码\n          </Button>\n        </ButtonGroup>\n      </Box>\n      <Box mt={2}>\n        <Card>\n          <CardContent>\n            <Typography sx={{wordWrap: 'break-word', paddingTop: 2, pb: 2}}>\n              {encodedURI}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <ContentCopyButton text={encodedURI} />\n          </CardActions>\n        </Card>\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Container} from '@mui/material';\nimport {Editor, rootCtx} from '@milkdown/core';\nimport {ReactEditor, useEditor} from '@milkdown/react';\nimport {nord} from '@milkdown/theme-nord';\nimport {commonmark} from '@milkdown/preset-commonmark';\nimport {history} from '@milkdown/plugin-history';\n\nexport default function Markdown() {\n  const editor = useEditor(root => {\n    return Editor.make()\n      .config(ctx => {\n        ctx.set(rootCtx, root);\n      })\n      .use(nord)\n      .use(commonmark)\n      .use(history);\n  });\n  return (\n    <Container sx={{pt: 2}}>\n      <ReactEditor editor={editor} />\n    </Container>\n  );\n}\n","import {styled} from '@mui/system';\n\nexport const Block = styled('div')({\n  position: 'relative',\n  padding: '24px',\n  margin: 'auto',\n  border: '1px solid rgba(0, 0, 0, 0.12)',\n  borderRadius: '10px',\n});\n","/**\n * 生成整数随机数\n * 包含最小值，不含最大值的随机数\n * @param min 最小值（包含）\n * @param max 最大值（不包含）\n * @return {number}\n */\nexport function random(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\n/**\n * 生成整数随机数\n * 同时包含最小值和最大值的随机数\n * @param min 最小值（包含）\n * @param max 最大值（包含）\n * @return {number}\n */\nexport function randomInclusive(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import {random as randomInt} from './Random';\nimport * as _ from 'lodash';\n\n// prettier-ignore\nexport const NUMERIC_CHARS: string[] = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n// prettier-ignore\nexport const LOWERCASE_CHARS: string[] = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n// prettier-ignore\nexport const UPPERCASE_CHARS: string[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n// prettier-ignore\nexport const SYMBOL_CHARS: string[] = ['!', '@', '#', '$', '%', '^', '&', '*'];\n\nconst EMPTY_CHAR = '';\n\nconst random = function (length: number): string {\n  return generator(length, true, true, true, false);\n};\n\nconst randomAlphabetic = function (length: number): string {\n  return generator(length, false, true, true, false);\n};\n\nconst randomNumber = function (length: number): string {\n  return generator(length, true, false, false, false);\n};\n\nconst generator = function (\n  length: number,\n  numeric: boolean = true,\n  lowercase: boolean = true,\n  uppercase: boolean = true,\n  symbol: boolean = false\n): string {\n  if (typeof length == 'undefined' || length == null || length <= 0) {\n    return EMPTY_CHAR;\n  }\n  let chars: string[] = [];\n  if (numeric) {\n    chars = chars.concat(NUMERIC_CHARS);\n  }\n  if (lowercase) {\n    chars = chars.concat(LOWERCASE_CHARS);\n  }\n  if (uppercase) {\n    chars = chars.concat(UPPERCASE_CHARS);\n  }\n  if (symbol) {\n    chars = chars.concat(SYMBOL_CHARS);\n  }\n  if (chars.length < 1) {\n    return EMPTY_CHAR;\n  } else {\n    _.shuffle(chars);\n  }\n  let str: string = '';\n  for (let i = 0; i < length; i++) {\n    str += chars[randomInt(0, chars.length)];\n  }\n  return str;\n};\n\nexport {random, randomAlphabetic, randomNumber, generator};\n","import React, {useState, useEffect} from 'react';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  FormGroup,\n  Slider,\n  TextField,\n} from '@mui/material';\n\nimport {Block} from '../compontents/Block';\nimport {Refresh} from '@mui/icons-material';\nimport ContentCopyAdornment from '../compontents/ContentCopyAdornment';\nimport {generator} from '../scripts/RandomStringUtils';\n\nexport default function Random() {\n  const [randomString, setRandomString] = useState<string>('');\n  const [numeric, setNumeric] = useState<boolean>(true);\n  const [upperCase, setUpperCase] = useState<boolean>(true);\n  const [lowerCase, setLowerCase] = useState<boolean>(true);\n  const [symbol, setSymbol] = useState<boolean>(false);\n  const [length, setLength] = useState<number>(8);\n  const refresh = () => {\n    const varchar = generator(length, numeric, lowerCase, upperCase, symbol);\n    setRandomString(varchar);\n  };\n\n  useEffect(refresh, [length, numeric, upperCase, lowerCase, symbol]);\n\n  const label = {inputProps: {'aria-label': 'Checkbox demo'}};\n\n  return (\n    <Container>\n      <Block sx={{mt: 2}}>\n        <FormGroup row>\n          <FormControlLabel\n            control={<Checkbox {...label} defaultChecked />}\n            label={'数字 0 ～ 9'}\n            value={numeric}\n            onChange={() => {\n              setNumeric(!numeric);\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox {...label} defaultChecked />}\n            label={'小写字母 a ~ z'}\n            value={lowerCase}\n            onChange={() => {\n              setLowerCase(!lowerCase);\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox {...label} defaultChecked />}\n            label={'大写字母 A ~ Z'}\n            value={upperCase}\n            onChange={() => {\n              setUpperCase(!upperCase);\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox {...label} />}\n            label={'符号'}\n            value={symbol}\n            onChange={() => {\n              setSymbol(!symbol);\n            }}\n          />\n          <TextField value={'!@#$%^&*'} size={'small'} />\n        </FormGroup>\n        <Box sx={{mt: 3}}>\n          <Slider\n            defaultValue={8}\n            valueLabelDisplay={'on'}\n            value={length}\n            min={6}\n            max={64}\n            step={1}\n            marks={[\n              {value: 6, label: '6'},\n              {value: 8, label: '8'},\n              {value: 16, label: '16'},\n              {value: 32, label: '32'},\n              {value: 64, label: '64'},\n            ]}\n            onChange={(event, value) => {\n              if (typeof value === 'number') {\n                setLength(value);\n              }\n            }}\n          />\n        </Box>\n\n        <Box sx={{mt: 2}}>\n          <TextField\n            variant={'outlined'}\n            value={randomString}\n            InputProps={{\n              endAdornment: <ContentCopyAdornment content={randomString} />,\n            }}\n            onChange={event => {\n              setRandomString(event.target.value);\n            }}\n            fullWidth\n          />\n        </Box>\n        <Box sx={{mt: 2}}>\n          <ButtonGroup>\n            <Button startIcon={<Refresh />} onClick={refresh}>\n              刷新\n            </Button>\n          </ButtonGroup>\n        </Box>\n      </Block>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport {CssBaseline} from '@mui/material';\nimport {Routes, Route, BrowserRouter} from 'react-router-dom';\nimport Json from './pages/Json';\nimport PageNotFound from './pages/PageNotFound';\nimport URL from './pages/URL';\nimport Markdown from './pages/Markdown';\nimport Random from './pages/Random';\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <BrowserRouter>\n        <Routes>\n          <Route index element={<App />} />\n          <Route path=\"json\" element={<Json />} />\n          <Route path=\"url\" element={<URL />} />\n          <Route path=\"markdown\" element={<Markdown />} />\n          <Route path=\"random\" element={<Random />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}