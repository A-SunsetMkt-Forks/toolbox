{"version":3,"file":"static/js/601.51ef6f95.chunk.js","mappings":"0NAWe,SAASA,EAAT,GAAyD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OACrD,GAAwBC,EAAAA,EAAAA,WAAkB,GAA1C,eAAOC,EAAP,KAAaC,EAAb,KAWA,OACE,UAAC,WAAD,YACE,SAAC,EAAAC,gBAAD,CAAiBC,KAAMN,EAASC,OAZf,SAACK,EAAcC,GAClCH,GAAQ,GACJH,GACFA,EAAOK,EAAMC,IASb,UACE,SAAC,IAAD,CAAgBC,SAAU,MAA1B,UACE,SAAC,IAAD,CAAY,aAAY,eAAxB,UACE,SAAC,IAAD,WAKN,SAAC,IAAD,CACEL,KAAMA,EACNM,QAfc,WAClBL,GAASD,IAeLO,iBAAkB,IAClBC,QAAS,kC,sLChCF,SAASC,IACtB,OAA0BV,EAAAA,EAAAA,UAAS,IAAnC,eAAOW,EAAP,KAAcC,EAAd,KACA,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KASA,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,MAAO,eACPC,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAASQ,EAAMP,OAAOK,QAExBG,WAAS,EACTC,WAAS,OAGb,SAAC,IAAD,CAAKP,GAAI,CAAEC,GAAI,GAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQO,QAvBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,OAAAA,UAAqBA,EAAAA,IAAAA,KAAAA,MAAed,IAChDG,EAAUU,IAqBJ,2BACA,SAAC,IAAD,CAAQD,QApBD,WACb,IAAMC,EAAMC,EAAAA,IAAAA,KAAAA,UAAmBA,EAAAA,IAAAA,OAAAA,MAAiBd,IAChDG,EAAUU,IAkBJ,gCAGJ,SAAC,IAAD,CAAKT,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,MAAO,eACPC,MAAOL,EACPQ,WAAS,EACTC,WAAS,EACTI,WAAY,CACVC,cAAc,SAAC,IAAD,CAAsB7B,QAASe,c","sources":["compontents/ContentCopyAdornment.tsx","pages/Base64.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {IconButton, InputAdornment, Snackbar} from '@mui/material';\nimport {ContentCopy} from '@mui/icons-material';\n// @ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\ninterface Props {\n  content?: string | undefined;\n  onCopy?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({content, onCopy}: Props) {\n  const [open, setOpen] = useState<boolean>(false);\n  const handleOnCopy = (text: string, result: DataTransfer) => {\n    setOpen(true);\n    if (onCopy) {\n      onCopy(text, result);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <React.Fragment>\n      <CopyToClipboard text={content} onCopy={handleOnCopy}>\n        <InputAdornment position={'end'}>\n          <IconButton aria-label={'Copy content'}>\n            <ContentCopy />\n          </IconButton>\n        </InputAdornment>\n      </CopyToClipboard>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        autoHideDuration={3000}\n        message={'复制成功'}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { Container, Box, TextField, ButtonGroup, Button } from '@mui/material';\nimport { enc } from 'crypto-js';\nimport ContentCopyAdornment from '../compontents/ContentCopyAdornment';\n\nexport default function Base64() {\n  const [plain, setPlain] = useState('');\n  const [target, setTarget] = useState('');\n  const encode = () => {\n    const str = enc.Base64.stringify(enc.Utf8.parse(plain));\n    setTarget(str);\n  };\n  const decode = () => {\n    const str = enc.Utf8.stringify(enc.Base64.parse(plain));\n    setTarget(str);\n  };\n  return (\n    <Container>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label={'文本'}\n          value={plain}\n          onChange={(event) => {\n            setPlain(event.target.value);\n          }}\n          fullWidth\n          multiline\n        />\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <ButtonGroup>\n          <Button onClick={encode}>编码</Button>\n          <Button onClick={decode}>解码</Button>\n        </ButtonGroup>\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <TextField\n          label={'结果'}\n          value={target}\n          fullWidth\n          multiline\n          InputProps={{\n            endAdornment: <ContentCopyAdornment content={target} />,\n          }}\n        />\n      </Box>\n    </Container>\n  );\n}\n"],"names":["ContentCopyAdornment","content","onCopy","useState","open","setOpen","CopyToClipboard","text","result","position","onClose","autoHideDuration","message","Base64","plain","setPlain","target","setTarget","sx","mt","label","value","onChange","event","fullWidth","multiline","onClick","str","enc","InputProps","endAdornment"],"sourceRoot":""}