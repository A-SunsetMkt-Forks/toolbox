{"version":3,"sources":["pages/App.tsx","reportWebVitals.ts","pages/Json.tsx","pages/PageNotFound.tsx","compontents/ContentCopyAdornment.tsx","compontents/ContentCopyButton.tsx","pages/URL.tsx","pages/Markdown.tsx","index.tsx"],"names":["App","Container","style","marginTop","Grid","container","spacing","item","xs","sm","md","Card","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Link","RouterLink","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","options","language","mode","Json","editorRef","useRef","useEffect","current","JSONEditor","Box","ref","height","PageNotFound","ContentCopyAdornment","content","onCopy","useState","open","setOpen","Fragment","text","result","InputAdornment","position","IconButton","ContentCopy","Snackbar","onClose","autoHideDuration","message","ContentCopyButton","URL","uri","setUri","encodedURI","setEncodedURI","mt","TextField","type","label","value","onChange","e","target","multiline","minRows","fullWidth","InputProps","endAdornment","ButtonGroup","Button","onClick","encodeURI","encodeURIComponent","decodeURIComponent","sx","wordWrap","paddingTop","pb","disableSpacing","Markdown","editor","useEditor","root","Editor","make","config","ctx","set","rootCtx","use","nord","commonmark","pt","ReactDOM","render","StrictMode","CssBaseline","index","element","path","document","getElementById"],"mappings":"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","file":"static/js/main.2cda855c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  Grid,\n  Link,\n  Typography,\n} from '@mui/material';\nimport {Link as RouterLink} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Container style={{marginTop: '64px'}}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                JSON\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。\n                易于人阅读和编写。同时也易于机器解析和生成。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/json'}>\n                JSON\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                URL\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                URL(Uniform Resource Locator)\n                统一资源定位符，俗称网页地址，简称网址，是因特网上标准的资源的地址（Address），如同在网络上的门牌。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/url'}>\n                URL\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Card>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                Markdown\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Markdown\n                是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Link component={RouterLink} to={'/markdown'}>\n                Markdown\n              </Link>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useRef, useEffect} from 'react';\nimport {Box, Container} from '@mui/material';\nimport JSONEditor, {JSONEditorOptions} from 'jsoneditor';\n\nimport 'jsoneditor/dist/jsoneditor.css';\n\nconst options: JSONEditorOptions = {\n  language: 'zh-CN',\n  mode: 'code',\n};\n\nexport default function Json() {\n  const editorRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (editorRef.current) {\n      new JSONEditor(editorRef.current, options);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Box ref={editorRef} height=\"100vh\" />\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Container, Typography} from '@mui/material';\n\nexport default function PageNotFound() {\n  return (\n    <Container>\n      <Typography>Page Not Found.</Typography>\n    </Container>\n  );\n}\n","import React, {useState} from 'react';\nimport {IconButton, InputAdornment, Snackbar} from '@mui/material';\nimport {ContentCopy} from '@mui/icons-material';\n// @ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\ninterface Props {\n  content?: string | undefined;\n  onCopy?: Function | undefined;\n}\n\nexport default function ContentCopyAdornment({content, onCopy}: Props) {\n  const [open, setOpen] = useState<boolean>(false);\n  const handleOnCopy = (text: string, result: DataTransfer) => {\n    setOpen(true);\n    if (onCopy) {\n      onCopy(text, result);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(!open);\n  };\n  return (\n    <React.Fragment>\n      <CopyToClipboard text={content} onCopy={handleOnCopy}>\n        <InputAdornment position={'end'}>\n          <IconButton aria-label={'Copy content'}>\n            <ContentCopy />\n          </IconButton>\n        </InputAdornment>\n      </CopyToClipboard>\n\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        autoHideDuration={3000}\n        message={'复制成功'}\n      />\n    </React.Fragment>\n  );\n}\n","import React, {useState} from 'react';\nimport {IconButton, Snackbar} from '@mui/material';\nimport {ContentCopy} from '@mui/icons-material';\n// @ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\ninterface Props {\n  text?: string | undefined;\n}\n\nexport default function ContentCopyButton({text}: Props) {\n  const [open, setOpen] = useState(false);\n  return (\n    <React.Fragment>\n      <CopyToClipboard\n        text={text}\n        onCopy={() => {\n          setOpen(true);\n        }}\n      >\n        <IconButton aria-label={'Copy content'}>\n          <ContentCopy />\n        </IconButton>\n      </CopyToClipboard>\n\n      <Snackbar\n        open={open}\n        onClose={() => setOpen(false)}\n        autoHideDuration={3000}\n        message={'复制成功'}\n      />\n    </React.Fragment>\n  );\n}\n","import React, {useState} from 'react';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport ContentCopyAdornment from '../compontents/ContentCopyAdornment';\nimport ContentCopyButton from '../compontents/ContentCopyButton';\n\nexport default function URL() {\n  const [uri, setUri] = useState<string>('');\n  const [encodedURI, setEncodedURI] = useState<string>('');\n\n  const handleEncodeURI = function () {\n    setEncodedURI(encodeURI(uri));\n  };\n\n  const handleEncodeURIComponent = function () {\n    setEncodedURI(encodeURIComponent(uri));\n  };\n\n  const handleDecodeURIComponent = function () {\n    setEncodedURI(decodeURIComponent(uri));\n  };\n\n  return (\n    <Container>\n      <Box mt={2}>\n        <TextField\n          type={'text'}\n          label={'URL'}\n          value={uri}\n          onChange={e => {\n            setUri(e.target.value);\n          }}\n          multiline\n          minRows={3}\n          variant={'outlined'}\n          fullWidth\n          InputProps={{\n            endAdornment: <ContentCopyAdornment content={uri} />,\n          }}\n        />\n      </Box>\n      <Box mt={2}>\n        <ButtonGroup>\n          <Button variant={'outlined'} onClick={handleEncodeURI}>\n            链接参数编码\n          </Button>\n          <Button variant={'outlined'} onClick={handleEncodeURIComponent}>\n            全链接编码\n          </Button>\n          <Button variant={'outlined'} onClick={handleDecodeURIComponent}>\n            链接解码\n          </Button>\n        </ButtonGroup>\n      </Box>\n      <Box mt={2}>\n        <Card>\n          <CardContent>\n            <Typography sx={{wordWrap: 'break-word', paddingTop: 2, pb: 2}}>\n              {encodedURI}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <ContentCopyButton text={encodedURI} />\n          </CardActions>\n        </Card>\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport {Container} from '@mui/material';\nimport {Editor, rootCtx} from '@milkdown/core';\nimport {ReactEditor, useEditor} from '@milkdown/react';\nimport {nord} from '@milkdown/theme-nord';\nimport {commonmark} from '@milkdown/preset-commonmark';\n\nexport default function Markdown() {\n  const editor = useEditor(root => {\n    return Editor.make()\n      .config(ctx => {\n        ctx.set(rootCtx, root);\n      })\n      .use(nord)\n      .use(commonmark);\n  });\n  return (\n    <Container sx={{pt: 2}}>\n      <ReactEditor editor={editor} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport {CssBaseline} from '@mui/material';\nimport {Routes, Route, BrowserRouter} from 'react-router-dom';\nimport Json from './pages/Json';\nimport PageNotFound from './pages/PageNotFound';\nimport URL from './pages/URL';\nimport Markdown from './pages/Markdown';\n\nReactDOM.render(\n  <React.StrictMode>\n    <React.Fragment>\n      <CssBaseline />\n      <BrowserRouter>\n        <Routes>\n          <Route index element={<App />} />\n          <Route path=\"json\" element={<Json />} />\n          <Route path=\"url\" element={<URL />} />\n          <Route path=\"markdown\" element={<Markdown />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </React.Fragment>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}