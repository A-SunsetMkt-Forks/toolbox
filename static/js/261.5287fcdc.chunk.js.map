{"version":3,"file":"static/js/261.5287fcdc.chunk.js","mappings":"+RAUMA,GAAQC,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC5BC,QAAS,SAGLC,EAA6B,CACjCC,MAAO,CAAC,OAAQ,QAChBC,SAAU,QACVC,KAAM,OACNC,QAAQ,GAGK,SAASC,IACtB,IAAMC,GAAgBC,EAAAA,EAAAA,UACtB,GAAoCC,EAAAA,EAAAA,YAApC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACJP,EAAcQ,SAChBJ,EAAc,IAAIK,IAAJ,CAAeT,EAAcQ,QAASd,MAErD,KACHa,EAAAA,EAAAA,YAAU,WACJJ,GAAcE,GAChBF,EAAWO,IAAIL,KAEhB,CAACF,EAAYE,IA6ChB,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAKM,GAAI,CAACC,GAAI,GAAd,UACE,SAAC,IAAD,CAAYC,QAAS,KAArB,kCAEF,UAAC,IAAD,CAAKF,GAAI,CAACC,GAAI,GAAd,WACE,mBAAOE,QAAQ,wBAAf,WACE,SAACvB,EAAD,CACEwB,OAAO,kBACPC,GAAG,wBACHC,UAAQ,EACRC,KAAK,OACLC,SAxCO,SAACC,GAChBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBH,QAAQC,IAAIF,EAAMG,OAAOE,OACzB,IAAMD,EAAQJ,EAAMG,OAAOC,MAC3B,GAAIA,EACF,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IAAK,CACrC,IAAME,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACC,GACnB,GAAKA,EAAER,OAAP,CAGA,IAAIS,EAAOD,EAAER,OAAOlB,OACpB2B,EAAO,IAAIC,WAAWD,GACtB,IAAME,EAAWC,EAAAA,GAAUH,EAAM,CAACd,KAAM,UACxCG,QAAQC,IAAIY,GACZ,IAAME,EAAaF,EAASG,OAAOH,EAASI,WAAW,IACjDC,EAAOJ,EAAAA,GAAAA,cAAyBC,IAAe,GACrD9B,EAAUiC,KAIZ,IAAMC,EAAOhB,EAAMiB,KAAKf,GACpBc,GACFZ,EAAWc,kBAAkBF,QAmB7B,SAAC,IAAD,CAAQ3B,QAAQ,YAAY8B,UAAU,OAAtC,oCAIF,SAAC,IAAD,CAAQC,QA7DD,WACX,GAAKzC,EAAL,CAGA,IAAM0C,EAAU1C,EAAW2C,UAC3B,GAAgB,OAAZD,GAAgC,KAAZA,EAAxB,CAGA,IAAME,EAAIC,KAAKC,MACTT,EAAO,IAAIU,KAAK,CAACL,GAAUE,EAAI,QAAS,CAC5C7B,KAAM,6BAERiC,IAAAA,OAAiBX,MAiDb,sDAEF,SAAC,IAAD,CAAK7B,GAAI,CAACC,GAAI,EAAGwC,OAAQ,QAASC,IAAKrD","sources":["pages/Excel.tsx"],"sourcesContent":["import React, {ChangeEvent, useState, useRef, useEffect} from 'react';\nimport {Box, Container, Typography, Button} from '@mui/material';\nimport * as xlsx from 'xlsx';\nimport {styled} from '@mui/material/styles';\nimport FileSaver from 'file-saver';\n\nimport JSONEditor, {JSONEditorOptions} from 'jsoneditor';\n\nimport 'jsoneditor/dist/jsoneditor.css';\n\nconst Input = styled('input')({\n  display: 'none',\n});\n\nconst options: JSONEditorOptions = {\n  modes: ['code', 'view'],\n  language: 'zh-CN',\n  mode: 'code',\n  search: true,\n};\n\nexport default function Excel() {\n  const jsonViewerRef = useRef<HTMLDivElement>();\n  const [jsonViewer, setJsonViewer] = useState<JSONEditor>();\n  const [result, setResult] = useState({});\n\n  useEffect(() => {\n    if (jsonViewerRef.current) {\n      setJsonViewer(new JSONEditor(jsonViewerRef.current, options));\n    }\n  }, []);\n  useEffect(() => {\n    if (jsonViewer && result) {\n      jsonViewer.set(result);\n    }\n  }, [jsonViewer, result]);\n\n  const save = () => {\n    if (!jsonViewer) {\n      return;\n    }\n    const content = jsonViewer.getText();\n    if (content === '{}' || content === '') {\n      return;\n    }\n    const t = Date.now();\n    const file = new File([content], t + '.json', {\n      type: 'text/plain;charset=utf-8',\n    });\n    FileSaver.saveAs(file);\n  };\n\n  const onUpload = (event: ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.files);\n    console.log(event.target.value);\n    const files = event.target.files;\n    if (files) {\n      for (let i = 0; i < files.length; i++) {\n        const fileReader = new FileReader();\n        fileReader.onload = (e: ProgressEvent<FileReader>) => {\n          if (!e.target) {\n            return;\n          }\n          let data = e.target.result as ArrayBuffer;\n          data = new Uint8Array(data);\n          const workbook = xlsx.read(data, {type: 'array'});\n          console.log(workbook);\n          const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n          const rows = xlsx.utils.sheet_to_json(firstSheet) || [];\n          setResult(rows);\n          // save(JSON.stringify(rows));\n        };\n\n        const file = files.item(i);\n        if (file) {\n          fileReader.readAsArrayBuffer(file);\n        }\n      }\n    }\n  };\n  return (\n    <Container>\n      <Box sx={{mt: 2}}>\n        <Typography variant={'h2'}>Excel 转 JSON</Typography>\n      </Box>\n      <Box sx={{mt: 2}}>\n        <label htmlFor=\"contained-button-file\">\n          <Input\n            accept=\".xls,.xlsx,.csv\"\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n            onChange={onUpload}\n          />\n          <Button variant=\"contained\" component=\"span\">\n            上传 Excel\n          </Button>\n        </label>\n        <Button onClick={save}>下载为 JSON 文件</Button>\n      </Box>\n      <Box sx={{mt: 2, height: '90vh'}} ref={jsonViewerRef} />\n    </Container>\n  );\n}\n"],"names":["Input","styled","display","options","modes","language","mode","search","Excel","jsonViewerRef","useRef","useState","jsonViewer","setJsonViewer","result","setResult","useEffect","current","JSONEditor","set","sx","mt","variant","htmlFor","accept","id","multiple","type","onChange","event","console","log","target","files","value","i","length","fileReader","FileReader","onload","e","data","Uint8Array","workbook","xlsx","firstSheet","Sheets","SheetNames","rows","file","item","readAsArrayBuffer","component","onClick","content","getText","t","Date","now","File","FileSaver","height","ref"],"sourceRoot":""}