{"version":3,"file":"static/js/178.62e6eacb.chunk.js","mappings":"qUAsGA,UA9EsB,WACpB,OAA8BA,EAAAA,EAAAA,UAAqB,CACjDC,WAAW,EACXC,iBAAiB,EACjBC,QAAS,EACTC,MAAM,EACNC,SAAU,KALZ,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,GAAwBP,EAAAA,EAAAA,UAAiB,IAAzC,eAAOQ,EAAP,KAAaC,EAAb,KACA,GAA0BT,EAAAA,EAAAA,UAAiB,QAA3C,eAAOU,EAAP,KAAcC,EAAd,KAaA,OACE,UAAC,IAAD,CAAKC,GAAI,CAAEC,OAAQ,QAAnB,WACE,SAAC,IAAD,CAAKD,GAAI,CAAEE,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA7B,UACE,UAAC,IAAD,CAAOC,UAAW,MAAOC,WAAY,SAAUC,QAAS,EAAxD,WACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYC,GAAG,oBAAf,2BACA,UAAC,IAAD,CACEC,QAAQ,oBACRC,MAAO,eACPC,QAAS,WACTC,MAAOd,EACPe,SAAU,SAACC,GACTf,EAASe,EAAMC,OAAOH,QAN1B,WASE,SAAC,IAAD,CAAUA,MAAO,OAAjB,mBACA,SAAC,IAAD,CAAUA,MAAO,QAAjB,4BAIN,SAAC,IAAD,WACE,SAAC,IAAD,CAAQD,QAAS,YAAaK,QA9BrB,WACjB,IAAMC,EAAcC,IAAAA,OAAgBtB,EAAM,CACxCuB,OAAQrB,EACRsB,QAAS,CAACC,OAEZxB,EAAQoB,IAyBA,mCAIF,SAAC,IAAD,WACE,SAAC,IAAD,CACEK,SACE,SAAC,IAAD,CACEC,QAAS7B,EAAQF,KACjBqB,SAAU,SAACC,GACTnB,GAAW,kBAAKD,GAAN,IAAeF,KAAMsB,EAAMC,OAAOQ,cAIlDb,MAAM,qCAKd,SAAC,KAAD,CACEc,MAAM,OACNvB,OAAO,oBACPwB,KAAM3B,EACN4B,MAAM,UACNb,SAzDW,SAACc,GAChB9B,EAAQ8B,IAyDJC,KAAK,mBACLjC,WAAYD,EACZmC,YAAa,CAAEC,iBAAiB,GAChClB,MAAOhB","sources":["pages/CodeFormatter.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport prettier from 'prettier/standalone';\nimport prettierBabelPlugin from 'prettier/parser-babel';\n\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-min-noconflict/mode-json5';\nimport 'ace-builds/src-min-noconflict/mode-json';\nimport 'ace-builds/src-min-noconflict/theme-monokai';\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\n\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n} from '@mui/material';\nimport { AceOptions } from 'react-ace/types';\n\nconst CodeFormatter = () => {\n  const [options, setOptions] = useState<AceOptions>({\n    useWorker: false,\n    showLineNumbers: true,\n    tabSize: 2,\n    wrap: true,\n    fontSize: 14,\n  });\n  const [code, setCode] = useState<string>('');\n  const [model, setModel] = useState<string>('json');\n\n  const onChange = (newValue: string) => {\n    setCode(newValue);\n  };\n  const onPrettier = () => {\n    const prettierStr = prettier.format(code, {\n      parser: model,\n      plugins: [prettierBabelPlugin],\n    });\n    setCode(prettierStr);\n  };\n\n  return (\n    <Box sx={{ height: '100%' }}>\n      <Box sx={{ pt: 2, pb: 1, pl: 1 }}>\n        <Stack direction={'row'} alignItems={'center'} spacing={2}>\n          <Box>\n            <FormControl>\n              <InputLabel id=\"type-select-label\">类型</InputLabel>\n              <Select\n                labelId=\"type-select-label\"\n                label={'类型'}\n                variant={'outlined'}\n                value={model}\n                onChange={(event) => {\n                  setModel(event.target.value);\n                }}\n              >\n                <MenuItem value={'json'}>JSON</MenuItem>\n                <MenuItem value={'json5'}>JSON5</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n          <Box>\n            <Button variant={'contained'} onClick={onPrettier}>\n              格式化\n            </Button>\n          </Box>\n          <Box>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={options.wrap}\n                  onChange={(event) => {\n                    setOptions({ ...options, wrap: event.target.checked });\n                  }}\n                />\n              }\n              label=\"自动换行\"\n            />\n          </Box>\n        </Stack>\n      </Box>\n      <AceEditor\n        width=\"100%\"\n        height=\"calc(100% - 80px)\"\n        mode={model}\n        theme=\"monokai\"\n        onChange={onChange}\n        name=\"UNIQUE_ID_OF_DIV\"\n        setOptions={options}\n        editorProps={{ $blockScrolling: true }}\n        value={code}\n      />\n    </Box>\n  );\n};\n\nexport default CodeFormatter;\n"],"names":["useState","useWorker","showLineNumbers","tabSize","wrap","fontSize","options","setOptions","code","setCode","model","setModel","sx","height","pt","pb","pl","direction","alignItems","spacing","id","labelId","label","variant","value","onChange","event","target","onClick","prettierStr","prettier","parser","plugins","prettierBabelPlugin","control","checked","width","mode","theme","newValue","name","editorProps","$blockScrolling"],"sourceRoot":""}