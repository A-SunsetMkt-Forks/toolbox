{"version":3,"file":"static/js/878.e9089dac.chunk.js","mappings":"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bze,GAAuC,OAAbA,EAC5BzpB,EAAO,CAACU,KAAM,OAAQwnC,SAAU,IAEhCA,EAASzK,QAAQ0xD,QAUjB,IARAnvF,EAAO02G,GAAcjtF,EAAUmtF,IAE1B1nF,QAAUlvB,EAAKkvB,QAAQlG,cACxBuyC,GAAUtH,GAAIp2D,KAAK09D,EAAQv7D,EAAKkvB,WAClClvB,EAAKkvB,QAAUqsC,EAAOv7D,EAAKkvB,UAIzB4nF,GAAa3nB,EAAYnvF,EAAKkvB,SAIhC,IAAK+nD,KAAOkY,EACNl7B,GAAIp2D,KAAKsxF,EAAYlY,IAEvB8/B,GAAYl/F,EAAQ7X,EAAKmvF,WAAYlY,EAAKkY,EAAWlY,SAIzD/uC,EAASzK,QAAQ0xD,GAKrB,OAASpuF,EAAQmnC,EAAS7oC,QACxBk4G,GAASv3G,EAAKkoC,SAAUA,EAASnnC,IAQnC,MALkB,YAAdf,EAAKU,MAAuC,aAAjBV,EAAKkvB,UAClClvB,EAAKoC,QAAU,CAAC1B,KAAM,OAAQwnC,SAAUloC,EAAKkoC,UAC7CloC,EAAKkoC,SAAW,IAGXloC,GCvFE03G,CAAKt+D,GAAM,OCRfu+D,GAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,GAA4B,CACvC,EAAG,SACH,IAAK,S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","sources":["../node_modules/@mui/material/Container/containerClasses.js","../node_modules/@mui/material/Container/Container.js","../node_modules/extend/index.js","../node_modules/is-buffer/index.js","../node_modules/prosemirror-commands/src/commands.js","../node_modules/rope-sequence/dist/index.es.js","../node_modules/prosemirror-history/src/history.js","../node_modules/prosemirror-inputrules/src/inputrules.js","../node_modules/prosemirror-inputrules/src/rules.js","../node_modules/prosemirror-inputrules/src/rulebuilders.js","../node_modules/prosemirror-keymap/src/keymap.js","../node_modules/orderedmap/index.es.js","../node_modules/prosemirror-model/src/diff.js","../node_modules/prosemirror-model/src/fragment.js","../node_modules/prosemirror-model/src/comparedeep.js","../node_modules/prosemirror-model/src/mark.js","../node_modules/prosemirror-model/src/replace.js","../node_modules/prosemirror-model/src/resolvedpos.js","../node_modules/prosemirror-model/src/node.js","../node_modules/prosemirror-model/src/content.js","../node_modules/prosemirror-model/src/schema.js","../node_modules/prosemirror-model/src/from_dom.js","../node_modules/prosemirror-model/src/to_dom.js","../node_modules/prosemirror-schema-list/src/schema-list.js","../node_modules/prosemirror-state/src/selection.js","../node_modules/prosemirror-state/src/transaction.js","../node_modules/prosemirror-state/src/state.js","../node_modules/prosemirror-state/src/plugin.js","../node_modules/prosemirror-transform/src/map.js","../node_modules/prosemirror-transform/src/transform.js","../node_modules/prosemirror-transform/src/step.js","../node_modules/prosemirror-transform/src/replace_step.js","../node_modules/prosemirror-transform/src/structure.js","../node_modules/prosemirror-transform/src/mark_step.js","../node_modules/prosemirror-transform/src/replace.js","../node_modules/prosemirror-transform/src/mark.js","../node_modules/prosemirror-view/src/browser.js","../node_modules/prosemirror-view/src/dom.js","../node_modules/prosemirror-view/src/domcoords.js","../node_modules/prosemirror-view/src/viewdesc.js","../node_modules/prosemirror-view/src/selection.js","../node_modules/prosemirror-view/src/capturekeys.js","../node_modules/prosemirror-view/src/domchange.js","../node_modules/prosemirror-view/src/clipboard.js","../node_modules/prosemirror-view/src/domobserver.js","../node_modules/prosemirror-view/src/input.js","../node_modules/prosemirror-view/src/decoration.js","../node_modules/prosemirror-view/src/index.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@milkdown/transformer/src/utility/stack.ts","../node_modules/@milkdown/transformer/src/parser/stack-element.ts","../node_modules/@milkdown/transformer/src/parser/stack.ts","../node_modules/@milkdown/transformer/src/parser/state.ts","../node_modules/@milkdown/transformer/src/parser/index.ts","../node_modules/@milkdown/transformer/src/serializer/stack-element.ts","../node_modules/@milkdown/transformer/src/serializer/stack.ts","../node_modules/@milkdown/transformer/src/serializer/state.ts","../node_modules/@milkdown/transformer/src/serializer/index.ts","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/zwitch/index.js","../node_modules/mdast-util-to-markdown/lib/configure.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-to-markdown/lib/join.js","../node_modules/mdast-util-to-markdown/lib/unsafe.js","../node_modules/mdast-util-to-markdown/lib/index.js","../node_modules/remark-stringify/index.js","../node_modules/remark-stringify/lib/index.js","../node_modules/remark/index.js","../node_modules/@milkdown/core/src/internal-plugin/config.ts","../node_modules/@milkdown/core/src/internal-plugin/theme.ts","../node_modules/@milkdown/core/src/internal-plugin/init.ts","../node_modules/@milkdown/core/src/internal-plugin/schema.ts","../node_modules/@milkdown/core/src/internal-plugin/parser.ts","../node_modules/@milkdown/core/src/internal-plugin/serializer.ts","../node_modules/@milkdown/core/src/internal-plugin/editor-state.ts","../node_modules/@milkdown/core/src/internal-plugin/editor-view.ts","../node_modules/@milkdown/core/src/internal-plugin/commands.ts","../node_modules/@milkdown/core/src/editor/editor.ts","../node_modules/@milkdown/ctx/src/context/container.ts","../node_modules/@milkdown/ctx/src/context/shallow-clone.ts","../node_modules/@milkdown/ctx/src/context/slice.ts","../node_modules/@milkdown/ctx/src/plugin/ctx.ts","../node_modules/@milkdown/ctx/src/plugin/pre.ts","../node_modules/@milkdown/ctx/src/timing/clock.ts","../node_modules/@milkdown/ctx/src/timing/timing.ts","../node_modules/node_modules/.pnpm/@emotion+unitless@0.7.5/node_modules/@emotion/unitless/dist/unitless.browser.esm.js","../node_modules/node_modules/.pnpm/@emotion+memoize@0.7.5/node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js","../node_modules/node_modules/.pnpm/@emotion+serialize@1.0.2/node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js","../node_modules/node_modules/.pnpm/@emotion+hash@0.8.0/node_modules/@emotion/hash/dist/hash.browser.esm.js","../node_modules/node_modules/.pnpm/@emotion+utils@1.1.0/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js","../node_modules/node_modules/.pnpm/@emotion+css@11.7.1/node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js","../node_modules/@milkdown/design-system/src/emotion.ts","../node_modules/@milkdown/design-system/src/manager.ts","../node_modules/@milkdown/design-system/src/keys/border.ts","../node_modules/@milkdown/design-system/src/keys/code-fence.ts","../node_modules/@milkdown/design-system/src/keys/color.ts","../node_modules/@milkdown/design-system/src/keys/font.ts","../node_modules/@milkdown/design-system/src/keys/global.ts","../node_modules/@milkdown/design-system/src/keys/icon.ts","../node_modules/@milkdown/design-system/src/keys/image.ts","../node_modules/@milkdown/design-system/src/keys/inner-editor.ts","../node_modules/@milkdown/design-system/src/keys/input-chip.ts","../node_modules/@milkdown/design-system/src/keys/scrollbar.ts","../node_modules/@milkdown/design-system/src/keys/shadow.ts","../node_modules/@milkdown/design-system/src/keys/size.ts","../node_modules/@milkdown/design-system/src/keys/task-list-item.ts","../node_modules/@milkdown/design-system/src/keys/index.ts","../node_modules/@milkdown/design-system/src/utils.ts","../node_modules/@milkdown/exception/src/index.ts","../node_modules/@milkdown/plugin-clipboard/src/clipboard.ts","../node_modules/@milkdown/plugin-clipboard/src/index.ts","../node_modules/@milkdown/plugin-history/src/index.ts","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/clike.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/c.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/cpp.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/arduino.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/bash.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/csharp.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/markup.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/css.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/diff.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/go.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/ini.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/java.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/regex.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/javascript.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/json.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/kotlin.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/less.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/lua.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/makefile.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/yaml.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/markdown.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/objectivec.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/perl.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/markup-templating.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/php.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/python.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/r.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/ruby.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/rust.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/sass.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/scss.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/sql.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/swift.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/typescript.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/basic.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lang/vbnet.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/schema.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/merge.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/normalize.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/info.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/types.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/defined-info.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/create.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/xlink.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/xml.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/xmlns.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/aria.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/html.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/svg.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/lib/find.js","../node_modules/node_modules/.pnpm/property-information@6.1.1/node_modules/property-information/index.js","../node_modules/node_modules/.pnpm/hast-util-parse-selector@3.1.0/node_modules/hast-util-parse-selector/index.js","../node_modules/node_modules/.pnpm/space-separated-tokens@2.0.1/node_modules/space-separated-tokens/index.js","../node_modules/node_modules/.pnpm/comma-separated-tokens@2.0.2/node_modules/comma-separated-tokens/index.js","../node_modules/node_modules/.pnpm/hastscript@7.0.2/node_modules/hastscript/lib/core.js","../node_modules/node_modules/.pnpm/hastscript@7.0.2/node_modules/hastscript/lib/html.js","../node_modules/node_modules/.pnpm/character-entities-legacy@3.0.0/node_modules/character-entities-legacy/index.js","../node_modules/node_modules/.pnpm/character-reference-invalid@2.0.1/node_modules/character-reference-invalid/index.js","../node_modules/node_modules/.pnpm/is-decimal@2.0.1/node_modules/is-decimal/index.js","../node_modules/node_modules/.pnpm/is-hexadecimal@2.0.1/node_modules/is-hexadecimal/index.js","../node_modules/node_modules/.pnpm/is-alphanumerical@2.0.1/node_modules/is-alphanumerical/index.js","../node_modules/node_modules/.pnpm/is-alphabetical@2.0.1/node_modules/is-alphabetical/index.js","../node_modules/node_modules/.pnpm/decode-named-character-reference@1.0.1/node_modules/decode-named-character-reference/index.dom.js","../node_modules/node_modules/.pnpm/parse-entities@4.0.0/node_modules/parse-entities/lib/index.js","../node_modules/node_modules/.pnpm/prismjs@1.27.0/node_modules/prismjs/components/prism-core.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lib/core.js","../node_modules/node_modules/.pnpm/refractor@4.5.0/node_modules/refractor/lib/common.js","../node_modules/@milkdown/plugin-prism/src/get-decorations.ts","../node_modules/@milkdown/plugin-prism/src/prism.ts","../node_modules/@milkdown/plugin-prism/src/index.ts","../node_modules/@milkdown/plugin-tooltip/src/utility/prosemirror.ts","../node_modules/@milkdown/plugin-tooltip/src/utility/toggle.ts","../node_modules/@milkdown/plugin-tooltip/src/item.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/create-tooltip.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/style.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/filter-button.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/no-active.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/index.ts","../node_modules/@milkdown/plugin-tooltip/src/button-manager/calc-button-pos.ts","../node_modules/@milkdown/plugin-tooltip/src/selection-marks-tooltip.ts","../node_modules/@milkdown/plugin-tooltip/src/index.ts","../node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","../node_modules/mdast-util-definitions/node_modules/unist-util-is/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit-parents/index.js","../node_modules/mdast-util-definitions/node_modules/unist-util-visit/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/remark-inline-links/index.js","../node_modules/@milkdown/preset-commonmark/src/supported-keys.ts","../node_modules/@milkdown/preset-commonmark/src/mark/code-inline.ts","../node_modules/@milkdown/preset-commonmark/src/mark/em.ts","../node_modules/@milkdown/preset-commonmark/src/mark/link.ts","../node_modules/@milkdown/preset-commonmark/src/mark/strong.ts","../node_modules/@milkdown/preset-commonmark/src/mark/index.ts","../node_modules/@milkdown/preset-commonmark/src/node/blockquote.ts","../node_modules/@milkdown/preset-commonmark/src/node/bullet-list.ts","../node_modules/@milkdown/preset-commonmark/src/node/code-fence.ts","../node_modules/@milkdown/preset-commonmark/src/node/doc.ts","../node_modules/@milkdown/preset-commonmark/src/node/hardbreak.ts","../node_modules/@milkdown/preset-commonmark/src/node/heading.ts","../node_modules/@milkdown/preset-commonmark/src/node/hr.ts","../node_modules/@milkdown/preset-commonmark/src/node/image.ts","../node_modules/@milkdown/preset-commonmark/src/node/list-item.ts","../node_modules/@milkdown/preset-commonmark/src/node/ordered-list.ts","../node_modules/@milkdown/preset-commonmark/src/node/paragraph.ts","../node_modules/@milkdown/preset-commonmark/src/node/text.ts","../node_modules/@milkdown/preset-commonmark/src/node/index.ts","../node_modules/@milkdown/preset-commonmark/src/plugin/filter-html.ts","../node_modules/@milkdown/preset-commonmark/src/plugin/index.ts","../node_modules/@milkdown/preset-commonmark/src/index.ts","../node_modules/prosemirror-dropcursor/src/dropcursor.js","../node_modules/prosemirror-gapcursor/src/gapcursor.js","../node_modules/prosemirror-gapcursor/src/index.js","../node_modules/prosemirror-tables/src/tablemap.js","../node_modules/prosemirror-tables/src/schema.js","../node_modules/prosemirror-tables/src/util.js","../node_modules/prosemirror-tables/src/cellselection.js","../node_modules/prosemirror-tables/src/input.js","../node_modules/prosemirror-tables/src/fixtables.js","../node_modules/prosemirror-tables/src/commands.js","../node_modules/prosemirror-tables/src/tableview.js","../node_modules/prosemirror-tables/src/columnresizing.js","../node_modules/@milkdown/prose/src/toolkit/input-rules/custom-input-rules.ts","../node_modules/@milkdown/prose/src/toolkit/input-rules/mark-rule.ts","../node_modules/@milkdown/prose/src/toolkit/position/index.ts","../node_modules/@milkdown/prose/src/toolkit/prose/node.ts","../node_modules/@milkdown/prose/src/toolkit/prose/selection.ts","../node_modules/@milkdown/prose/src/toolkit/prose/helper.ts","../node_modules/nanoid/index.browser.js","../node_modules/@milkdown/react/src/Portals.tsx","../node_modules/@milkdown/react/src/ReactNode.tsx","../node_modules/@milkdown/react/src/ReactNodeView.tsx","../node_modules/@milkdown/react/src/Editor.tsx","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/code-fence.ts","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/image.ts","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/inner-editor.ts","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/input-chip.ts","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/task-list-item.ts","../node_modules/@milkdown/theme-nord/src/icon.ts","../node_modules/@milkdown/theme-nord/src/nord.ts","../node_modules/@milkdown/theme-nord/src/style.ts","../node_modules/@milkdown/theme-pack-helper/src/prosemirror-view.ts","../node_modules/@milkdown/theme-nord/src/index.ts","../node_modules/@milkdown/theme-nord/src/font.ts","../node_modules/@milkdown/theme-pack-helper/src/renderer-preset/index.ts","../node_modules/@milkdown/utils/src/atom/atom-list.ts","../node_modules/@milkdown/utils/src/composable/$prose.ts","../node_modules/@milkdown/utils/src/factory/common.ts","../node_modules/@milkdown/utils/src/factory/create-mark.ts","../node_modules/@milkdown/utils/src/factory/create-node.ts","../node_modules/@milkdown/utils/src/factory/create-plugin.ts","../node_modules/unist-util-visit-parents/node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/w3c-keyname/index.es.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getContainerUtilityClass } from './containerClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nconst ContainerRoot = styled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  width: '100%',\n  marginLeft: 'auto',\n  boxSizing: 'border-box',\n  marginRight: 'auto',\n  display: 'block'\n}, !ownerState.disableGutters && {\n  paddingLeft: theme.spacing(2),\n  paddingRight: theme.spacing(2),\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n}), ({\n  theme,\n  ownerState\n}) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n  const value = theme.breakpoints.values[breakpoint];\n\n  if (value !== 0) {\n    acc[theme.breakpoints.up(breakpoint)] = {\n      maxWidth: `${value}${theme.breakpoints.unit}`\n    };\n  }\n\n  return acc;\n}, {}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.maxWidth === 'xs' && {\n  [theme.breakpoints.up('xs')]: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== 'xs' && {\n  [theme.breakpoints.up(ownerState.maxWidth)]: {\n    maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n  }\n}));\nconst Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  });\n\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    fixed = false,\n    maxWidth = 'lg'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableGutters,\n    fixed,\n    maxWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ContainerRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import {joinPoint, canJoin, findWrapping, liftTarget, canSplit, ReplaceAroundStep, replaceStep} from \"prosemirror-transform\"\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Selection, TextSelection, NodeSelection, AllSelection} from \"prosemirror-state\"\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nexport function deleteSelection(state, dispatch) {\n  if (state.selection.empty) return false\n  if (dispatch) dispatch(state.tr.deleteSelection().scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nexport function joinBackward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    return false\n\n  let $cut = findCutBefore($cursor)\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    let range = $cursor.blockRange(), target = range && liftTarget(range)\n    if (target == null) return false\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  let before = $cut.nodeBefore\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    return true\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty)\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        let tr = state.tr.step(delStep)\n        tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side, only) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild)) {\n    if (node.isTextblock) return true\n    if (only && node.childCount != 1) return false\n  }\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nexport function selectNodeBackward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) return false\n    $cut = findCutBefore($head)\n  }\n  let node = $cut && $cut.nodeBefore\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView())\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) return $pos.doc.resolve($pos.before(i + 1))\n    if ($pos.node(i).type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nexport function joinForward(state, dispatch, view) {\n  let {$cursor} = state.selection\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    return false\n\n  let $cut = findCutAfter($cursor)\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) return false\n\n  let after = $cut.nodeAfter\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) return true\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    let delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty)\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        let tr = state.tr.step(delStep)\n        tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                        : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView())\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nexport function selectNodeForward(state, dispatch, view) {\n  let {$head, empty} = state.selection, $cut = $head\n  if (!empty) return false\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      return false\n    $cut = findCutAfter($head)\n  }\n  let node = $cut && $cut.nodeAfter\n  if (!node || !NodeSelection.isSelectable(node)) return false\n  if (dispatch)\n    dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView())\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) for (let i = $pos.depth - 1; i >= 0; i--) {\n    let parent = $pos.node(i)\n    if ($pos.index(i) + 1 < parent.childCount) return $pos.doc.resolve($pos.after(i + 1))\n    if (parent.type.spec.isolating) break\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nexport function joinUp(state, dispatch) {\n  let sel = state.selection, nodeSel = sel instanceof NodeSelection, point\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) return false\n    point = sel.from\n  } else {\n    point = joinPoint(state.doc, sel.from, -1)\n    if (point == null) return false\n  }\n  if (dispatch) {\n    let tr = state.tr.join(point)\n    if (nodeSel) tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nexport function joinDown(state, dispatch) {\n  let sel = state.selection, point\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) return false\n    point = sel.to\n  } else {\n    point = joinPoint(state.doc, sel.to, 1)\n    if (point == null) return false\n  }\n  if (dispatch)\n    dispatch(state.tr.join(point).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nexport function lift(state, dispatch) {\n  let {$from, $to} = state.selection\n  let range = $from.blockRange($to), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nexport function newlineInCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  if (dispatch) dispatch(state.tr.insertText(\"\\n\").scrollIntoView())\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (let i = 0; i < match.edgeCount; i++) {\n    let {type} = match.edge(i)\n    if (type.isTextblock && !type.hasRequiredAttrs()) return type\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nexport function exitCode(state, dispatch) {\n  let {$head, $anchor} = state.selection\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) return false\n  let above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after))\n  if (!above.canReplaceWith(after, after, type)) return false\n  if (dispatch) {\n    let pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill())\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nexport function createParagraphNear(state, dispatch) {\n  let sel = state.selection, {$from, $to} = sel\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) return false\n  let type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()))\n  if (!type || !type.isTextblock) return false\n  if (dispatch) {\n    let side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos\n    let tr = state.tr.insert(side, type.createAndFill())\n    tr.setSelection(TextSelection.create(tr.doc, side + 1))\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nexport function liftEmptyBlock(state, dispatch) {\n  let {$cursor} = state.selection\n  if (!$cursor || $cursor.parent.content.size) return false\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    let before = $cursor.before()\n    if (canSplit(state.doc, before)) {\n      if (dispatch) dispatch(state.tr.split(before).scrollIntoView())\n      return true\n    }\n  }\n  let range = $cursor.blockRange(), target = range && liftTarget(range)\n  if (target == null) return false\n  if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nexport function splitBlock(state, dispatch) {\n  let {$from, $to} = state.selection\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) return false\n    if (dispatch) dispatch(state.tr.split($from.pos).scrollIntoView())\n    return true\n  }\n\n  if (!$from.parent.isBlock) return false\n\n  if (dispatch) {\n    let atEnd = $to.parentOffset == $to.parent.content.size\n    let tr = state.tr\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) tr.deleteSelection()\n    let deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)))\n    let types = atEnd && deflt ? [{type: deflt}] : null\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types)\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}]\n      can = true\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types)\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n        let first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first)\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n          tr.setNodeMarkup(tr.mapping.map($from.before()), deflt)\n      }\n    }\n    dispatch(tr.scrollIntoView())\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nexport function splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (tr => {\n    let marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks())\n    if (marks) tr.ensureMarks(marks)\n    dispatch(tr)\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nexport function selectParentNode(state, dispatch) {\n  let {$from, to} = state.selection, pos\n  let same = $from.sharedDepth(to)\n  if (same == 0) return false\n  pos = $from.before(same)\n  if (dispatch) dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos)))\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nexport function selectAll(state, dispatch) {\n  if (dispatch) dispatch(state.tr.setSelection(new AllSelection(state.doc)))\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  let before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index()\n  if (!before || !after || !before.type.compatibleContent(after.type)) return false\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView())\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    return false\n  if (dispatch)\n    dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView())\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  let before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match\n  if (before.type.spec.isolating || after.type.spec.isolating) return false\n  if (joinMaybeClear(state, $cut, dispatch)) return true\n\n  let canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1)\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      let end = $cut.pos + after.nodeSize, wrap = Fragment.empty\n      for (let i = conn.length - 1; i >= 0; i--)\n        wrap = Fragment.from(conn[i].create(null, wrap))\n      wrap = Fragment.from(before.copy(wrap))\n      let tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true))\n      let joinAt = end + 2 * conn.length\n      if (canJoin(tr.doc, joinAt)) tr.join(joinAt)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n\n  let selAfter = Selection.findFrom($cut, 1)\n  let range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range)\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) dispatch(state.tr.lift(range, target).scrollIntoView())\n    return true\n  }\n\n  if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n    let at = before, wrap = []\n    for (;;) {\n      wrap.push(at)\n      if (at.isTextblock) break\n      at = at.lastChild\n    }\n    let afterText = after, afterDepth = 1\n    for (; !afterText.isTextblock; afterText = afterText.firstChild) afterDepth++\n    if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n      if (dispatch) {\n        let end = Fragment.empty\n        for (let i = wrap.length - 1; i >= 0; i--) end = Fragment.from(wrap[i].copy(end))\n        let tr = state.tr.step(new ReplaceAroundStep($cut.pos - wrap.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth,\n                                                     new Slice(end, wrap.length, 0), 0, true))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction selectTextblockSide(side) {\n  return function(state, dispatch) {\n    let sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to\n    let depth = $pos.depth\n    while ($pos.node(depth).isInline) {\n      if (!depth) return false\n      depth--\n    }\n    if (!$pos.node(depth).isTextblock) return false\n    if (dispatch)\n      dispatch(state.tr.setSelection(TextSelection.create(\n        state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth))))\n    return true\n  }\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the start of current text block.\nexport const selectTextblockStart = selectTextblockSide(-1)\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the end of current text block.\nexport const selectTextblockEnd = selectTextblockSide(1)\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nexport function wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return false\n    if (dispatch) dispatch(state.tr.wrap(range, wrapping).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nexport function setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    let {from, to} = state.selection\n    let applicable = false\n    state.doc.nodesBetween(from, to, (node, pos) => {\n      if (applicable) return false\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) return\n      if (node.type == nodeType) {\n        applicable = true\n      } else {\n        let $pos = state.doc.resolve(pos), index = $pos.index()\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType)\n      }\n    })\n    if (!applicable) return false\n    if (dispatch) dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView())\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  for (let i = 0; i < ranges.length; i++) {\n    let {$from, $to} = ranges[i]\n    let can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false\n    doc.nodesBetween($from.pos, $to.pos, node => {\n      if (can) return false\n      can = node.inlineContent && node.type.allowsMarkType(type)\n    })\n    if (can) return true\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nexport function toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    let {empty, $cursor, ranges} = state.selection\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) return false\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          dispatch(state.tr.removeStoredMark(markType))\n        else\n          dispatch(state.tr.addStoredMark(markType.create(attrs)))\n      } else {\n        let has = false, tr = state.tr\n        for (let i = 0; !has && i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType)\n        }\n        for (let i = 0; i < ranges.length; i++) {\n          let {$from, $to} = ranges[i]\n          if (has) {\n            tr.removeMark($from.pos, $to.pos, markType)\n          } else {\n            let from = $from.pos, to = $to.pos, start = $from.nodeAfter, end = $to.nodeBefore\n            let spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0\n            let spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd }\n            tr.addMark(from, to, markType.create(attrs))\n          }\n        }\n        dispatch(tr.scrollIntoView())\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return tr => {\n    if (!tr.isGeneric) return dispatch(tr)\n\n    let ranges = []\n    for (let i = 0; i < tr.mapping.maps.length; i++) {\n      let map = tr.mapping.maps[i]\n      for (let j = 0; j < ranges.length; j++)\n        ranges[j] = map.map(ranges[j])\n      map.forEach((_s, _e, from, to) => ranges.push(from, to))\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    let joinable = []\n    for (let i = 0; i < ranges.length; i += 2) {\n      let from = ranges[i], to = ranges[i + 1]\n      let $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth)\n      for (let index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        let after = parent.maybeChild(index)\n        if (!after) break\n        if (index && joinable.indexOf(pos) == -1) {\n          let before = parent.child(index - 1)\n          if (before.type == after.type && isJoinable(before, after))\n            joinable.push(pos)\n        }\n        pos += after.nodeSize\n      }\n    }\n    // Join the joinable points\n    joinable.sort((a, b) => a - b)\n    for (let i = joinable.length - 1; i >= 0; i--) {\n      if (canJoin(tr.doc, joinable[i])) tr.join(joinable[i])\n    }\n    dispatch(tr)\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nexport function autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    let types = isJoinable\n    isJoinable = node => types.indexOf(node.type.name) > -1\n  }\n  return (state, dispatch, view) => command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable), view)\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nexport function chainCommands(...commands) {\n  return function(state, dispatch, view) {\n    for (let i = 0; i < commands.length; i++)\n      if (commands[i](state, dispatch, view)) return true\n    return false\n  }\n}\n\nlet backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward)\nlet del = chainCommands(deleteSelection, joinForward, selectNodeForward)\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nexport let pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Shift-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n}\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nexport let macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Ctrl-a\": selectTextblockStart,\n  \"Ctrl-e\": selectTextblockEnd\n}\nfor (let key in pcBaseKeymap) macBaseKeymap[key] = pcBaseKeymap[key]\n\n// declare global: os, navigator\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nexport let baseKeymap = mac ? macBaseKeymap : pcBaseKeymap\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config,\n\n    props: {\n      handleDOMEvents: {\n        beforeinput(view, e) {\n          let handled = e.inputType == \"historyUndo\" ? undo(view.state, view.dispatch) :\n              e.inputType == \"historyRedo\" ? redo(view.state, view.dispatch) : false\n          if (handled) e.preventDefault()\n          return handled\n        }\n      }\n    }\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n","import {Plugin} from \"prosemirror-state\"\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nexport class InputRule {\n  // :: (RegExp, union<string, (state: EditorState, match: [string], start: number, end: number) → ?Transaction>)\n  // Create an input rule. The rule applies when the user typed\n  // something and the text directly in front of the cursor matches\n  // `match`, which should end with `$`.\n  //\n  // The `handler` can be a string, in which case the matched text, or\n  // the first matched group in the regexp, is replaced by that\n  // string.\n  //\n  // Or a it can be a function, which will be called with the match\n  // array produced by\n  // [`RegExp.exec`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec),\n  // as well as the start and end of the matched range, and which can\n  // return a [transaction](#state.Transaction) that describes the\n  // rule's effect, or null to indicate the input was not handled.\n  constructor(match, handler) {\n    this.match = match\n    this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler\n  }\n}\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    let insert = string\n    if (match[1]) {\n      let offset = match[0].lastIndexOf(match[1])\n      insert += match[0].slice(offset + match[1].length)\n      start += offset\n      let cutOff = start - end\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert\n        start = end\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nconst MAX_MATCH = 500\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nexport function inputRules({rules}) {\n  let plugin = new Plugin({\n    state: {\n      init() { return null },\n      apply(tr, prev) {\n        let stored = tr.getMeta(this)\n        if (stored) return stored\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: (view) => {\n          setTimeout(() => {\n            let {$cursor} = view.state.selection\n            if ($cursor) run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin)\n          })\n        }\n      }\n    },\n\n    isInputRules: true\n  })\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) return false\n  let state = view.state, $from = state.doc.resolve(from)\n  if ($from.parent.type.spec.code) return false\n  let textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text\n  for (let i = 0; i < rules.length; i++) {\n    let match = rules[i].match.exec(textBefore)\n    let tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to)\n    if (!tr) continue\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from, to, text}))\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nexport function undoInputRule(state, dispatch) {\n  let plugins = state.plugins\n  for (let i = 0; i < plugins.length; i++) {\n    let plugin = plugins[i], undoable\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        let tr = state.tr, toUndo = undoable.transform\n        for (let j = toUndo.steps.length - 1; j >= 0; j--)\n          tr.step(toUndo.steps[j].invert(toUndo.docs[j]))\n        if (undoable.text) {\n          let marks = tr.doc.resolve(undoable.from).marks()\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks))\n        } else {\n          tr.delete(undoable.from, undoable.to)\n        }\n        dispatch(tr)\n      }\n      return true\n    }\n  }\n  return false\n}\n","import {InputRule} from \"./inputrules\"\n\n// :: InputRule Converts double dashes to an emdash.\nexport const emDash = new InputRule(/--$/, \"—\")\n// :: InputRule Converts three dots to an ellipsis character.\nexport const ellipsis = new InputRule(/\\.\\.\\.$/, \"…\")\n// :: InputRule “Smart” opening double quotes.\nexport const openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\")\n// :: InputRule “Smart” closing double quotes.\nexport const closeDoubleQuote = new InputRule(/\"$/, \"”\")\n// :: InputRule “Smart” opening single quotes.\nexport const openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\")\n// :: InputRule “Smart” closing single quotes.\nexport const closeSingleQuote = new InputRule(/'$/, \"’\")\n\n// :: [InputRule] Smart-quote related input rules.\nexport const smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote]\n","import {InputRule} from \"./inputrules\"\nimport {findWrapping, canJoin} from \"prosemirror-transform\"\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nexport function wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    let tr = state.tr.delete(start, end)\n    let $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs)\n    if (!wrapping) return null\n    tr.wrap(range, wrapping)\n    let before = tr.doc.resolve(start - 1).nodeBefore\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      tr.join(start - 1)\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nexport function textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, (state, match, start, end) => {\n    let $start = state.doc.resolve(start)\n    let attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) return null\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n","import {base, keyName} from \"w3c-keyname\"\nimport {Plugin} from \"prosemirror-state\"\n\n// declare global: navigator\n\nconst mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false\n\nfunction normalizeKeyName(name) {\n  let parts = name.split(/-(?!$)/), result = parts[parts.length - 1]\n  if (result == \"Space\") result = \" \"\n  let alt, ctrl, shift, meta\n  for (let i = 0; i < parts.length - 1; i++) {\n    let mod = parts[i]\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true\n    else if (/^a(lt)?$/i.test(mod)) alt = true\n    else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true\n    else if (/^s(hift)?$/i.test(mod)) shift = true\n    else if (/^mod$/i.test(mod)) { if (mac) meta = true; else ctrl = true }\n    else throw new Error(\"Unrecognized modifier name: \" + mod)\n  }\n  if (alt) result = \"Alt-\" + result\n  if (ctrl) result = \"Ctrl-\" + result\n  if (meta) result = \"Meta-\" + result\n  if (shift) result = \"Shift-\" + result\n  return result\n}\n\nfunction normalize(map) {\n  let copy = Object.create(null)\n  for (let prop in map) copy[normalizeKeyName(prop)] = map[prop]\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name\n  if (event.ctrlKey) name = \"Ctrl-\" + name\n  if (event.metaKey) name = \"Meta-\" + name\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nexport function keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap)), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nexport function keydownHandler(bindings) {\n  let map = normalize(bindings)\n  return function(view, event) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \", baseName\n    let direct = map[modifiers(name, event, !isChar)]\n    if (direct && direct(view.state, view.dispatch, view)) return true\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      let fromCode = map[modifiers(baseName, event, true)]\n      if (fromCode && fromCode(view.state, view.dispatch, view)) return true\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      let withShift = map[modifiers(name, event, true)]\n      if (withShift && withShift(view.state, view.dispatch, view)) return true\n    }\n    return false\n  }\n}\n","// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","export function findDiffStart(a, b, pos) {\n  for (let i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      return a.childCount == b.childCount ? null : pos\n\n    let childA = a.child(i), childB = b.child(i)\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) return pos\n\n    if (childA.isText && childA.text != childB.text) {\n      for (let j = 0; childA.text[j] == childB.text[j]; j++)\n        pos++\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffStart(childA.content, childB.content, pos + 1)\n      if (inner != null) return inner\n    }\n    pos += childA.nodeSize\n  }\n}\n\nexport function findDiffEnd(a, b, posA, posB) {\n  for (let iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      return iA == iB ? null : {a: posA, b: posB}\n\n    let childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize\n    if (childA == childB) {\n      posA -= size; posB -= size\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) return {a: posA, b: posB}\n\n    if (childA.isText && childA.text != childB.text) {\n      let same = 0, minSize = Math.min(childA.text.length, childB.text.length)\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      let inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1)\n      if (inner) return inner\n    }\n    posA -= size; posB -= size\n  }\n}\n","import {findDiffStart, findDiffEnd} from \"./diff\"\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nexport class Fragment {\n  constructor(content, size) {\n    this.content = content\n    // :: number\n    // The size of the fragment, which is the total of the size of its\n    // content nodes.\n    this.size = size || 0\n    if (size == null) for (let i = 0; i < content.length; i++)\n      this.size += content[i].nodeSize\n  }\n\n  // :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes between the given two\n  // positions (relative to start of this fragment). Doesn't descend\n  // into a node when the callback returns `false`.\n  nodesBetween(from, to, f, nodeStart = 0, parent) {\n    for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n        let start = pos + 1\n        child.nodesBetween(Math.max(0, from - start),\n                           Math.min(child.content.size, to - start),\n                           f, nodeStart + start)\n      }\n      pos = end\n    }\n  }\n\n  // :: ((node: Node, pos: number, parent: Node) → ?bool)\n  // Call the given callback for every descendant node. The callback\n  // may return `false` to prevent traversal of a given node's children.\n  descendants(f) {\n    this.nodesBetween(0, this.size, f)\n  }\n\n  // :: (number, number, ?string, ?union<string, (leafNode: Node) → string>) → string\n  // Extract the text between `from` and `to`. See the same method on\n  // [`Node`](#model.Node.textBetween).\n  textBetween(from, to, blockSeparator, leafText) {\n    let text = \"\", separated = true\n    this.nodesBetween(from, to, (node, pos) => {\n      if (node.isText) {\n        text += node.text.slice(Math.max(from, pos) - pos, to - pos)\n        separated = !blockSeparator\n      } else if (node.isLeaf && leafText) {\n        text += typeof leafText === 'function' ? leafText(node): leafText\n        separated = !blockSeparator\n      } else if (!separated && node.isBlock) {\n        text += blockSeparator\n        separated = true\n      }\n    }, 0)\n    return text\n  }\n\n  // :: (Fragment) → Fragment\n  // Create a new fragment containing the combined content of this\n  // fragment and the other.\n  append(other) {\n    if (!other.size) return this\n    if (!this.size) return other\n    let last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0\n    if (last.isText && last.sameMarkup(first)) {\n      content[content.length - 1] = last.withText(last.text + first.text)\n      i = 1\n    }\n    for (; i < other.content.length; i++) content.push(other.content[i])\n    return new Fragment(content, this.size + other.size)\n  }\n\n  // :: (number, ?number) → Fragment\n  // Cut out the sub-fragment between the two given positions.\n  cut(from, to) {\n    if (to == null) to = this.size\n    if (from == 0 && to == this.size) return this\n    let result = [], size = 0\n    if (to > from) for (let i = 0, pos = 0; pos < to; i++) {\n      let child = this.content[i], end = pos + child.nodeSize\n      if (end > from) {\n        if (pos < from || end > to) {\n          if (child.isText)\n            child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos))\n          else\n            child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1))\n        }\n        result.push(child)\n        size += child.nodeSize\n      }\n      pos = end\n    }\n    return new Fragment(result, size)\n  }\n\n  cutByIndex(from, to) {\n    if (from == to) return Fragment.empty\n    if (from == 0 && to == this.content.length) return this\n    return new Fragment(this.content.slice(from, to))\n  }\n\n  // :: (number, Node) → Fragment\n  // Create a new fragment in which the node at the given index is\n  // replaced by the given node.\n  replaceChild(index, node) {\n    let current = this.content[index]\n    if (current == node) return this\n    let copy = this.content.slice()\n    let size = this.size + node.nodeSize - current.nodeSize\n    copy[index] = node\n    return new Fragment(copy, size)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by prepending the given node to this\n  // fragment.\n  addToStart(node) {\n    return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n  }\n\n  // : (Node) → Fragment\n  // Create a new fragment by appending the given node to this\n  // fragment.\n  addToEnd(node) {\n    return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n  }\n\n  // :: (Fragment) → bool\n  // Compare this fragment to another one.\n  eq(other) {\n    if (this.content.length != other.content.length) return false\n    for (let i = 0; i < this.content.length; i++)\n      if (!this.content[i].eq(other.content[i])) return false\n    return true\n  }\n\n  // :: ?Node\n  // The first child of the fragment, or `null` if it is empty.\n  get firstChild() { return this.content.length ? this.content[0] : null }\n\n  // :: ?Node\n  // The last child of the fragment, or `null` if it is empty.\n  get lastChild() { return this.content.length ? this.content[this.content.length - 1] : null }\n\n  // :: number\n  // The number of child nodes in this fragment.\n  get childCount() { return this.content.length }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raise an error when the\n  // index is out of range.\n  child(index) {\n    let found = this.content[index]\n    if (!found) throw new RangeError(\"Index \" + index + \" out of range for \" + this)\n    return found\n  }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) {\n    return this.content[index]\n  }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) {\n    for (let i = 0, p = 0; i < this.content.length; i++) {\n      let child = this.content[i]\n      f(child, p, i)\n      p += child.nodeSize\n    }\n  }\n\n  // :: (Fragment) → ?number\n  // Find the first position at which this fragment and another\n  // fragment differ, or `null` if they are the same.\n  findDiffStart(other, pos = 0) {\n    return findDiffStart(this, other, pos)\n  }\n\n  // :: (Fragment) → ?{a: number, b: number}\n  // Find the first position, searching from the end, at which this\n  // fragment and the given fragment differ, or `null` if they are the\n  // same. Since this position will not be the same in both nodes, an\n  // object with two separate positions is returned.\n  findDiffEnd(other, pos = this.size, otherPos = other.size) {\n    return findDiffEnd(this, other, pos, otherPos)\n  }\n\n  // : (number, ?number) → {index: number, offset: number}\n  // Find the index and inner offset corresponding to a given relative\n  // position in this fragment. The result object will be reused\n  // (overwritten) the next time the function is called. (Not public.)\n  findIndex(pos, round = -1) {\n    if (pos == 0) return retIndex(0, pos)\n    if (pos == this.size) return retIndex(this.content.length, pos)\n    if (pos > this.size || pos < 0) throw new RangeError(`Position ${pos} outside of fragment (${this})`)\n    for (let i = 0, curPos = 0;; i++) {\n      let cur = this.child(i), end = curPos + cur.nodeSize\n      if (end >= pos) {\n        if (end == pos || round > 0) return retIndex(i + 1, end)\n        return retIndex(i, curPos)\n      }\n      curPos = end\n    }\n  }\n\n  // :: () → string\n  // Return a debugging string that describes this fragment.\n  toString() { return \"<\" + this.toStringInner() + \">\" }\n\n  toStringInner() { return this.content.join(\", \") }\n\n  // :: () → ?Object\n  // Create a JSON-serializeable representation of this fragment.\n  toJSON() {\n    return this.content.length ? this.content.map(n => n.toJSON()) : null\n  }\n\n  // :: (Schema, ?Object) → Fragment\n  // Deserialize a fragment from its JSON representation.\n  static fromJSON(schema, value) {\n    if (!value) return Fragment.empty\n    if (!Array.isArray(value)) throw new RangeError(\"Invalid input for Fragment.fromJSON\")\n    return new Fragment(value.map(schema.nodeFromJSON))\n  }\n\n  // :: ([Node]) → Fragment\n  // Build a fragment from an array of nodes. Ensures that adjacent\n  // text nodes with the same marks are joined together.\n  static fromArray(array) {\n    if (!array.length) return Fragment.empty\n    let joined, size = 0\n    for (let i = 0; i < array.length; i++) {\n      let node = array[i]\n      size += node.nodeSize\n      if (i && node.isText && array[i - 1].sameMarkup(node)) {\n        if (!joined) joined = array.slice(0, i)\n        joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text)\n      } else if (joined) {\n        joined.push(node)\n      }\n    }\n    return new Fragment(joined || array, size)\n  }\n\n  // :: (?union<Fragment, Node, [Node]>) → Fragment\n  // Create a fragment from something that can be interpreted as a set\n  // of nodes. For `null`, it returns the empty fragment. For a\n  // fragment, the fragment itself. For a node or array of nodes, a\n  // fragment containing those nodes.\n  static from(nodes) {\n    if (!nodes) return Fragment.empty\n    if (nodes instanceof Fragment) return nodes\n    if (Array.isArray(nodes)) return this.fromArray(nodes)\n    if (nodes.attrs) return new Fragment([nodes], nodes.nodeSize)\n    throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                         (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n  }\n}\n\nconst found = {index: 0, offset: 0}\nfunction retIndex(index, offset) {\n  found.index = index\n  found.offset = offset\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0)\n","export function compareDeep(a, b) {\n  if (a === b) return true\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) return false\n  let array = Array.isArray(a)\n  if (Array.isArray(b) != array) return false\n  if (array) {\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++) if (!compareDeep(a[i], b[i])) return false\n  } else {\n    for (let p in a) if (!(p in b) || !compareDeep(a[p], b[p])) return false\n    for (let p in b) if (!(p in a)) return false\n  }\n  return true\n}\n","import {compareDeep} from \"./comparedeep\"\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nexport class Mark {\n  constructor(type, attrs) {\n    // :: MarkType\n    // The type of this mark.\n    this.type = type\n    // :: Object\n    // The attributes associated with this mark.\n    this.attrs = attrs\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Given a set of marks, create a new set which contains this one as\n  // well, in the right position. If this mark is already in the set,\n  // the set itself is returned. If any marks that are set to be\n  // [exclusive](#model.MarkSpec.excludes) with this mark are present,\n  // those are replaced by this one.\n  addToSet(set) {\n    let copy, placed = false\n    for (let i = 0; i < set.length; i++) {\n      let other = set[i]\n      if (this.eq(other)) return set\n      if (this.type.excludes(other.type)) {\n        if (!copy) copy = set.slice(0, i)\n      } else if (other.type.excludes(this.type)) {\n        return set\n      } else {\n        if (!placed && other.type.rank > this.type.rank) {\n          if (!copy) copy = set.slice(0, i)\n          copy.push(this)\n          placed = true\n        }\n        if (copy) copy.push(other)\n      }\n    }\n    if (!copy) copy = set.slice()\n    if (!placed) copy.push(this)\n    return copy\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Remove this mark from the given set, returning a new set. If this\n  // mark is not in the set, the set itself is returned.\n  removeFromSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i]))\n        return set.slice(0, i).concat(set.slice(i + 1))\n    return set\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether this mark is in the given set of marks.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (this.eq(set[i])) return true\n    return false\n  }\n\n  // :: (Mark) → bool\n  // Test whether this mark has the same type and attributes as\n  // another mark.\n  eq(other) {\n    return this == other ||\n      (this.type == other.type && compareDeep(this.attrs, other.attrs))\n  }\n\n  // :: () → Object\n  // Convert this mark to a JSON-serializeable representation.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    return obj\n  }\n\n  // :: (Schema, Object) → Mark\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Mark.fromJSON\")\n    let type = schema.marks[json.type]\n    if (!type) throw new RangeError(`There is no mark type ${json.type} in this schema`)\n    return type.create(json.attrs)\n  }\n\n  // :: ([Mark], [Mark]) → bool\n  // Test whether two sets of marks are identical.\n  static sameSet(a, b) {\n    if (a == b) return true\n    if (a.length != b.length) return false\n    for (let i = 0; i < a.length; i++)\n      if (!a[i].eq(b[i])) return false\n    return true\n  }\n\n  // :: (?union<Mark, [Mark]>) → [Mark]\n  // Create a properly sorted mark set from null, a single mark, or an\n  // unsorted array of marks.\n  static setFrom(marks) {\n    if (!marks || marks.length == 0) return Mark.none\n    if (marks instanceof Mark) return [marks]\n    let copy = marks.slice()\n    copy.sort((a, b) => a.type.rank - b.type.rank)\n    return copy\n  }\n}\n\n// :: [Mark] The empty set of marks.\nMark.none = []\n","import {Fragment} from \"./fragment\"\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nexport function ReplaceError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = ReplaceError.prototype\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype)\nReplaceError.prototype.constructor = ReplaceError\nReplaceError.prototype.name = \"ReplaceError\"\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nexport class Slice {\n  // :: (Fragment, number, number)\n  // Create a slice. When specifying a non-zero open depth, you must\n  // make sure that there are nodes of at least that depth at the\n  // appropriate side of the fragment—i.e. if the fragment is an empty\n  // paragraph node, `openStart` and `openEnd` can't be greater than 1.\n  //\n  // It is not necessary for the content of open nodes to conform to\n  // the schema's content constraints, though it should be a valid\n  // start/end/middle for such a node, depending on which sides are\n  // open.\n  constructor(content, openStart, openEnd) {\n    // :: Fragment The slice's content.\n    this.content = content\n    // :: number The open depth at the start.\n    this.openStart = openStart\n    // :: number The open depth at the end.\n    this.openEnd = openEnd\n  }\n\n  // :: number\n  // The size this slice would add when inserted into a document.\n  get size() {\n    return this.content.size - this.openStart - this.openEnd\n  }\n\n  insertAt(pos, fragment) {\n    let content = insertInto(this.content, pos + this.openStart, fragment, null)\n    return content && new Slice(content, this.openStart, this.openEnd)\n  }\n\n  removeBetween(from, to) {\n    return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n  }\n\n  // :: (Slice) → bool\n  // Tests whether this slice is equal to another slice.\n  eq(other) {\n    return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n  }\n\n  toString() {\n    return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n  }\n\n  // :: () → ?Object\n  // Convert a slice to a JSON-serializable representation.\n  toJSON() {\n    if (!this.content.size) return null\n    let json = {content: this.content.toJSON()}\n    if (this.openStart > 0) json.openStart = this.openStart\n    if (this.openEnd > 0) json.openEnd = this.openEnd\n    return json\n  }\n\n  // :: (Schema, ?Object) → Slice\n  // Deserialize a slice from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) return Slice.empty\n    let openStart = json.openStart || 0, openEnd = json.openEnd || 0\n    if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n      throw new RangeError(\"Invalid input for Slice.fromJSON\")\n    return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n  }\n\n  // :: (Fragment, ?bool) → Slice\n  // Create a slice from a fragment by taking the maximum possible\n  // open value on both side of the fragment.\n  static maxOpen(fragment, openIsolating=true) {\n    let openStart = 0, openEnd = 0\n    for (let n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) openStart++\n    for (let n = fragment.lastChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.lastChild) openEnd++\n    return new Slice(fragment, openStart, openEnd)\n  }\n}\n\nfunction removeRange(content, from, to) {\n  let {index, offset} = content.findIndex(from), child = content.maybeChild(index)\n  let {index: indexTo, offset: offsetTo} = content.findIndex(to)\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) throw new RangeError(\"Removing non-flat range\")\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) throw new RangeError(\"Removing non-flat range\")\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  let {index, offset} = content.findIndex(dist), child = content.maybeChild(index)\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) return null\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  let inner = insertInto(child.content, dist - offset - 1, insert)\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0)\n\nexport function replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    throw new ReplaceError(\"Inserted content deeper than insertion position\")\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    throw new ReplaceError(\"Inconsistent open depths\")\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  let index = $from.index(depth), node = $from.node(depth)\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    let inner = replaceOuter($from, $to, slice, depth + 1)\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    let parent = $from.parent, content = parent.content\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    let {start, end} = prepareSliceForReplace(slice, $from)\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name)\n}\n\nfunction joinable($before, $after, depth) {\n  let node = $before.node(depth)\n  checkJoin(node, $after.node(depth))\n  return node\n}\n\nfunction addNode(child, target) {\n  let last = target.length - 1\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    target[last] = child.withText(target[last].text + child.text)\n  else\n    target.push(child)\n}\n\nfunction addRange($start, $end, depth, target) {\n  let node = ($end || $start).node(depth)\n  let startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount\n  if ($start) {\n    startIndex = $start.index(depth)\n    if ($start.depth > depth) {\n      startIndex++\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target)\n      startIndex++\n    }\n  }\n  for (let i = startIndex; i < endIndex; i++) addNode(node.child(i), target)\n  if ($end && $end.depth == depth && $end.textOffset)\n    addNode($end.nodeBefore, target)\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    throw new ReplaceError(\"Invalid content for node \" + node.type.name)\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  let openStart = $from.depth > depth && joinable($from, $start, depth + 1)\n  let openEnd = $to.depth > depth && joinable($end, $to, depth + 1)\n\n  let content = []\n  addRange(null, $from, depth, content)\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd)\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content)\n  } else {\n    if (openStart)\n      addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content)\n    addRange($start, $end, depth, content)\n    if (openEnd)\n      addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  let content = []\n  addRange(null, $from, depth, content)\n  if ($from.depth > depth) {\n    let type = joinable($from, $to, depth + 1)\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content)\n  }\n  addRange($to, null, depth, content)\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  let extra = $along.depth - slice.openStart, parent = $along.node(extra)\n  let node = parent.copy(slice.content)\n  for (let i = extra - 1; i >= 0; i--)\n    node = $along.node(i).copy(Fragment.from(node))\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n","import {Mark} from \"./mark\"\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nexport class ResolvedPos {\n  constructor(pos, path, parentOffset) {\n    // :: number The position that was resolved.\n    this.pos = pos\n    this.path = path\n    // :: number\n    // The number of levels the parent node is from the root. If this\n    // position points directly into the root node, it is 0. If it\n    // points into a top-level paragraph, 1, and so on.\n    this.depth = path.length / 3 - 1\n    // :: number The offset this position has into its parent node.\n    this.parentOffset = parentOffset\n  }\n\n  resolveDepth(val) {\n    if (val == null) return this.depth\n    if (val < 0) return this.depth + val\n    return val\n  }\n\n  // :: Node\n  // The parent node that the position points into. Note that even if\n  // a position points into a text node, that node is not considered\n  // the parent—text nodes are ‘flat’ in this model, and have no content.\n  get parent() { return this.node(this.depth) }\n\n  // :: Node\n  // The root node in which the position was resolved.\n  get doc() { return this.node(0) }\n\n  // :: (?number) → Node\n  // The ancestor node at the given level. `p.node(p.depth)` is the\n  // same as `p.parent`.\n  node(depth) { return this.path[this.resolveDepth(depth) * 3] }\n\n  // :: (?number) → number\n  // The index into the ancestor at the given level. If this points at\n  // the 3rd node in the 2nd paragraph on the top level, for example,\n  // `p.index(0)` is 1 and `p.index(1)` is 2.\n  index(depth) { return this.path[this.resolveDepth(depth) * 3 + 1] }\n\n  // :: (?number) → number\n  // The index pointing after this position into the ancestor at the\n  // given level.\n  indexAfter(depth) {\n    depth = this.resolveDepth(depth)\n    return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the start of the node at the given\n  // level.\n  start(depth) {\n    depth = this.resolveDepth(depth)\n    return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n  }\n\n  // :: (?number) → number\n  // The (absolute) position at the end of the node at the given\n  // level.\n  end(depth) {\n    depth = this.resolveDepth(depth)\n    return this.start(depth) + this.node(depth).content.size\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly before the wrapping node at the\n  // given level, or, when `depth` is `this.depth + 1`, the original\n  // position.\n  before(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position before the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n  }\n\n  // :: (?number) → number\n  // The (absolute) position directly after the wrapping node at the\n  // given level, or the original position when `depth` is `this.depth + 1`.\n  after(depth) {\n    depth = this.resolveDepth(depth)\n    if (!depth) throw new RangeError(\"There is no position after the top-level node\")\n    return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n  }\n\n  // :: number\n  // When this position points into a text node, this returns the\n  // distance between the position and the start of the text node.\n  // Will be zero for positions that point between nodes.\n  get textOffset() { return this.pos - this.path[this.path.length - 1] }\n\n  // :: ?Node\n  // Get the node directly after the position, if any. If the position\n  // points into a text node, only the part of that node after the\n  // position is returned.\n  get nodeAfter() {\n    let parent = this.parent, index = this.index(this.depth)\n    if (index == parent.childCount) return null\n    let dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index)\n    return dOff ? parent.child(index).cut(dOff) : child\n  }\n\n  // :: ?Node\n  // Get the node directly before the position, if any. If the\n  // position points into a text node, only the part of that node\n  // before the position is returned.\n  get nodeBefore() {\n    let index = this.index(this.depth)\n    let dOff = this.pos - this.path[this.path.length - 1]\n    if (dOff) return this.parent.child(index).cut(0, dOff)\n    return index == 0 ? null : this.parent.child(index - 1)\n  }\n\n  // :: (number, ?number) → number\n  // Get the position at the given index in the parent node at the\n  // given depth (which defaults to `this.depth`).\n  posAtIndex(index, depth) {\n    depth = this.resolveDepth(depth)\n    let node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n    for (let i = 0; i < index; i++) pos += node.child(i).nodeSize\n    return pos\n  }\n\n  // :: () → [Mark]\n  // Get the marks at this position, factoring in the surrounding\n  // marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n  // position is at the start of a non-empty node, the marks of the\n  // node after it (if any) are returned.\n  marks() {\n    let parent = this.parent, index = this.index()\n\n    // In an empty parent, return the empty array\n    if (parent.content.size == 0) return Mark.none\n\n    // When inside a text node, just return the text node's marks\n    if (this.textOffset) return parent.child(index).marks\n\n    let main = parent.maybeChild(index - 1), other = parent.maybeChild(index)\n    // If the `after` flag is true of there is no node before, make\n    // the node after this position the main reference.\n    if (!main) { let tmp = main; main = other; other = tmp }\n\n    // Use all marks in the main node, except those that have\n    // `inclusive` set to false and are not present in the other node.\n    let marks = main.marks\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n        marks = marks[i--].removeFromSet(marks)\n\n    return marks\n  }\n\n  // :: (ResolvedPos) → ?[Mark]\n  // Get the marks after the current position, if any, except those\n  // that are non-inclusive and not present at position `$end`. This\n  // is mostly useful for getting the set of marks to preserve after a\n  // deletion. Will return `null` if this position is at the end of\n  // its parent node or its parent node isn't a textblock (in which\n  // case no marks should be preserved).\n  marksAcross($end) {\n    let after = this.parent.maybeChild(this.index())\n    if (!after || !after.isInline) return null\n\n    let marks = after.marks, next = $end.parent.maybeChild($end.index())\n    for (var i = 0; i < marks.length; i++)\n      if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n        marks = marks[i--].removeFromSet(marks)\n    return marks\n  }\n\n  // :: (number) → number\n  // The depth up to which this position and the given (non-resolved)\n  // position share the same parent nodes.\n  sharedDepth(pos) {\n    for (let depth = this.depth; depth > 0; depth--)\n      if (this.start(depth) <= pos && this.end(depth) >= pos) return depth\n    return 0\n  }\n\n  // :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n  // Returns a range based on the place where this position and the\n  // given position diverge around block content. If both point into\n  // the same textblock, for example, a range around that textblock\n  // will be returned. If they point into different blocks, the range\n  // around those blocks in their shared ancestor is returned. You can\n  // pass in an optional predicate that will be called with a parent\n  // node to see if a range into that parent is acceptable.\n  blockRange(other = this, pred) {\n    if (other.pos < this.pos) return other.blockRange(this)\n    for (let d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n      if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n        return new NodeRange(this, other, d)\n  }\n\n  // :: (ResolvedPos) → bool\n  // Query whether the given position shares the same parent node.\n  sameParent(other) {\n    return this.pos - this.parentOffset == other.pos - other.parentOffset\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the greater of this and the given position.\n  max(other) {\n    return other.pos > this.pos ? other : this\n  }\n\n  // :: (ResolvedPos) → ResolvedPos\n  // Return the smaller of this and the given position.\n  min(other) {\n    return other.pos < this.pos ? other : this\n  }\n\n  toString() {\n    let str = \"\"\n    for (let i = 1; i <= this.depth; i++)\n      str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1)\n    return str + \":\" + this.parentOffset\n  }\n\n  static resolve(doc, pos) {\n    if (!(pos >= 0 && pos <= doc.content.size)) throw new RangeError(\"Position \" + pos + \" out of range\")\n    let path = []\n    let start = 0, parentOffset = pos\n    for (let node = doc;;) {\n      let {index, offset} = node.content.findIndex(parentOffset)\n      let rem = parentOffset - offset\n      path.push(node, index, start + offset)\n      if (!rem) break\n      node = node.child(index)\n      if (node.isText) break\n      parentOffset = rem - 1\n      start += offset + 1\n    }\n    return new ResolvedPos(pos, path, parentOffset)\n  }\n\n  static resolveCached(doc, pos) {\n    for (let i = 0; i < resolveCache.length; i++) {\n      let cached = resolveCache[i]\n      if (cached.pos == pos && cached.doc == doc) return cached\n    }\n    let result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos)\n    resolveCachePos = (resolveCachePos + 1) % resolveCacheSize\n    return result\n  }\n}\n\nlet resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nexport class NodeRange {\n  // :: (ResolvedPos, ResolvedPos, number)\n  // Construct a node range. `$from` and `$to` should point into the\n  // same node until at least the given `depth`, since a node range\n  // denotes an adjacent set of nodes in a single parent node.\n  constructor($from, $to, depth) {\n    // :: ResolvedPos A resolved position along the start of the\n    // content. May have a `depth` greater than this object's `depth`\n    // property, since these are the positions that were used to\n    // compute the range, not re-resolved positions directly at its\n    // boundaries.\n    this.$from = $from\n    // :: ResolvedPos A position along the end of the content. See\n    // caveat for [`$from`](#model.NodeRange.$from).\n    this.$to = $to\n    // :: number The depth of the node that this range points into.\n    this.depth = depth\n  }\n\n  // :: number The position at the start of the range.\n  get start() { return this.$from.before(this.depth + 1) }\n  // :: number The position at the end of the range.\n  get end() { return this.$to.after(this.depth + 1) }\n\n  // :: Node The parent node that the range points into.\n  get parent() { return this.$from.node(this.depth) }\n  // :: number The start index of the range in the parent node.\n  get startIndex() { return this.$from.index(this.depth) }\n  // :: number The end index of the range in the parent node.\n  get endIndex() { return this.$to.indexAfter(this.depth) }\n}\n","import {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {Slice, replace} from \"./replace\"\nimport {ResolvedPos} from \"./resolvedpos\"\nimport {compareDeep} from \"./comparedeep\"\n\nconst emptyAttrs = Object.create(null)\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nexport class Node {\n  constructor(type, attrs, content, marks) {\n    // :: NodeType\n    // The type of node that this is.\n    this.type = type\n\n    // :: Object\n    // An object mapping attribute names to values. The kind of\n    // attributes allowed and required are\n    // [determined](#model.NodeSpec.attrs) by the node type.\n    this.attrs = attrs\n\n    // :: Fragment\n    // A container holding the node's children.\n    this.content = content || Fragment.empty\n\n    // :: [Mark]\n    // The marks (things like whether it is emphasized or part of a\n    // link) applied to this node.\n    this.marks = marks || Mark.none\n  }\n\n  // text:: ?string\n  // For text nodes, this contains the node's text content.\n\n  // :: number\n  // The size of this node, as defined by the integer-based [indexing\n  // scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n  // amount of characters. For other leaf nodes, it is one. For\n  // non-leaf nodes, it is the size of the content plus two (the start\n  // and end token).\n  get nodeSize() { return this.isLeaf ? 1 : 2 + this.content.size }\n\n  // :: number\n  // The number of children that the node has.\n  get childCount() { return this.content.childCount }\n\n  // :: (number) → Node\n  // Get the child node at the given index. Raises an error when the\n  // index is out of range.\n  child(index) { return this.content.child(index) }\n\n  // :: (number) → ?Node\n  // Get the child node at the given index, if it exists.\n  maybeChild(index) { return this.content.maybeChild(index) }\n\n  // :: ((node: Node, offset: number, index: number))\n  // Call `f` for every child node, passing the node, its offset\n  // into this parent node, and its index.\n  forEach(f) { this.content.forEach(f) }\n\n  // :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n  // Invoke a callback for all descendant nodes recursively between\n  // the given two positions that are relative to start of this node's\n  // content. The callback is invoked with the node, its\n  // parent-relative position, its parent node, and its child index.\n  // When the callback returns false for a given node, that node's\n  // children will not be recursed over. The last parameter can be\n  // used to specify a starting position to count from.\n  nodesBetween(from, to, f, startPos = 0) {\n    this.content.nodesBetween(from, to, f, startPos, this)\n  }\n\n  // :: ((node: Node, pos: number, parent: Node, index: number) → ?bool)\n  // Call the given callback for every descendant node. Doesn't\n  // descend into a node when the callback returns `false`.\n  descendants(f) {\n    this.nodesBetween(0, this.content.size, f)\n  }\n\n  // :: string\n  // Concatenates all the text nodes found in this fragment and its\n  // children.\n  get textContent() { return this.textBetween(0, this.content.size, \"\") }\n\n  // :: (number, number, ?string, ?union<string, ?(leafNode: Node) -> string>) → string\n  // Get all text between positions `from` and `to`. When\n  // `blockSeparator` is given, it will be inserted to separate text\n  // from different block nodes. When `leafText` is given, it'll be\n  // inserted for every non-text leaf node encountered.\n  textBetween(from, to, blockSeparator, leafText) {\n    return this.content.textBetween(from, to, blockSeparator, leafText)\n  }\n\n  // :: ?Node\n  // Returns this node's first child, or `null` if there are no\n  // children.\n  get firstChild() { return this.content.firstChild }\n\n  // :: ?Node\n  // Returns this node's last child, or `null` if there are no\n  // children.\n  get lastChild() { return this.content.lastChild }\n\n  // :: (Node) → bool\n  // Test whether two nodes represent the same piece of document.\n  eq(other) {\n    return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n  }\n\n  // :: (Node) → bool\n  // Compare the markup (type, attributes, and marks) of this node to\n  // those of another. Returns `true` if both have the same markup.\n  sameMarkup(other) {\n    return this.hasMarkup(other.type, other.attrs, other.marks)\n  }\n\n  // :: (NodeType, ?Object, ?[Mark]) → bool\n  // Check whether this node's markup correspond to the given type,\n  // attributes, and marks.\n  hasMarkup(type, attrs, marks) {\n    return this.type == type &&\n      compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n      Mark.sameSet(this.marks, marks || Mark.none)\n  }\n\n  // :: (?Fragment) → Node\n  // Create a new node with the same markup as this node, containing\n  // the given content (or empty, if no content is given).\n  copy(content = null) {\n    if (content == this.content) return this\n    return new this.constructor(this.type, this.attrs, content, this.marks)\n  }\n\n  // :: ([Mark]) → Node\n  // Create a copy of this node, with the given set of marks instead\n  // of the node's own marks.\n  mark(marks) {\n    return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n  }\n\n  // :: (number, ?number) → Node\n  // Create a copy of this node with only the content between the\n  // given positions. If `to` is not given, it defaults to the end of\n  // the node.\n  cut(from, to) {\n    if (from == 0 && to == this.content.size) return this\n    return this.copy(this.content.cut(from, to))\n  }\n\n  // :: (number, ?number) → Slice\n  // Cut out the part of the document between the given positions, and\n  // return it as a `Slice` object.\n  slice(from, to = this.content.size, includeParents = false) {\n    if (from == to) return Slice.empty\n\n    let $from = this.resolve(from), $to = this.resolve(to)\n    let depth = includeParents ? 0 : $from.sharedDepth(to)\n    let start = $from.start(depth), node = $from.node(depth)\n    let content = node.content.cut($from.pos - start, $to.pos - start)\n    return new Slice(content, $from.depth - depth, $to.depth - depth)\n  }\n\n  // :: (number, number, Slice) → Node\n  // Replace the part of the document between the given positions with\n  // the given slice. The slice must 'fit', meaning its open sides\n  // must be able to connect to the surrounding content, and its\n  // content nodes must be valid children for the node they are placed\n  // into. If any of this is violated, an error of type\n  // [`ReplaceError`](#model.ReplaceError) is thrown.\n  replace(from, to, slice) {\n    return replace(this.resolve(from), this.resolve(to), slice)\n  }\n\n  // :: (number) → ?Node\n  // Find the node directly after the given position.\n  nodeAt(pos) {\n    for (let node = this;;) {\n      let {index, offset} = node.content.findIndex(pos)\n      node = node.maybeChild(index)\n      if (!node) return null\n      if (offset == pos || node.isText) return node\n      pos -= offset + 1\n    }\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node after the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childAfter(pos) {\n    let {index, offset} = this.content.findIndex(pos)\n    return {node: this.content.maybeChild(index), index, offset}\n  }\n\n  // :: (number) → {node: ?Node, index: number, offset: number}\n  // Find the (direct) child node before the given offset, if any,\n  // and return it along with its index and offset relative to this\n  // node.\n  childBefore(pos) {\n    if (pos == 0) return {node: null, index: 0, offset: 0}\n    let {index, offset} = this.content.findIndex(pos)\n    if (offset < pos) return {node: this.content.child(index), index, offset}\n    let node = this.content.child(index - 1)\n    return {node, index: index - 1, offset: offset - node.nodeSize}\n  }\n\n  // :: (number) → ResolvedPos\n  // Resolve the given position in the document, returning an\n  // [object](#model.ResolvedPos) with information about its context.\n  resolve(pos) { return ResolvedPos.resolveCached(this, pos) }\n\n  resolveNoCache(pos) { return ResolvedPos.resolve(this, pos) }\n\n  // :: (number, number, union<Mark, MarkType>) → bool\n  // Test whether a given mark or mark type occurs in this document\n  // between the two given positions.\n  rangeHasMark(from, to, type) {\n    let found = false\n    if (to > from) this.nodesBetween(from, to, node => {\n      if (type.isInSet(node.marks)) found = true\n      return !found\n    })\n    return found\n  }\n\n  // :: bool\n  // True when this is a block (non-inline node)\n  get isBlock() { return this.type.isBlock }\n\n  // :: bool\n  // True when this is a textblock node, a block node with inline\n  // content.\n  get isTextblock() { return this.type.isTextblock }\n\n  // :: bool\n  // True when this node allows inline content.\n  get inlineContent() { return this.type.inlineContent }\n\n  // :: bool\n  // True when this is an inline node (a text node or a node that can\n  // appear among text).\n  get isInline() { return this.type.isInline }\n\n  // :: bool\n  // True when this is a text node.\n  get isText() { return this.type.isText }\n\n  // :: bool\n  // True when this is a leaf node.\n  get isLeaf() { return this.type.isLeaf }\n\n  // :: bool\n  // True when this is an atom, i.e. when it does not have directly\n  // editable content. This is usually the same as `isLeaf`, but can\n  // be configured with the [`atom` property](#model.NodeSpec.atom) on\n  // a node's spec (typically used when the node is displayed as an\n  // uneditable [node view](#view.NodeView)).\n  get isAtom() { return this.type.isAtom }\n\n  // :: () → string\n  // Return a string representation of this node for debugging\n  // purposes.\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    let name = this.type.name\n    if (this.content.size)\n      name += \"(\" + this.content.toStringInner() + \")\"\n    return wrapMarks(this.marks, name)\n  }\n\n  // :: (number) → ContentMatch\n  // Get the content match in this node at the given index.\n  contentMatchAt(index) {\n    let match = this.type.contentMatch.matchFragment(this.content, 0, index)\n    if (!match) throw new Error(\"Called contentMatchAt on a node with invalid content\")\n    return match\n  }\n\n  // :: (number, number, ?Fragment, ?number, ?number) → bool\n  // Test whether replacing the range between `from` and `to` (by\n  // child index) with the given replacement fragment (which defaults\n  // to the empty fragment) would leave the node's content valid. You\n  // can optionally pass `start` and `end` indices into the\n  // replacement fragment.\n  canReplace(from, to, replacement = Fragment.empty, start = 0, end = replacement.childCount) {\n    let one = this.contentMatchAt(from).matchFragment(replacement, start, end)\n    let two = one && one.matchFragment(this.content, to)\n    if (!two || !two.validEnd) return false\n    for (let i = start; i < end; i++) if (!this.type.allowsMarks(replacement.child(i).marks)) return false\n    return true\n  }\n\n  // :: (number, number, NodeType, ?[Mark]) → bool\n  // Test whether replacing the range `from` to `to` (by index) with a\n  // node of the given type would leave the node's content valid.\n  canReplaceWith(from, to, type, marks) {\n    if (marks && !this.type.allowsMarks(marks)) return false\n    let start = this.contentMatchAt(from).matchType(type)\n    let end = start && start.matchFragment(this.content, to)\n    return end ? end.validEnd : false\n  }\n\n  // :: (Node) → bool\n  // Test whether the given node's content could be appended to this\n  // node. If that node is empty, this will only return true if there\n  // is at least one node type that can appear in both nodes (to avoid\n  // merging completely incompatible nodes).\n  canAppend(other) {\n    if (other.content.size) return this.canReplace(this.childCount, this.childCount, other.content)\n    else return this.type.compatibleContent(other.type)\n  }\n\n  // :: ()\n  // Check whether this node and its descendants conform to the\n  // schema, and raise error when they do not.\n  check() {\n    if (!this.type.validContent(this.content))\n      throw new RangeError(`Invalid content for node ${this.type.name}: ${this.content.toString().slice(0, 50)}`)\n    let copy = Mark.none\n    for (let i = 0; i < this.marks.length; i++) copy = this.marks[i].addToSet(copy)\n    if (!Mark.sameSet(copy, this.marks))\n      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(m => m.type.name)}`)\n    this.content.forEach(node => node.check())\n  }\n\n  // :: () → Object\n  // Return a JSON-serializeable representation of this node.\n  toJSON() {\n    let obj = {type: this.type.name}\n    for (let _ in this.attrs) {\n      obj.attrs = this.attrs\n      break\n    }\n    if (this.content.size)\n      obj.content = this.content.toJSON()\n    if (this.marks.length)\n      obj.marks = this.marks.map(n => n.toJSON())\n    return obj\n  }\n\n  // :: (Schema, Object) → Node\n  // Deserialize a node from its JSON representation.\n  static fromJSON(schema, json) {\n    if (!json) throw new RangeError(\"Invalid input for Node.fromJSON\")\n    let marks = null\n    if (json.marks) {\n      if (!Array.isArray(json.marks)) throw new RangeError(\"Invalid mark data for Node.fromJSON\")\n      marks = json.marks.map(schema.markFromJSON)\n    }\n    if (json.type == \"text\") {\n      if (typeof json.text != \"string\") throw new RangeError(\"Invalid text node in JSON\")\n      return schema.text(json.text, marks)\n    }\n    let content = Fragment.fromJSON(schema, json.content)\n    return schema.nodeType(json.type).create(json.attrs, content, marks)\n  }\n}\n\nexport class TextNode extends Node {\n  constructor(type, attrs, content, marks) {\n    super(type, attrs, null, marks)\n\n    if (!content) throw new RangeError(\"Empty text nodes are not allowed\")\n\n    this.text = content\n  }\n\n  toString() {\n    if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this)\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  }\n\n  get textContent() { return this.text }\n\n  textBetween(from, to) { return this.text.slice(from, to) }\n\n  get nodeSize() { return this.text.length }\n\n  mark(marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  }\n\n  withText(text) {\n    if (text == this.text) return this\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  }\n\n  cut(from = 0, to = this.text.length) {\n    if (from == 0 && to == this.text.length) return this\n    return this.withText(this.text.slice(from, to))\n  }\n\n  eq(other) {\n    return this.sameMarkup(other) && this.text == other.text\n  }\n\n  toJSON() {\n    let base = super.toJSON()\n    base.text = this.text\n    return base\n  }\n}\n\nfunction wrapMarks(marks, str) {\n  for (let i = marks.length - 1; i >= 0; i--)\n    str = marks[i].type.name + \"(\" + str + \")\"\n  return str\n}\n","import {Fragment} from \"./fragment\"\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nexport class ContentMatch {\n  constructor(validEnd) {\n    // :: bool\n    // True when this match state represents a valid end of the node.\n    this.validEnd = validEnd\n    this.next = []\n    this.wrapCache = []\n  }\n\n  static parse(string, nodeTypes) {\n    let stream = new TokenStream(string, nodeTypes)\n    if (stream.next == null) return ContentMatch.empty\n    let expr = parseExpr(stream)\n    if (stream.next) stream.err(\"Unexpected trailing text\")\n    let match = dfa(nfa(expr))\n    checkForDeadEnds(match, stream)\n    return match\n  }\n\n  // :: (NodeType) → ?ContentMatch\n  // Match a node type, returning a match after that node if\n  // successful.\n  matchType(type) {\n    for (let i = 0; i < this.next.length; i += 2)\n      if (this.next[i] == type) return this.next[i + 1]\n    return null\n  }\n\n  // :: (Fragment, ?number, ?number) → ?ContentMatch\n  // Try to match a fragment. Returns the resulting match when\n  // successful.\n  matchFragment(frag, start = 0, end = frag.childCount) {\n    let cur = this\n    for (let i = start; cur && i < end; i++)\n      cur = cur.matchType(frag.child(i).type)\n    return cur\n  }\n\n  get inlineContent() {\n    let first = this.next[0]\n    return first ? first.isInline : false\n  }\n\n  // :: ?NodeType\n  // Get the first matching node type at this match position that can\n  // be generated.\n  get defaultType() {\n    for (let i = 0; i < this.next.length; i += 2) {\n      let type = this.next[i]\n      if (!(type.isText || type.hasRequiredAttrs())) return type\n    }\n  }\n\n  compatible(other) {\n    for (let i = 0; i < this.next.length; i += 2)\n      for (let j = 0; j < other.next.length; j += 2)\n        if (this.next[i] == other.next[j]) return true\n    return false\n  }\n\n  // :: (Fragment, bool, ?number) → ?Fragment\n  // Try to match the given fragment, and if that fails, see if it can\n  // be made to match by inserting nodes in front of it. When\n  // successful, return a fragment of inserted nodes (which may be\n  // empty if nothing had to be inserted). When `toEnd` is true, only\n  // return a fragment if the resulting match goes to the end of the\n  // content expression.\n  fillBefore(after, toEnd = false, startIndex = 0) {\n    let seen = [this]\n    function search(match, types) {\n      let finished = match.matchFragment(after, startIndex)\n      if (finished && (!toEnd || finished.validEnd))\n        return Fragment.from(types.map(tp => tp.createAndFill()))\n\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i], next = match.next[i + 1]\n        if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n          seen.push(next)\n          let found = search(next, types.concat(type))\n          if (found) return found\n        }\n      }\n    }\n\n    return search(this, [])\n  }\n\n  // :: (NodeType) → ?[NodeType]\n  // Find a set of wrapping node types that would allow a node of the\n  // given type to appear at this position. The result may be empty\n  // (when it fits directly) and will be null when no such wrapping\n  // exists.\n  findWrapping(target) {\n    for (let i = 0; i < this.wrapCache.length; i += 2)\n      if (this.wrapCache[i] == target) return this.wrapCache[i + 1]\n    let computed = this.computeWrapping(target)\n    this.wrapCache.push(target, computed)\n    return computed\n  }\n\n  computeWrapping(target) {\n    let seen = Object.create(null), active = [{match: this, type: null, via: null}]\n    while (active.length) {\n      let current = active.shift(), match = current.match\n      if (match.matchType(target)) {\n        let result = []\n        for (let obj = current; obj.type; obj = obj.via)\n          result.push(obj.type)\n        return result.reverse()\n      }\n      for (let i = 0; i < match.next.length; i += 2) {\n        let type = match.next[i]\n        if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n          active.push({match: type.contentMatch, type, via: current})\n          seen[type.name] = true\n        }\n      }\n    }\n  }\n\n  // :: number\n  // The number of outgoing edges this node has in the finite\n  // automaton that describes the content expression.\n  get edgeCount() {\n    return this.next.length >> 1\n  }\n\n  // :: (number) → {type: NodeType, next: ContentMatch}\n  // Get the _n_​th outgoing edge from this node in the finite\n  // automaton that describes the content expression.\n  edge(n) {\n    let i = n << 1\n    if (i >= this.next.length) throw new RangeError(`There's no ${n}th edge in this content match`)\n    return {type: this.next[i], next: this.next[i + 1]}\n  }\n\n  toString() {\n    let seen = []\n    function scan(m) {\n      seen.push(m)\n      for (let i = 1; i < m.next.length; i += 2)\n        if (seen.indexOf(m.next[i]) == -1) scan(m.next[i])\n    }\n    scan(this)\n    return seen.map((m, i) => {\n      let out = i + (m.validEnd ? \"*\" : \" \") + \" \"\n      for (let i = 0; i < m.next.length; i += 2)\n        out += (i ? \", \" : \"\") + m.next[i].name + \"->\" + seen.indexOf(m.next[i + 1])\n      return out\n    }).join(\"\\n\")\n  }\n}\n\nContentMatch.empty = new ContentMatch(true)\n\nclass TokenStream {\n  constructor(string, nodeTypes) {\n    this.string = string\n    this.nodeTypes = nodeTypes\n    this.inline = null\n    this.pos = 0\n    this.tokens = string.split(/\\s*(?=\\b|\\W|$)/)\n    if (this.tokens[this.tokens.length - 1] == \"\") this.tokens.pop()\n    if (this.tokens[0] == \"\") this.tokens.shift()\n  }\n\n  get next() { return this.tokens[this.pos] }\n\n  eat(tok) { return this.next == tok && (this.pos++ || true) }\n\n  err(str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") }\n}\n\nfunction parseExpr(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSeq(stream)) }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n}\n\nfunction parseExprSeq(stream) {\n  let exprs = []\n  do { exprs.push(parseExprSubscript(stream)) }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  let expr = parseExprAtom(stream)\n  for (;;) {\n    if (stream.eat(\"+\"))\n      expr = {type: \"plus\", expr}\n    else if (stream.eat(\"*\"))\n      expr = {type: \"star\", expr}\n    else if (stream.eat(\"?\"))\n      expr = {type: \"opt\", expr}\n    else if (stream.eat(\"{\"))\n      expr = parseExprRange(stream, expr)\n    else break\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) stream.err(\"Expected number, got '\" + stream.next + \"'\")\n  let result = Number(stream.next)\n  stream.pos++\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  let min = parseNum(stream), max = min\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") max = parseNum(stream)\n    else max = -1\n  }\n  if (!stream.eat(\"}\")) stream.err(\"Unclosed braced range\")\n  return {type: \"range\", min, max, expr}\n}\n\nfunction resolveName(stream, name) {\n  let types = stream.nodeTypes, type = types[name]\n  if (type) return [type]\n  let result = []\n  for (let typeName in types) {\n    let type = types[typeName]\n    if (type.groups.indexOf(name) > -1) result.push(type)\n  }\n  if (result.length == 0) stream.err(\"No node type or group '\" + name + \"' found\")\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    let expr = parseExpr(stream)\n    if (!stream.eat(\")\")) stream.err(\"Missing closing paren\")\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    let exprs = resolveName(stream, stream.next).map(type => {\n      if (stream.inline == null) stream.inline = type.isInline\n      else if (stream.inline != type.isInline) stream.err(\"Mixing inline and block content\")\n      return {type: \"name\", value: type}\n    })\n    stream.pos++\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\")\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  let nfa = [[]]\n  connect(compile(expr, 0), node())\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    let edge = {term, to}\n    nfa[from].push(edge)\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(edge => edge.to = to) }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce((out, expr) => out.concat(compile(expr, from)), [])\n    } else if (expr.type == \"seq\") {\n      for (let i = 0;; i++) {\n        let next = compile(expr.exprs[i], from)\n        if (i == expr.exprs.length - 1) return next\n        connect(next, from = node())\n      }\n    } else if (expr.type == \"star\") {\n      let loop = node()\n      edge(from, loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      let loop = node()\n      connect(compile(expr.expr, from), loop)\n      connect(compile(expr.expr, loop), loop)\n      return [edge(loop)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      let cur = from\n      for (let i = 0; i < expr.min; i++) {\n        let next = node()\n        connect(compile(expr.expr, cur), next)\n        cur = next\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur)\n      } else {\n        for (let i = expr.min; i < expr.max; i++) {\n          let next = node()\n          edge(cur, next)\n          connect(compile(expr.expr, cur), next)\n          cur = next\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  let result = []\n  scan(node)\n  return result.sort(cmp)\n\n  function scan(node) {\n    let edges = nfa[node]\n    if (edges.length == 1 && !edges[0].term) return scan(edges[0].to)\n    result.push(node)\n    for (let i = 0; i < edges.length; i++) {\n      let {term, to} = edges[i]\n      if (!term && result.indexOf(to) == -1) scan(to)\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  let labeled = Object.create(null)\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    let out = []\n    states.forEach(node => {\n      nfa[node].forEach(({term, to}) => {\n        if (!term) return\n        let known = out.indexOf(term), set = known > -1 && out[known + 1]\n        nullFrom(nfa, to).forEach(node => {\n          if (!set) out.push(term, set = [])\n          if (set.indexOf(node) == -1) set.push(node)\n        })\n      })\n    })\n    let state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1)\n    for (let i = 0; i < out.length; i += 2) {\n      let states = out[i + 1].sort(cmp)\n      state.next.push(out[i], labeled[states.join(\",\")] || explore(states))\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (let i = 0, work = [match]; i < work.length; i++) {\n    let state = work[i], dead = !state.validEnd, nodes = []\n    for (let j = 0; j < state.next.length; j += 2) {\n      let node = state.next[j], next = state.next[j + 1]\n      nodes.push(node.name)\n      if (dead && !(node.isText || node.hasRequiredAttrs())) dead = false\n      if (work.indexOf(next) == -1) work.push(next)\n    }\n    if (dead) stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\")\n  }\n}\n","import OrderedMap from \"orderedmap\"\n\nimport {Node, TextNode} from \"./node\"\nimport {Fragment} from \"./fragment\"\nimport {Mark} from \"./mark\"\nimport {ContentMatch} from \"./content\"\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  let defaults = Object.create(null)\n  for (let attrName in attrs) {\n    let attr = attrs[attrName]\n    if (!attr.hasDefault) return null\n    defaults[attrName] = attr.default\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  let built = Object.create(null)\n  for (let name in attrs) {\n    let given = value && value[name]\n    if (given === undefined) {\n      let attr = attrs[name]\n      if (attr.hasDefault) given = attr.default\n      else throw new RangeError(\"No value supplied for attribute \" + name)\n    }\n    built[name] = given\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  let result = Object.create(null)\n  if (attrs) for (let name in attrs) result[name] = new Attribute(attrs[name])\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nexport class NodeType {\n  constructor(name, schema, spec) {\n    // :: string\n    // The name the node type has in this schema.\n    this.name = name\n\n    // :: Schema\n    // A link back to the `Schema` the node type belongs to.\n    this.schema = schema\n\n    // :: NodeSpec\n    // The spec that this type is based on\n    this.spec = spec\n\n    this.groups = spec.group ? spec.group.split(\" \") : []\n    this.attrs = initAttrs(spec.attrs)\n\n    this.defaultAttrs = defaultAttrs(this.attrs)\n\n    // :: ContentMatch\n    // The starting match of the node type's content expression.\n    this.contentMatch = null\n\n    // : ?[MarkType]\n    // The set of marks allowed in this node. `null` means all marks\n    // are allowed.\n    this.markSet = null\n\n    // :: bool\n    // True if this node type has inline content.\n    this.inlineContent = null\n\n    // :: bool\n    // True if this is a block type\n    this.isBlock = !(spec.inline || name == \"text\")\n\n    // :: bool\n    // True if this is the text node type.\n    this.isText = name == \"text\"\n  }\n\n  // :: bool\n  // True if this is an inline type.\n  get isInline() { return !this.isBlock }\n\n  // :: bool\n  // True if this is a textblock type, a block that contains inline\n  // content.\n  get isTextblock() { return this.isBlock && this.inlineContent }\n\n  // :: bool\n  // True for node types that allow no content.\n  get isLeaf() { return this.contentMatch == ContentMatch.empty }\n\n  // :: bool\n  // True when this node is an atom, i.e. when it does not have\n  // directly editable content.\n  get isAtom() { return this.isLeaf || this.spec.atom }\n\n  // :: union<\"pre\", \"normal\">\n  // The node type's [whitespace](#view.NodeSpec.whitespace) option.\n  get whitespace() { return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\") }\n\n  // :: () → bool\n  // Tells you whether this node type has any required attributes.\n  hasRequiredAttrs() {\n    for (let n in this.attrs) if (this.attrs[n].isRequired) return true\n    return false\n  }\n\n  compatibleContent(other) {\n    return this == other || this.contentMatch.compatible(other.contentMatch)\n  }\n\n  computeAttrs(attrs) {\n    if (!attrs && this.defaultAttrs) return this.defaultAttrs\n    else return computeAttrs(this.attrs, attrs)\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a `Node` of this type. The given attributes are\n  // checked and defaulted (you can pass `null` to use the type's\n  // defaults entirely, if no required attributes exist). `content`\n  // may be a `Fragment`, a node, an array of nodes, or\n  // `null`. Similarly `marks` may be `null` to default to the empty\n  // set of marks.\n  create(attrs, content, marks) {\n    if (this.isText) throw new Error(\"NodeType.create can't construct text nodes\")\n    return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Like [`create`](#model.NodeType.create), but check the given content\n  // against the node type's content restrictions, and throw an error\n  // if it doesn't match.\n  createChecked(attrs, content, marks) {\n    content = Fragment.from(content)\n    if (!this.validContent(content))\n      throw new RangeError(\"Invalid content for node \" + this.name)\n    return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n  }\n\n  // :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n  // Like [`create`](#model.NodeType.create), but see if it is necessary to\n  // add nodes to the start or end of the given fragment to make it\n  // fit the node. If no fitting wrapping can be found, return null.\n  // Note that, due to the fact that required nodes can always be\n  // created, this will always succeed if you pass null or\n  // `Fragment.empty` as content.\n  createAndFill(attrs, content, marks) {\n    attrs = this.computeAttrs(attrs)\n    content = Fragment.from(content)\n    if (content.size) {\n      let before = this.contentMatch.fillBefore(content)\n      if (!before) return null\n      content = before.append(content)\n    }\n    let after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true)\n    if (!after) return null\n    return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n  }\n\n  // :: (Fragment) → bool\n  // Returns true if the given fragment is valid content for this node\n  // type with the given attributes.\n  validContent(content) {\n    let result = this.contentMatch.matchFragment(content)\n    if (!result || !result.validEnd) return false\n    for (let i = 0; i < content.childCount; i++)\n      if (!this.allowsMarks(content.child(i).marks)) return false\n    return true\n  }\n\n  // :: (MarkType) → bool\n  // Check whether the given mark type is allowed in this node.\n  allowsMarkType(markType) {\n    return this.markSet == null || this.markSet.indexOf(markType) > -1\n  }\n\n  // :: ([Mark]) → bool\n  // Test whether the given set of marks are allowed in this node.\n  allowsMarks(marks) {\n    if (this.markSet == null) return true\n    for (let i = 0; i < marks.length; i++) if (!this.allowsMarkType(marks[i].type)) return false\n    return true\n  }\n\n  // :: ([Mark]) → [Mark]\n  // Removes the marks that are not allowed in this node from the given set.\n  allowedMarks(marks) {\n    if (this.markSet == null) return marks\n    let copy\n    for (let i = 0; i < marks.length; i++) {\n      if (!this.allowsMarkType(marks[i].type)) {\n        if (!copy) copy = marks.slice(0, i)\n      } else if (copy) {\n        copy.push(marks[i])\n      }\n    }\n    return !copy ? marks : copy.length ? copy : Mark.empty\n  }\n\n  static compile(nodes, schema) {\n    let result = Object.create(null)\n    nodes.forEach((name, spec) => result[name] = new NodeType(name, schema, spec))\n\n    let topType = schema.spec.topNode || \"doc\"\n    if (!result[topType]) throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\")\n    if (!result.text) throw new RangeError(\"Every schema needs a 'text' type\")\n    for (let _ in result.text.attrs) throw new RangeError(\"The text node type should not have attributes\")\n\n    return result\n  }\n}\n\n// Attribute descriptors\n\nclass Attribute {\n  constructor(options) {\n    this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\")\n    this.default = options.default\n  }\n\n  get isRequired() {\n    return !this.hasDefault\n  }\n}\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nexport class MarkType {\n  constructor(name, rank, schema, spec) {\n    // :: string\n    // The name of the mark type.\n    this.name = name\n\n    // :: Schema\n    // The schema that this mark type instance is part of.\n    this.schema = schema\n\n    // :: MarkSpec\n    // The spec on which the type is based.\n    this.spec = spec\n\n    this.attrs = initAttrs(spec.attrs)\n\n    this.rank = rank\n    this.excluded = null\n    let defaults = defaultAttrs(this.attrs)\n    this.instance = defaults && new Mark(this, defaults)\n  }\n\n  // :: (?Object) → Mark\n  // Create a mark of this type. `attrs` may be `null` or an object\n  // containing only some of the mark's attributes. The others, if\n  // they have defaults, will be added.\n  create(attrs) {\n    if (!attrs && this.instance) return this.instance\n    return new Mark(this, computeAttrs(this.attrs, attrs))\n  }\n\n  static compile(marks, schema) {\n    let result = Object.create(null), rank = 0\n    marks.forEach((name, spec) => result[name] = new MarkType(name, rank++, schema, spec))\n    return result\n  }\n\n  // :: ([Mark]) → [Mark]\n  // When there is a mark of this type in the given set, a new set\n  // without it is returned. Otherwise, the input set is returned.\n  removeFromSet(set) {\n    for (var i = 0; i < set.length; i++) if (set[i].type == this) {\n      set = set.slice(0, i).concat(set.slice(i + 1))\n      i--\n    }\n    return set\n  }\n\n  // :: ([Mark]) → ?Mark\n  // Tests whether there is a mark of this type in the given set.\n  isInSet(set) {\n    for (let i = 0; i < set.length; i++)\n      if (set[i].type == this) return set[i]\n  }\n\n  // :: (MarkType) → bool\n  // Queries whether a given mark type is\n  // [excluded](#model.MarkSpec.excludes) by this one.\n  excludes(other) {\n    return this.excluded.indexOf(other) > -1\n  }\n}\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   whitespace:: ?union<\"pre\", \"normal\">\n//   Controls way whitespace in this a node is parsed. The default is\n//   `\"normal\"`, which causes the [DOM parser](#model.DOMParser) to\n//   collapse whitespace in normal mode, and normalize it (replacing\n//   newlines and such with spaces) otherwise. `\"pre\"` causes the\n//   parser to preserve spaces inside the node. When this option isn't\n//   given, but [`code`](#model.NodeSpec.code) is true, `whitespace`\n//   will default to `\"pre\"`. Note that this option doesn't influence\n//   the way the node is rendered—that should be handled by `toDOM`\n//   and/or styling.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nexport class Schema {\n  // :: (SchemaSpec)\n  // Construct a schema from a schema [specification](#model.SchemaSpec).\n  constructor(spec) {\n    // :: SchemaSpec\n    // The [spec](#model.SchemaSpec) on which the schema is based,\n    // with the added guarantee that its `nodes` and `marks`\n    // properties are\n    // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n    // (not raw objects).\n    this.spec = {}\n    for (let prop in spec) this.spec[prop] = spec[prop]\n    this.spec.nodes = OrderedMap.from(spec.nodes)\n    this.spec.marks = OrderedMap.from(spec.marks)\n\n    // :: Object<NodeType>\n    // An object mapping the schema's node names to node type objects.\n    this.nodes = NodeType.compile(this.spec.nodes, this)\n\n    // :: Object<MarkType>\n    // A map from mark names to mark type objects.\n    this.marks = MarkType.compile(this.spec.marks, this)\n\n    let contentExprCache = Object.create(null)\n    for (let prop in this.nodes) {\n      if (prop in this.marks)\n        throw new RangeError(prop + \" can not be both a node and a mark\")\n      let type = this.nodes[prop], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks\n      type.contentMatch = contentExprCache[contentExpr] ||\n        (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes))\n      type.inlineContent = type.contentMatch.inlineContent\n      type.markSet = markExpr == \"_\" ? null :\n        markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n        markExpr == \"\" || !type.inlineContent ? [] : null\n    }\n    for (let prop in this.marks) {\n      let type = this.marks[prop], excl = type.spec.excludes\n      type.excluded = excl == null ? [type] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"))\n    }\n\n    this.nodeFromJSON = this.nodeFromJSON.bind(this)\n    this.markFromJSON = this.markFromJSON.bind(this)\n\n    // :: NodeType\n    // The type of the [default top node](#model.SchemaSpec.topNode)\n    // for this schema.\n    this.topNodeType = this.nodes[this.spec.topNode || \"doc\"]\n\n    // :: Object\n    // An object for storing whatever values modules may want to\n    // compute and cache per schema. (If you want to store something\n    // in it, try to use property names unlikely to clash.)\n    this.cached = Object.create(null)\n    this.cached.wrappings = Object.create(null)\n  }\n\n  // :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n  // Create a node in this schema. The `type` may be a string or a\n  // `NodeType` instance. Attributes will be extended\n  // with defaults, `content` may be a `Fragment`,\n  // `null`, a `Node`, or an array of nodes.\n  node(type, attrs, content, marks) {\n    if (typeof type == \"string\")\n      type = this.nodeType(type)\n    else if (!(type instanceof NodeType))\n      throw new RangeError(\"Invalid node type: \" + type)\n    else if (type.schema != this)\n      throw new RangeError(\"Node type from different schema used (\" + type.name + \")\")\n\n    return type.createChecked(attrs, content, marks)\n  }\n\n  // :: (string, ?[Mark]) → Node\n  // Create a text node in the schema. Empty text nodes are not\n  // allowed.\n  text(text, marks) {\n    let type = this.nodes.text\n    return new TextNode(type, type.defaultAttrs, text, Mark.setFrom(marks))\n  }\n\n  // :: (union<string, MarkType>, ?Object) → Mark\n  // Create a mark with the given type and attributes.\n  mark(type, attrs) {\n    if (typeof type == \"string\") type = this.marks[type]\n    return type.create(attrs)\n  }\n\n  // :: (Object) → Node\n  // Deserialize a node from its JSON representation. This method is\n  // bound.\n  nodeFromJSON(json) {\n    return Node.fromJSON(this, json)\n  }\n\n  // :: (Object) → Mark\n  // Deserialize a mark from its JSON representation. This method is\n  // bound.\n  markFromJSON(json) {\n    return Mark.fromJSON(this, json)\n  }\n\n  nodeType(name) {\n    let found = this.nodes[name]\n    if (!found) throw new RangeError(\"Unknown node type: \" + name)\n    return found\n  }\n}\n\nfunction gatherMarks(schema, marks) {\n  let found = []\n  for (let i = 0; i < marks.length; i++) {\n    let name = marks[i], mark = schema.marks[name], ok = mark\n    if (mark) {\n      found.push(mark)\n    } else {\n      for (let prop in schema.marks) {\n        let mark = schema.marks[prop]\n        if (name == \"_\" || (mark.spec.group && mark.spec.group.split(\" \").indexOf(name) > -1))\n          found.push(ok = mark)\n      }\n    }\n    if (!ok) throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\")\n  }\n  return found\n}\n","import {Fragment} from \"./fragment\"\nimport {Slice} from \"./replace\"\nimport {Mark} from \"./mark\"\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nexport class DOMParser {\n  // :: (Schema, [ParseRule])\n  // Create a parser that targets the given schema, using the given\n  // parsing rules.\n  constructor(schema, rules) {\n    // :: Schema\n    // The schema into which the parser parses.\n    this.schema = schema\n    // :: [ParseRule]\n    // The set of [parse rules](#model.ParseRule) that the parser\n    // uses, in order of precedence.\n    this.rules = rules\n    this.tags = []\n    this.styles = []\n\n    rules.forEach(rule => {\n      if (rule.tag) this.tags.push(rule)\n      else if (rule.style) this.styles.push(rule)\n    })\n\n    // Only normalize list elements when lists in the schema can't directly contain themselves\n    this.normalizeLists = !this.tags.some(r => {\n      if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) return false\n      let node = schema.nodes[r.node]\n      return node.contentMatch.matchType(node)\n    })\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Node\n  // Parse a document from the content of a DOM node.\n  parse(dom, options = {}) {\n    let context = new ParseContext(this, options, false)\n    context.addAll(dom, null, options.from, options.to)\n    return context.finish()\n  }\n\n  // :: (dom.Node, ?ParseOptions) → Slice\n  // Parses the content of the given DOM node, like\n  // [`parse`](#model.DOMParser.parse), and takes the same set of\n  // options. But unlike that method, which produces a whole node,\n  // this one returns a slice that is open at the sides, meaning that\n  // the schema constraints aren't applied to the start of nodes to\n  // the left of the input and the end of nodes at the end.\n  parseSlice(dom, options = {}) {\n    let context = new ParseContext(this, options, true)\n    context.addAll(dom, null, options.from, options.to)\n    return Slice.maxOpen(context.finish())\n  }\n\n  matchTag(dom, context, after) {\n    for (let i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n      let rule = this.tags[i]\n      if (matches(dom, rule.tag) &&\n          (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n          (!rule.context || context.matchesContext(rule.context))) {\n        if (rule.getAttrs) {\n          let result = rule.getAttrs(dom)\n          if (result === false) continue\n          rule.attrs = result\n        }\n        return rule\n      }\n    }\n  }\n\n  matchStyle(prop, value, context, after) {\n    for (let i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n      let rule = this.styles[i]\n      if (rule.style.indexOf(prop) != 0 ||\n          rule.context && !context.matchesContext(rule.context) ||\n          // Test that the style string either precisely matches the prop,\n          // or has an '=' sign after the prop, followed by the given\n          // value.\n          rule.style.length > prop.length &&\n          (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n        continue\n      if (rule.getAttrs) {\n        let result = rule.getAttrs(value)\n        if (result === false) continue\n        rule.attrs = result\n      }\n      return rule\n    }\n  }\n\n  // : (Schema) → [ParseRule]\n  static schemaRules(schema) {\n    let result = []\n    function insert(rule) {\n      let priority = rule.priority == null ? 50 : rule.priority, i = 0\n      for (; i < result.length; i++) {\n        let next = result[i], nextPriority = next.priority == null ? 50 : next.priority\n        if (nextPriority < priority) break\n      }\n      result.splice(i, 0, rule)\n    }\n\n    for (let name in schema.marks) {\n      let rules = schema.marks[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.mark = name\n      })\n    }\n    for (let name in schema.nodes) {\n      let rules = schema.nodes[name].spec.parseDOM\n      if (rules) rules.forEach(rule => {\n        insert(rule = copy(rule))\n        rule.node = name\n      })\n    }\n    return result\n  }\n\n  // :: (Schema) → DOMParser\n  // Construct a DOM parser using the parsing rules listed in a\n  // schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n  // [priority](#model.ParseRule.priority).\n  static fromSchema(schema) {\n    return schema.cached.domParser ||\n      (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n  }\n}\n\n// : Object<bool> The block-level tags in HTML5\nconst blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n}\n\n// : Object<bool> The tags that we normally ignore.\nconst ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n}\n\n// : Object<bool> List tags.\nconst listTags = {ol: true, ul: true}\n\n// Using a bitfield for node context options\nconst OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4\n\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n  if (preserveWhitespace != null) return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n    (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0)\n  return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT\n}\n\nclass NodeContext {\n  constructor(type, attrs, marks, pendingMarks, solid, match, options) {\n    this.type = type\n    this.attrs = attrs\n    this.solid = solid\n    this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch)\n    this.options = options\n    this.content = []\n    // Marks applied to this node itself\n    this.marks = marks\n    // Marks applied to its children\n    this.activeMarks = Mark.none\n    // Marks that can't apply here, but will be used in children if possible\n    this.pendingMarks = pendingMarks\n    // Nested Marks with same type\n    this.stashMarks = []\n  }\n\n  findWrapping(node) {\n    if (!this.match) {\n      if (!this.type) return []\n      let fill = this.type.contentMatch.fillBefore(Fragment.from(node))\n      if (fill) {\n        this.match = this.type.contentMatch.matchFragment(fill)\n      } else {\n        let start = this.type.contentMatch, wrap\n        if (wrap = start.findWrapping(node.type)) {\n          this.match = start\n          return wrap\n        } else {\n          return null\n        }\n      }\n    }\n    return this.match.findWrapping(node.type)\n  }\n\n  finish(openEnd) {\n    if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n      let last = this.content[this.content.length - 1], m\n      if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n        if (last.text.length == m[0].length) this.content.pop()\n        else this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length))\n      }\n    }\n    let content = Fragment.from(this.content)\n    if (!openEnd && this.match)\n      content = content.append(this.match.fillBefore(Fragment.empty, true))\n    return this.type ? this.type.create(this.attrs, content, this.marks) : content\n  }\n\n  popFromStashMark(mark) {\n    for (let i = this.stashMarks.length - 1; i >= 0; i--)\n      if (mark.eq(this.stashMarks[i])) return this.stashMarks.splice(i, 1)[0]\n  }\n\n  applyPending(nextType) {\n    for (let i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n      let mark = pending[i]\n      if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n          !mark.isInSet(this.activeMarks)) {\n        this.activeMarks = mark.addToSet(this.activeMarks)\n        this.pendingMarks = mark.removeFromSet(this.pendingMarks)\n      }\n    }\n  }\n\n  inlineContext(node) {\n    if (this.type) return this.type.inlineContent\n    if (this.content.length) return this.content[0].isInline\n    return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase())\n  }\n}\n\nclass ParseContext {\n  // : (DOMParser, Object)\n  constructor(parser, options, open) {\n    // : DOMParser The parser we are using.\n    this.parser = parser\n    // : Object The options passed to this parse.\n    this.options = options\n    this.isOpen = open\n    let topNode = options.topNode, topContext\n    let topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (open ? OPT_OPEN_LEFT : 0)\n    if (topNode)\n      topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                   options.topMatch || topNode.type.contentMatch, topOptions)\n    else if (open)\n      topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions)\n    else\n      topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions)\n    this.nodes = [topContext]\n    // : [Mark] The current set of marks\n    this.open = 0\n    this.find = options.findPositions\n    this.needsBlock = false\n  }\n\n  get top() {\n    return this.nodes[this.open]\n  }\n\n  // : (dom.Node)\n  // Add a DOM node to the content. Text is inserted as text node,\n  // otherwise, the node is passed to `addElement` or, if it has a\n  // `style` attribute, `addElementWithStyles`.\n  addDOM(dom) {\n    if (dom.nodeType == 3) {\n      this.addTextNode(dom)\n    } else if (dom.nodeType == 1) {\n      let style = dom.getAttribute(\"style\")\n      let marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.addPendingMark(marks[i])\n      this.addElement(dom)\n      if (marks != null) for (let i = 0; i < marks.length; i++) this.removePendingMark(marks[i], top)\n    }\n  }\n\n  addTextNode(dom) {\n    let value = dom.nodeValue\n    let top = this.top\n    if (top.options & OPT_PRESERVE_WS_FULL ||\n        top.inlineContext(dom) ||\n        /[^ \\t\\r\\n\\u000c]/.test(value)) {\n      if (!(top.options & OPT_PRESERVE_WS)) {\n        value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \")\n        // If this starts with whitespace, and there is no node before it, or\n        // a hard break, or a text node that ends with whitespace, strip the\n        // leading space.\n        if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n          let nodeBefore = top.content[top.content.length - 1]\n          let domNodeBefore = dom.previousSibling\n          if (!nodeBefore ||\n              (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n              (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n            value = value.slice(1)\n        }\n      } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n        value = value.replace(/\\r?\\n|\\r/g, \" \")\n      } else {\n        value = value.replace(/\\r\\n?/g, \"\\n\")\n      }\n      if (value) this.insertNode(this.parser.schema.text(value))\n      this.findInText(dom)\n    } else {\n      this.findInside(dom)\n    }\n  }\n\n  // : (dom.Element, ?ParseRule)\n  // Try to find a handler for the given tag and use that to parse. If\n  // none is found, the element's content nodes are added directly.\n  addElement(dom, matchAfter) {\n    let name = dom.nodeName.toLowerCase(), ruleID\n    if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) normalizeList(dom)\n    let rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n        (ruleID = this.parser.matchTag(dom, this, matchAfter))\n    if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n      this.findInside(dom)\n      this.ignoreFallback(dom)\n    } else if (!rule || rule.skip || rule.closeParent) {\n      if (rule && rule.closeParent) this.open = Math.max(0, this.open - 1)\n      else if (rule && rule.skip.nodeType) dom = rule.skip\n      let sync, top = this.top, oldNeedsBlock = this.needsBlock\n      if (blockTags.hasOwnProperty(name)) {\n        sync = true\n        if (!top.type) this.needsBlock = true\n      } else if (!dom.firstChild) {\n        this.leafFallback(dom)\n        return\n      }\n      this.addAll(dom)\n      if (sync) this.sync(top)\n      this.needsBlock = oldNeedsBlock\n    } else {\n      this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null)\n    }\n  }\n\n  // Called for leaf DOM nodes that would otherwise be ignored\n  leafFallback(dom) {\n    if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n      this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\"))\n  }\n\n  // Called for ignored nodes\n  ignoreFallback(dom) {\n    // Ignored BR nodes should at least create an inline context\n    if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n      this.findPlace(this.parser.schema.text(\"-\"))\n  }\n\n  // Run any style parser associated with the node's styles. Either\n  // return an array of marks, or null to indicate some of the styles\n  // had a rule with `ignore` set.\n  readStyles(styles) {\n    let marks = Mark.none\n    style: for (let i = 0; i < styles.length; i += 2) {\n      for (let after = null;;) {\n        let rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after)\n        if (!rule) continue style\n        if (rule.ignore) return null\n        marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks)\n        if (rule.consuming === false) after = rule\n        else break\n      }\n    }\n    return marks\n  }\n\n  // : (dom.Element, ParseRule) → bool\n  // Look up a handler for the given node. If none are found, return\n  // false. Otherwise, apply it, use its return value to drive the way\n  // the node's content is wrapped, and return true.\n  addElementByRule(dom, rule, continueAfter) {\n    let sync, nodeType, markType, mark\n    if (rule.node) {\n      nodeType = this.parser.schema.nodes[rule.node]\n      if (!nodeType.isLeaf) {\n        sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace)\n      } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n        this.leafFallback(dom)\n      }\n    } else {\n      markType = this.parser.schema.marks[rule.mark]\n      mark = markType.create(rule.attrs)\n      this.addPendingMark(mark)\n    }\n    let startIn = this.top\n\n    if (nodeType && nodeType.isLeaf) {\n      this.findInside(dom)\n    } else if (continueAfter) {\n      this.addElement(dom, continueAfter)\n    } else if (rule.getContent) {\n      this.findInside(dom)\n      rule.getContent(dom, this.parser.schema).forEach(node => this.insertNode(node))\n    } else {\n      let contentDOM = rule.contentElement\n      if (typeof contentDOM == \"string\") contentDOM = dom.querySelector(contentDOM)\n      else if (typeof contentDOM == \"function\") contentDOM = contentDOM(dom)\n      if (!contentDOM) contentDOM = dom\n      this.findAround(dom, contentDOM, true)\n      this.addAll(contentDOM, sync)\n    }\n    if (sync) { this.sync(startIn); this.open-- }\n    if (mark) this.removePendingMark(mark, startIn)\n  }\n\n  // : (dom.Node, ?NodeBuilder, ?number, ?number)\n  // Add all child nodes between `startIndex` and `endIndex` (or the\n  // whole node, if not given). If `sync` is passed, use it to\n  // synchronize after every block element.\n  addAll(parent, sync, startIndex, endIndex) {\n    let index = startIndex || 0\n    for (let dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n             end = endIndex == null ? null : parent.childNodes[endIndex];\n         dom != end; dom = dom.nextSibling, ++index) {\n      this.findAtPoint(parent, index)\n      this.addDOM(dom)\n      if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n        this.sync(sync)\n    }\n    this.findAtPoint(parent, index)\n  }\n\n  // Try to find a way to fit the given node type into the current\n  // context. May add intermediate wrappers and/or leave non-solid\n  // nodes that we're in.\n  findPlace(node) {\n    let route, sync\n    for (let depth = this.open; depth >= 0; depth--) {\n      let cx = this.nodes[depth]\n      let found = cx.findWrapping(node)\n      if (found && (!route || route.length > found.length)) {\n        route = found\n        sync = cx\n        if (!found.length) break\n      }\n      if (cx.solid) break\n    }\n    if (!route) return false\n    this.sync(sync)\n    for (let i = 0; i < route.length; i++)\n      this.enterInner(route[i], null, false)\n    return true\n  }\n\n  // : (Node) → ?Node\n  // Try to insert the given node, adjusting the context when needed.\n  insertNode(node) {\n    if (node.isInline && this.needsBlock && !this.top.type) {\n      let block = this.textblockFromContext()\n      if (block) this.enterInner(block)\n    }\n    if (this.findPlace(node)) {\n      this.closeExtra()\n      let top = this.top\n      top.applyPending(node.type)\n      if (top.match) top.match = top.match.matchType(node.type)\n      let marks = top.activeMarks\n      for (let i = 0; i < node.marks.length; i++)\n        if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n          marks = node.marks[i].addToSet(marks)\n      top.content.push(node.mark(marks))\n      return true\n    }\n    return false\n  }\n\n  // : (NodeType, ?Object) → bool\n  // Try to start a node of the given type, adjusting the context when\n  // necessary.\n  enter(type, attrs, preserveWS) {\n    let ok = this.findPlace(type.create(attrs))\n    if (ok) this.enterInner(type, attrs, true, preserveWS)\n    return ok\n  }\n\n  // Open a node of the given type\n  enterInner(type, attrs, solid, preserveWS) {\n    this.closeExtra()\n    let top = this.top\n    top.applyPending(type)\n    top.match = top.match && top.match.matchType(type, attrs)\n    let options = wsOptionsFor(type, preserveWS, top.options)\n    if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) options |= OPT_OPEN_LEFT\n    this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options))\n    this.open++\n  }\n\n  // Make sure all nodes above this.open are finished and added to\n  // their parents\n  closeExtra(openEnd) {\n    let i = this.nodes.length - 1\n    if (i > this.open) {\n      for (; i > this.open; i--) this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd))\n      this.nodes.length = this.open + 1\n    }\n  }\n\n  finish() {\n    this.open = 0\n    this.closeExtra(this.isOpen)\n    return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n  }\n\n  sync(to) {\n    for (let i = this.open; i >= 0; i--) if (this.nodes[i] == to) {\n      this.open = i\n      return\n    }\n  }\n\n  get currentPos() {\n    this.closeExtra()\n    let pos = 0\n    for (let i = this.open; i >= 0; i--) {\n      let content = this.nodes[i].content\n      for (let j = content.length - 1; j >= 0; j--)\n        pos += content[j].nodeSize\n      if (i) pos++\n    }\n    return pos\n  }\n\n  findAtPoint(parent, offset) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == parent && this.find[i].offset == offset)\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findInside(parent) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n        this.find[i].pos = this.currentPos\n    }\n  }\n\n  findAround(parent, content, before) {\n    if (parent != content && this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n        let pos = content.compareDocumentPosition(this.find[i].node)\n        if (pos & (before ? 2 : 4))\n          this.find[i].pos = this.currentPos\n      }\n    }\n  }\n\n  findInText(textNode) {\n    if (this.find) for (let i = 0; i < this.find.length; i++) {\n      if (this.find[i].node == textNode)\n        this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset)\n    }\n  }\n\n  // : (string) → bool\n  // Determines whether the given [context\n  // string](#ParseRule.context) matches this context.\n  matchesContext(context) {\n    if (context.indexOf(\"|\") > -1)\n      return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this)\n\n    let parts = context.split(\"/\")\n    let option = this.options.context\n    let useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type)\n    let minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1)\n    let match = (i, depth) => {\n      for (; i >= 0; i--) {\n        let part = parts[i]\n        if (part == \"\") {\n          if (i == parts.length - 1 || i == 0) continue\n          for (; depth >= minDepth; depth--)\n            if (match(i - 1, depth)) return true\n          return false\n        } else {\n          let next = depth > 0 || (depth == 0 && useRoot) ? this.nodes[depth].type\n              : option && depth >= minDepth ? option.node(depth - minDepth).type\n              : null\n          if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n            return false\n          depth--\n        }\n      }\n      return true\n    }\n    return match(parts.length - 1, this.open)\n  }\n\n  textblockFromContext() {\n    let $context = this.options.context\n    if ($context) for (let d = $context.depth; d >= 0; d--) {\n      let deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType\n      if (deflt && deflt.isTextblock && deflt.defaultAttrs) return deflt\n    }\n    for (let name in this.parser.schema.nodes) {\n      let type = this.parser.schema.nodes[name]\n      if (type.isTextblock && type.defaultAttrs) return type\n    }\n  }\n\n  addPendingMark(mark) {\n    let found = findSameMarkInSet(mark, this.top.pendingMarks)\n    if (found) this.top.stashMarks.push(found)\n    this.top.pendingMarks = mark.addToSet(this.top.pendingMarks)\n  }\n\n  removePendingMark(mark, upto) {\n    for (let depth = this.open; depth >= 0; depth--) {\n      let level = this.nodes[depth]\n      let found = level.pendingMarks.lastIndexOf(mark)\n      if (found > -1) {\n        level.pendingMarks = mark.removeFromSet(level.pendingMarks)\n      } else {\n        level.activeMarks = mark.removeFromSet(level.activeMarks)\n        let stashMark = level.popFromStashMark(mark)\n        if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n          level.activeMarks = stashMark.addToSet(level.activeMarks)\n      }\n      if (level == upto) break\n    }\n  }\n}\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (let child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    let name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child)\n      child = prevItem\n    } else if (name == \"li\") {\n      prevItem = child\n    } else if (name) {\n      prevItem = null\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = []\n  while (m = re.exec(style)) result.push(m[1], m[2].trim())\n  return result\n}\n\nfunction copy(obj) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  let nodes = nodeType.schema.nodes\n  for (let name in nodes) {\n    let parent = nodes[name]\n    if (!parent.allowsMarkType(markType)) continue\n    let seen = [], scan = match => {\n      seen.push(match)\n      for (let i = 0; i < match.edgeCount; i++) {\n        let {type, next} = match.edge(i)\n        if (type == nodeType) return true\n        if (seen.indexOf(next) < 0 && scan(next)) return true\n      }\n    }\n    if (scan(parent.contentMatch)) return true\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (let i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) return set[i]\n  }\n}\n","// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nexport class DOMSerializer {\n  // :: (Object<(node: Node) → DOMOutputSpec>, Object<?(mark: Mark, inline: bool) → DOMOutputSpec>)\n  // Create a serializer. `nodes` should map node names to functions\n  // that take a node and return a description of the corresponding\n  // DOM. `marks` does the same for mark names, but also gets an\n  // argument that tells it whether the mark's content is block or\n  // inline content (for typical use, it'll always be inline). A mark\n  // serializer may be `null` to indicate that marks of that type\n  // should not be serialized.\n  constructor(nodes, marks) {\n    // :: Object<(node: Node) → DOMOutputSpec>\n    // The node serialization functions.\n    this.nodes = nodes || {}\n    // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n    // The mark serialization functions.\n    this.marks = marks || {}\n  }\n\n  // :: (Fragment, ?Object) → dom.DocumentFragment\n  // Serialize the content of this fragment to a DOM fragment. When\n  // not in the browser, the `document` option, containing a DOM\n  // document, should be passed so that the serializer can create\n  // nodes.\n  serializeFragment(fragment, options = {}, target) {\n    if (!target) target = doc(options).createDocumentFragment()\n\n    let top = target, active = null\n    fragment.forEach(node => {\n      if (active || node.marks.length) {\n        if (!active) active = []\n        let keep = 0, rendered = 0\n        while (keep < active.length && rendered < node.marks.length) {\n          let next = node.marks[rendered]\n          if (!this.marks[next.type.name]) { rendered++; continue }\n          if (!next.eq(active[keep]) || next.type.spec.spanning === false) break\n          keep += 2; rendered++\n        }\n        while (keep < active.length) {\n          top = active.pop()\n          active.pop()\n        }\n        while (rendered < node.marks.length) {\n          let add = node.marks[rendered++]\n          let markDOM = this.serializeMark(add, node.isInline, options)\n          if (markDOM) {\n            active.push(add, top)\n            top.appendChild(markDOM.dom)\n            top = markDOM.contentDOM || markDOM.dom\n          }\n        }\n      }\n      top.appendChild(this.serializeNodeInner(node, options))\n    })\n\n    return target\n  }\n\n  serializeNodeInner(node, options = {}) {\n    let {dom, contentDOM} =\n        DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node))\n    if (contentDOM) {\n      if (node.isLeaf)\n        throw new RangeError(\"Content hole not allowed in a leaf node spec\")\n      if (options.onContent)\n        options.onContent(node, contentDOM, options)\n      else\n        this.serializeFragment(node.content, options, contentDOM)\n    }\n    return dom\n  }\n\n  // :: (Node, ?Object) → dom.Node\n  // Serialize this node to a DOM node. This can be useful when you\n  // need to serialize a part of a document, as opposed to the whole\n  // document. To serialize a whole document, use\n  // [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n  // its [content](#model.Node.content).\n  serializeNode(node, options = {}) {\n    let dom = this.serializeNodeInner(node, options)\n    for (let i = node.marks.length - 1; i >= 0; i--) {\n      let wrap = this.serializeMark(node.marks[i], node.isInline, options)\n      if (wrap) {\n        ;(wrap.contentDOM || wrap.dom).appendChild(dom)\n        dom = wrap.dom\n      }\n    }\n    return dom\n  }\n\n  serializeMark(mark, inline, options = {}) {\n    let toDOM = this.marks[mark.type.name]\n    return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n  }\n\n  // :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n  // Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n  // the spec has a hole (zero) in it, `contentDOM` will point at the\n  // node with the hole.\n  static renderSpec(doc, structure, xmlNS = null) {\n    if (typeof structure == \"string\")\n      return {dom: doc.createTextNode(structure)}\n    if (structure.nodeType != null)\n      return {dom: structure}\n    if (structure.dom && structure.dom.nodeType != null)\n      return structure\n    let tagName = structure[0], space = tagName.indexOf(\" \")\n    if (space > 0) {\n      xmlNS = tagName.slice(0, space)\n      tagName = tagName.slice(space + 1)\n    }\n    let contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName)\n    let attrs = structure[1], start = 1\n    if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n      start = 2\n      for (let name in attrs) if (attrs[name] != null) {\n        let space = name.indexOf(\" \")\n        if (space > 0) dom.setAttributeNS(name.slice(0, space), name.slice(space + 1), attrs[name])\n        else dom.setAttribute(name, attrs[name])\n      }\n    }\n    for (let i = start; i < structure.length; i++) {\n      let child = structure[i]\n      if (child === 0) {\n        if (i < structure.length - 1 || i > start)\n          throw new RangeError(\"Content hole must be the only child of its parent node\")\n        return {dom, contentDOM: dom}\n      } else {\n        let {dom: inner, contentDOM: innerContent} = DOMSerializer.renderSpec(doc, child, xmlNS)\n        dom.appendChild(inner)\n        if (innerContent) {\n          if (contentDOM) throw new RangeError(\"Multiple content holes\")\n          contentDOM = innerContent\n        }\n      }\n    }\n    return {dom, contentDOM}\n  }\n\n  // :: (Schema) → DOMSerializer\n  // Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n  // properties in a schema's node and mark specs.\n  static fromSchema(schema) {\n    return schema.cached.domSerializer ||\n      (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n  }\n\n  // : (Schema) → Object<(node: Node) → DOMOutputSpec>\n  // Gather the serializers in a schema's node specs into an object.\n  // This can be useful as a base to build a custom serializer from.\n  static nodesFromSchema(schema) {\n    let result = gatherToDOM(schema.nodes)\n    if (!result.text) result.text = node => node.text\n    return result\n  }\n\n  // : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n  // Gather the serializers in a schema's mark specs into an object.\n  static marksFromSchema(schema) {\n    return gatherToDOM(schema.marks)\n  }\n}\n\nfunction gatherToDOM(obj) {\n  let result = {}\n  for (let name in obj) {\n    let toDOM = obj[name].spec.toDOM\n    if (toDOM) result[name] = toDOM\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n","import {findWrapping, liftTarget, canSplit, ReplaceAroundStep} from \"prosemirror-transform\"\nimport {Slice, Fragment, NodeRange} from \"prosemirror-model\"\n\nconst olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0]\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nexport const orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n}\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nexport const bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM() { return ulDOM }\n}\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nexport const listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM() { return liDOM },\n  defining: true\n}\n\nfunction add(obj, props) {\n  let copy = {}\n  for (let prop in obj) copy[prop] = obj[prop]\n  for (let prop in props) copy[prop] = props[prop]\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nexport function addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nexport function wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to), doJoin = false, outerRange = range\n    if (!range) return false\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) return false\n      let $insert = state.doc.resolve(range.start - 2)\n      outerRange = new NodeRange($insert, $insert, range.depth)\n      if (range.endIndex < range.parent.childCount)\n        range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth)\n      doJoin = true\n    }\n    let wrap = findWrapping(outerRange, listType, attrs, range)\n    if (!wrap) return false\n    if (dispatch) dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView())\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--)\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true))\n\n  let found = 0\n  for (let i = 0; i < wrappers.length; i++) if (wrappers[i].type == listType) found = i + 1\n  let splitDepth = wrappers.length - found\n\n  let splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent\n  for (let i = range.startIndex, e = range.endIndex, first = true; i < e; i++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth)\n      splitPos += 2 * splitDepth\n    }\n    splitPos += parent.child(i).nodeSize\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nexport function splitListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to, node} = state.selection\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) return false\n    let grandParent = $from.node(-1)\n    if (grandParent.type != itemType) return false\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) return false\n      if (dispatch) {\n        let wrap = Fragment.empty\n        let depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n          wrap = Fragment.from($from.node(d).copy(wrap))\n        let depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n            : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()))\n        let start = $from.before($from.depth - (depthBefore - 1))\n        let tr = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0))\n        let sel = -1\n        tr.doc.nodesBetween(start, tr.doc.content.size, (node, pos) => {\n          if (sel > -1) return false\n          if (node.isTextblock && node.content.size == 0) sel = pos + 1\n        })\n        if (sel > -1) tr.setSelection(state.selection.constructor.near(tr.doc.resolve(sel)))\n        dispatch(tr.scrollIntoView())\n      }\n      return true\n    }\n    let nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null\n    let tr = state.tr.delete($from.pos, $to.pos)\n    let types = nextType && [null, {type: nextType}]\n    if (!canSplit(tr.doc, $from.pos, 2, types)) return false\n    if (dispatch) dispatch(tr.split($from.pos, 2, types).scrollIntoView())\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nexport function liftListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    if (!dispatch) return true\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      return liftToOuterList(state, dispatch, itemType, range)\n    else // Outer list node\n      return liftOutOfList(state, dispatch, range)\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  let tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth)\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true))\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth)\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView())\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  let tr = state.tr, list = range.parent\n  // Merge the list items into a single big item\n  for (let pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize\n    tr.delete(pos - 1, pos + 1)\n  }\n  let $start = tr.doc.resolve(range.start), item = $start.nodeAfter\n  if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize) return false\n  let atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount\n  let parent = $start.node(-1), indexBefore = $start.index(-1)\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    return false\n  let start = $start.pos, end = start + item.nodeSize\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1))\n  dispatch(tr.scrollIntoView())\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nexport function sinkListItem(itemType) {\n  return function(state, dispatch) {\n    let {$from, $to} = state.selection\n    let range = $from.blockRange($to, node => node.childCount && node.firstChild.type == itemType)\n    if (!range) return false\n    let startIndex = range.startIndex\n    if (startIndex == 0) return false\n    let parent = range.parent, nodeBefore = parent.child(startIndex - 1)\n    if (nodeBefore.type != itemType) return false\n\n    if (dispatch) {\n      let nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type\n      let inner = Fragment.from(nestedBefore ? itemType.create() : null)\n      let slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0)\n      let before = range.start, after = range.end\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView())\n    }\n    return true\n  }\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\nimport {ReplaceStep, ReplaceAroundStep} from \"prosemirror-transform\"\n\nconst classesById = Object.create(null)\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nexport class Selection {\n  // :: (ResolvedPos, ResolvedPos, ?[SelectionRange])\n  // Initialize a selection with the head and anchor and ranges. If no\n  // ranges are given, constructs a single range across `$anchor` and\n  // `$head`.\n  constructor($anchor, $head, ranges) {\n    // :: [SelectionRange]\n    // The ranges covered by the selection.\n    this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))]\n    // :: ResolvedPos\n    // The resolved anchor of the selection (the side that stays in\n    // place when the selection is modified).\n    this.$anchor = $anchor\n    // :: ResolvedPos\n    // The resolved head of the selection (the side that moves when\n    // the selection is modified).\n    this.$head = $head\n  }\n\n  // :: number\n  // The selection's anchor, as an unresolved position.\n  get anchor() { return this.$anchor.pos }\n\n  // :: number\n  // The selection's head.\n  get head() { return this.$head.pos }\n\n  // :: number\n  // The lower bound of the selection's main range.\n  get from() { return this.$from.pos }\n\n  // :: number\n  // The upper bound of the selection's main range.\n  get to() { return this.$to.pos }\n\n  // :: ResolvedPos\n  // The resolved lower  bound of the selection's main range.\n  get $from() {\n    return this.ranges[0].$from\n  }\n\n  // :: ResolvedPos\n  // The resolved upper bound of the selection's main range.\n  get $to() {\n    return this.ranges[0].$to\n  }\n\n  // :: bool\n  // Indicates whether the selection contains any content.\n  get empty() {\n    let ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++)\n      if (ranges[i].$from.pos != ranges[i].$to.pos) return false\n    return true\n  }\n\n  // eq:: (Selection) → bool\n  // Test whether the selection is the same as another selection.\n\n  // map:: (doc: Node, mapping: Mappable) → Selection\n  // Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n  // should be the new document to which we are mapping.\n\n  // :: () → Slice\n  // Get the content of this selection as a slice.\n  content() {\n    return this.$from.node(0).slice(this.from, this.to, true)\n  }\n\n  // :: (Transaction, ?Slice)\n  // Replace the selection with a slice or, if no slice is given,\n  // delete the selection. Will append to the given transaction.\n  replace(tr, content = Slice.empty) {\n    // Put the new selection at the position after the inserted\n    // content. When that ended in an inline node, search backwards,\n    // to get the position after that node. If not, search forward.\n    let lastNode = content.content.lastChild, lastParent = null\n    for (let i = 0; i < content.openEnd; i++) {\n      lastParent = lastNode\n      lastNode = lastNode.lastChild\n    }\n\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n      if (i == 0)\n        selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1)\n    }\n  }\n\n  // :: (Transaction, Node)\n  // Replace the selection with the given node, appending the changes\n  // to the given transaction.\n  replaceWith(tr, node) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      let from = mapping.map($from.pos), to = mapping.map($to.pos)\n      if (i) {\n        tr.deleteRange(from, to)\n      } else {\n        tr.replaceRangeWith(from, to, node)\n        selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1)\n      }\n    }\n  }\n\n  // toJSON:: () → Object\n  // Convert the selection to a JSON representation. When implementing\n  // this for a custom selection class, make sure to give the object a\n  // `type` property whose value matches the ID under which you\n  // [registered](#state.Selection^jsonID) your class.\n\n  // :: (ResolvedPos, number, ?bool) → ?Selection\n  // Find a valid cursor or leaf node selection starting at the given\n  // position and searching back if `dir` is negative, and forward if\n  // positive. When `textOnly` is true, only consider cursor\n  // selections. Will return null when no valid selection position is\n  // found.\n  static findFrom($pos, dir, textOnly) {\n    let inner = $pos.parent.inlineContent ? new TextSelection($pos)\n        : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly)\n    if (inner) return inner\n\n    for (let depth = $pos.depth - 1; depth >= 0; depth--) {\n      let found = dir < 0\n          ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n          : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly)\n      if (found) return found\n    }\n  }\n\n  // :: (ResolvedPos, ?number) → Selection\n  // Find a valid cursor or leaf node selection near the given\n  // position. Searches forward first by default, but if `bias` is\n  // negative, it will search backwards first.\n  static near($pos, bias = 1) {\n    return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the start of\n  // the given document. Will return an\n  // [`AllSelection`](#state.AllSelection) if no valid position\n  // exists.\n  static atStart(doc) {\n    return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n  }\n\n  // :: (Node) → Selection\n  // Find the cursor or leaf node selection closest to the end of the\n  // given document.\n  static atEnd(doc) {\n    return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n  }\n\n  // :: (Node, Object) → Selection\n  // Deserialize the JSON representation of a selection. Must be\n  // implemented for custom classes (as a static class method).\n  static fromJSON(doc, json) {\n    if (!json || !json.type) throw new RangeError(\"Invalid input for Selection.fromJSON\")\n    let cls = classesById[json.type]\n    if (!cls) throw new RangeError(`No selection type ${json.type} defined`)\n    return cls.fromJSON(doc, json)\n  }\n\n  // :: (string, constructor<Selection>)\n  // To be able to deserialize selections from JSON, custom selection\n  // classes must register themselves with an ID string, so that they\n  // can be disambiguated. Try to pick something that's unlikely to\n  // clash with classes from other modules.\n  static jsonID(id, selectionClass) {\n    if (id in classesById) throw new RangeError(\"Duplicate use of selection JSON ID \" + id)\n    classesById[id] = selectionClass\n    selectionClass.prototype.jsonID = id\n    return selectionClass\n  }\n\n  // :: () → SelectionBookmark\n  // Get a [bookmark](#state.SelectionBookmark) for this selection,\n  // which is a value that can be mapped without having access to a\n  // current document, and later resolved to a real selection for a\n  // given document again. (This is used mostly by the history to\n  // track and restore old selections.) The default implementation of\n  // this method just converts the selection to a text selection and\n  // returns the bookmark for that.\n  getBookmark() {\n    return TextSelection.between(this.$anchor, this.$head).getBookmark()\n  }\n}\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nexport class SelectionRange {\n  // :: (ResolvedPos, ResolvedPos)\n  constructor($from, $to) {\n    // :: ResolvedPos\n    // The lower bound of the range.\n    this.$from = $from\n    // :: ResolvedPos\n    // The upper bound of the range.\n    this.$to = $to\n  }\n}\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nexport class TextSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // Construct a text selection between the given points.\n  constructor($anchor, $head = $anchor) {\n    super($anchor, $head)\n  }\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  get $cursor() { return this.$anchor.pos == this.$head.pos ? this.$head : null }\n\n  map(doc, mapping) {\n    let $head = doc.resolve(mapping.map(this.head))\n    if (!$head.parent.inlineContent) return Selection.near($head)\n    let $anchor = doc.resolve(mapping.map(this.anchor))\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  }\n\n  replace(tr, content = Slice.empty) {\n    super.replace(tr, content)\n    if (content == Slice.empty) {\n      let marks = this.$from.marksAcross(this.$to)\n      if (marks) tr.ensureMarks(marks)\n    }\n  }\n\n  eq(other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  }\n\n  getBookmark() {\n    return new TextBookmark(this.anchor, this.head)\n  }\n\n  toJSON() {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      throw new RangeError(\"Invalid input for TextSelection.fromJSON\")\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  static create(doc, anchor, head = anchor) {\n    let $anchor = doc.resolve(anchor)\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  }\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  static between($anchor, $head, bias) {\n    let dPos = $anchor.pos - $head.pos\n    if (!bias || dPos) bias = dPos >= 0 ? 1 : -1\n    if (!$head.parent.inlineContent) {\n      let found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true)\n      if (found) $head = found.$head\n      else return Selection.near($head, bias)\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor\n        if (($anchor.pos < $head.pos) != (dPos < 0)) $anchor = $head\n      }\n    }\n    return new TextSelection($anchor, $head)\n  }\n}\n\nSelection.jsonID(\"text\", TextSelection)\n\nclass TextBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n  }\n}\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nexport class NodeSelection extends Selection {\n  // :: (ResolvedPos)\n  // Create a node selection. Does not verify the validity of its\n  // argument.\n  constructor($pos) {\n    let node = $pos.nodeAfter\n    let $end = $pos.node(0).resolve($pos.pos + node.nodeSize)\n    super($pos, $end)\n    // :: Node The selected node.\n    this.node = node\n  }\n\n  map(doc, mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    let $pos = doc.resolve(pos)\n    if (deleted) return Selection.near($pos)\n    return new NodeSelection($pos)\n  }\n\n  content() {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  }\n\n  eq(other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  }\n\n  toJSON() {\n    return {type: \"node\", anchor: this.anchor}\n  }\n\n  getBookmark() { return new NodeBookmark(this.anchor) }\n\n  static fromJSON(doc, json) {\n    if (typeof json.anchor != \"number\")\n      throw new RangeError(\"Invalid input for NodeSelection.fromJSON\")\n    return new NodeSelection(doc.resolve(json.anchor))\n  }\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  static create(doc, from) {\n    return new this(doc.resolve(from))\n  }\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  static isSelectable(node) {\n    return !node.isText && node.type.spec.selectable !== false\n  }\n}\n\nNodeSelection.prototype.visible = false\n\nSelection.jsonID(\"node\", NodeSelection)\n\nclass NodeBookmark {\n  constructor(anchor) {\n    this.anchor = anchor\n  }\n  map(mapping) {\n    let {deleted, pos} = mapping.mapResult(this.anchor)\n    return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.anchor), node = $pos.nodeAfter\n    if (node && NodeSelection.isSelectable(node)) return new NodeSelection($pos)\n    return Selection.near($pos)\n  }\n}\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nexport class AllSelection extends Selection {\n  // :: (Node)\n  // Create an all-selection over the given document.\n  constructor(doc) {\n    super(doc.resolve(0), doc.resolve(doc.content.size))\n  }\n\n  replace(tr, content = Slice.empty) {\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size)\n      let sel = Selection.atStart(tr.doc)\n      if (!sel.eq(tr.selection)) tr.setSelection(sel)\n    } else {\n      super.replace(tr, content)\n    }\n  }\n\n  toJSON() { return {type: \"all\"} }\n\n  static fromJSON(doc) { return new AllSelection(doc) }\n\n  map(doc) { return new AllSelection(doc) }\n\n  eq(other) { return other instanceof AllSelection }\n\n  getBookmark() { return AllBookmark }\n}\n\nSelection.jsonID(\"all\", AllSelection)\n\nconst AllBookmark = {\n  map() { return this },\n  resolve(doc) { return new AllSelection(doc) }\n}\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) return TextSelection.create(doc, pos)\n  for (let i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    let child = node.child(i)\n    if (!child.isAtom) {\n      let inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text)\n      if (inner) return inner\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  let last = tr.steps.length - 1\n  if (last < startLen) return\n  let step = tr.steps[last]\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) return\n  let map = tr.mapping.maps[last], end\n  map.forEach((_from, _to, _newFrom, newTo) => { if (end == null) end = newTo })\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias))\n}\n","import {Transform} from \"prosemirror-transform\"\nimport {Mark} from \"prosemirror-model\"\nimport {Selection} from \"./selection\"\n\nconst UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nexport class Transaction extends Transform {\n  constructor(state) {\n    super(state.doc)\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now()\n    this.curSelection = state.selection\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null)\n  }\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  get selection() {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor))\n      this.curSelectionFor = this.steps.length\n    }\n    return this.curSelection\n  }\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  setSelection(selection) {\n    if (selection.$from.doc != this.doc)\n      throw new RangeError(\"Selection passed to setSelection must point at the current document\")\n    this.curSelection = selection\n    this.curSelectionFor = this.steps.length\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS\n    this.storedMarks = null\n    return this\n  }\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  get selectionSet() {\n    return (this.updated & UPDATED_SEL) > 0\n  }\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  setStoredMarks(marks) {\n    this.storedMarks = marks\n    this.updated |= UPDATED_MARKS\n    return this\n  }\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  ensureMarks(marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      this.setStoredMarks(marks)\n    return this\n  }\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  addStoredMark(mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  removeStoredMark(mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  }\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  get storedMarksSet() {\n    return (this.updated & UPDATED_MARKS) > 0\n  }\n\n  addStep(step, doc) {\n    super.addStep(step, doc)\n    this.updated = this.updated & ~UPDATED_MARKS\n    this.storedMarks = null\n  }\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  setTime(time) {\n    this.time = time\n    return this\n  }\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  replaceSelection(slice) {\n    this.selection.replace(this, slice)\n    return this\n  }\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  replaceSelectionWith(node, inheritMarks) {\n    let selection = this.selection\n    if (inheritMarks !== false)\n      node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none)))\n    selection.replaceWith(this, node)\n    return this\n  }\n\n  // :: () → Transaction\n  // Delete the selection.\n  deleteSelection() {\n    this.selection.replace(this)\n    return this\n  }\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  insertText(text, from, to = from) {\n    let schema = this.doc.type.schema\n    if (from == null) {\n      if (!text) return this.deleteSelection()\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) return this.deleteRange(from, to)\n      let marks = this.storedMarks\n      if (!marks) {\n        let $from = this.doc.resolve(from)\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to))\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks))\n      if (!this.selection.empty) this.setSelection(Selection.near(this.selection.$to))\n      return this\n    }\n  }\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  setMeta(key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value\n    return this\n  }\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  getMeta(key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  }\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  get isGeneric() {\n    for (let _ in this.meta) return false\n    return true\n  }\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  scrollIntoView() {\n    this.updated |= UPDATED_SCROLL\n    return this\n  }\n\n  get scrolledIntoView() {\n    return (this.updated & UPDATED_SCROLL) > 0\n  }\n}\n","import {Node} from \"prosemirror-model\"\n\nimport {Selection} from \"./selection\"\nimport {Transaction} from \"./transaction\"\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nclass FieldDesc {\n  constructor(name, desc, self) {\n    this.name = name\n    this.init = bind(desc.init, self)\n    this.apply = bind(desc.apply, self)\n  }\n}\n\nconst baseFields = [\n  new FieldDesc(\"doc\", {\n    init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init(config) { return config.storedMarks || null },\n    apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init() { return 0 },\n    apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n]\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nclass Configuration {\n  constructor(schema, plugins) {\n    this.schema = schema\n    this.fields = baseFields.concat()\n    this.plugins = []\n    this.pluginsByKey = Object.create(null)\n    if (plugins) plugins.forEach(plugin => {\n      if (this.pluginsByKey[plugin.key])\n        throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\")\n      this.plugins.push(plugin)\n      this.pluginsByKey[plugin.key] = plugin\n      if (plugin.spec.state)\n        this.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin))\n    })\n  }\n}\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nexport class EditorState {\n  constructor(config) {\n    this.config = config\n  }\n\n  // doc:: Node\n  // The current document.\n\n  // selection:: Selection\n  // The selection.\n\n  // storedMarks:: ?[Mark]\n  // A set of marks to apply to the next input. Will be null when\n  // no explicit marks have been set.\n\n  // :: Schema\n  // The schema of the state's document.\n  get schema() {\n    return this.config.schema\n  }\n\n  // :: [Plugin]\n  // The plugins that are active in this state.\n  get plugins() {\n    return this.config.plugins\n  }\n\n  // :: (Transaction) → EditorState\n  // Apply the given transaction to produce a new state.\n  apply(tr) {\n    return this.applyTransaction(tr).state\n  }\n\n  // : (Transaction) → bool\n  filterTransaction(tr, ignore = -1) {\n    for (let i = 0; i < this.config.plugins.length; i++) if (i != ignore) {\n      let plugin = this.config.plugins[i]\n      if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n        return false\n    }\n    return true\n  }\n\n  // :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n  // Verbose variant of [`apply`](#state.EditorState.apply) that\n  // returns the precise transactions that were applied (which might\n  // be influenced by the [transaction\n  // hooks](#state.PluginSpec.filterTransaction) of\n  // plugins) along with the new state.\n  applyTransaction(rootTr) {\n    if (!this.filterTransaction(rootTr)) return {state: this, transactions: []}\n\n    let trs = [rootTr], newState = this.applyInner(rootTr), seen = null\n    // This loop repeatedly gives plugins a chance to respond to\n    // transactions as new transactions are added, making sure to only\n    // pass the transactions the plugin did not see before.\n    outer: for (;;) {\n      let haveNew = false\n      for (let i = 0; i < this.config.plugins.length; i++) {\n        let plugin = this.config.plugins[i]\n        if (plugin.spec.appendTransaction) {\n          let n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this\n          let tr = n < trs.length &&\n              plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState)\n          if (tr && newState.filterTransaction(tr, i)) {\n            tr.setMeta(\"appendedTransaction\", rootTr)\n            if (!seen) {\n              seen = []\n              for (let j = 0; j < this.config.plugins.length; j++)\n                seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0})\n            }\n            trs.push(tr)\n            newState = newState.applyInner(tr)\n            haveNew = true\n          }\n          if (seen) seen[i] = {state: newState, n: trs.length}\n        }\n      }\n      if (!haveNew) return {state: newState, transactions: trs}\n    }\n  }\n\n  // : (Transaction) → EditorState\n  applyInner(tr) {\n    if (!tr.before.eq(this.doc)) throw new RangeError(\"Applying a mismatched transaction\")\n    let newInstance = new EditorState(this.config), fields = this.config.fields\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i]\n      newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance)\n    }\n    for (let i = 0; i < applyListeners.length; i++) applyListeners[i](this, tr, newInstance)\n    return newInstance\n  }\n\n  // :: Transaction\n  // Start a [transaction](#state.Transaction) from this state.\n  get tr() { return new Transaction(this) }\n\n  // :: (Object) → EditorState\n  // Create a new state.\n  //\n  //   config::- Configuration options. Must contain `schema` or `doc` (or both).\n  //\n  //      schema:: ?Schema\n  //      The schema to use (only relevant if no `doc` is specified).\n  //\n  //      doc:: ?Node\n  //      The starting document.\n  //\n  //      selection:: ?Selection\n  //      A valid selection in the document.\n  //\n  //      storedMarks:: ?[Mark]\n  //      The initial set of [stored marks](#state.EditorState.storedMarks).\n  //\n  //      plugins:: ?[Plugin]\n  //      The plugins that should be active in this state.\n  static create(config) {\n    let $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins)\n    let instance = new EditorState($config)\n    for (let i = 0; i < $config.fields.length; i++)\n      instance[$config.fields[i].name] = $config.fields[i].init(config, instance)\n    return instance\n  }\n\n  // :: (Object) → EditorState\n  // Create a new state based on this one, but with an adjusted set of\n  // active plugins. State fields that exist in both sets of plugins\n  // are kept unchanged. Those that no longer exist are dropped, and\n  // those that are new are initialized using their\n  // [`init`](#state.StateField.init) method, passing in the new\n  // configuration object..\n  //\n  //   config::- configuration options\n  //\n  //     plugins:: [Plugin]\n  //     New set of active plugins.\n  reconfigure(config) {\n    let $config = new Configuration(this.schema, config.plugins)\n    let fields = $config.fields, instance = new EditorState($config)\n    for (let i = 0; i < fields.length; i++) {\n      let name = fields[i].name\n      instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance)\n    }\n    return instance\n  }\n\n  // :: (?union<Object<Plugin>, string, number>) → Object\n  // Serialize this state to JSON. If you want to serialize the state\n  // of plugins, pass an object mapping property names to use in the\n  // resulting JSON object to plugin objects. The argument may also be\n  // a string or number, in which case it is ignored, to support the\n  // way `JSON.stringify` calls `toString` methods.\n  toJSON(pluginFields) {\n    let result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()}\n    if (this.storedMarks) result.storedMarks = this.storedMarks.map(m => m.toJSON())\n    if (pluginFields && typeof pluginFields == 'object') for (let prop in pluginFields) {\n      if (prop == \"doc\" || prop == \"selection\")\n        throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\")\n      let plugin = pluginFields[prop], state = plugin.spec.state\n      if (state && state.toJSON) result[prop] = state.toJSON.call(plugin, this[plugin.key])\n    }\n    return result\n  }\n\n  // :: (Object, Object, ?Object<Plugin>) → EditorState\n  // Deserialize a JSON representation of a state. `config` should\n  // have at least a `schema` field, and should contain array of\n  // plugins to initialize the state with. `pluginFields` can be used\n  // to deserialize the state of plugins, by associating plugin\n  // instances with the property names they use in the JSON object.\n  //\n  //   config::- configuration options\n  //\n  //     schema:: Schema\n  //     The schema to use.\n  //\n  //     plugins:: ?[Plugin]\n  //     The set of active plugins.\n  static fromJSON(config, json, pluginFields) {\n    if (!json) throw new RangeError(\"Invalid input for EditorState.fromJSON\")\n    if (!config.schema) throw new RangeError(\"Required config field 'schema' missing\")\n    let $config = new Configuration(config.schema, config.plugins)\n    let instance = new EditorState($config)\n    $config.fields.forEach(field => {\n      if (field.name == \"doc\") {\n        instance.doc = Node.fromJSON(config.schema, json.doc)\n      } else if (field.name == \"selection\") {\n        instance.selection = Selection.fromJSON(instance.doc, json.selection)\n      } else if (field.name == \"storedMarks\") {\n        if (json.storedMarks) instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON)\n      } else {\n        if (pluginFields) for (let prop in pluginFields) {\n          let plugin = pluginFields[prop], state = plugin.spec.state\n          if (plugin.key == field.name && state && state.fromJSON &&\n              Object.prototype.hasOwnProperty.call(json, prop)) {\n            // This field belongs to a plugin mapped to a JSON field, read it from there.\n            instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance)\n            return\n          }\n        }\n        instance[field.name] = field.init(config, instance)\n      }\n    })\n    return instance\n  }\n\n  // Kludge to allow the view to track mappings between different\n  // instances of a state.\n  //\n  // FIXME this is no longer needed as of prosemirror-view 1.9.0,\n  // though due to backwards-compat we should probably keep it around\n  // for a while (if only as a no-op)\n  static addApplyListener(f) {\n    applyListeners.push(f)\n  }\n  static removeApplyListener(f) {\n    let found = applyListeners.indexOf(f)\n    if (found > -1) applyListeners.splice(found, 1)\n  }\n}\n\nconst applyListeners = []\n","// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (let prop in obj) {\n    let val = obj[prop]\n    if (val instanceof Function) val = val.bind(self)\n    else if (prop == \"handleDOMEvents\") val = bindProps(val, self, {})\n    target[prop] = val\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nexport class Plugin {\n  // :: (PluginSpec)\n  // Create a plugin.\n  constructor(spec) {\n    // :: EditorProps\n    // The [props](#view.EditorProps) exported by this plugin.\n    this.props = {}\n    if (spec.props) bindProps(spec.props, this, this.props)\n    // :: Object\n    // The plugin's [spec object](#state.PluginSpec).\n    this.spec = spec\n    this.key = spec.key ? spec.key.key : createKey(\"plugin\")\n  }\n\n  // :: (EditorState) → any\n  // Extract the plugin's state field from an editor state.\n  getState(state) { return state[this.key] }\n}\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nconst keys = Object.create(null)\n\nfunction createKey(name) {\n  if (name in keys) return name + \"$\" + ++keys[name]\n  keys[name] = 0\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nexport class PluginKey {\n  // :: (?string)\n  // Create a plugin key.\n  constructor(name = \"key\") { this.key = createKey(name) }\n\n  // :: (EditorState) → ?Plugin\n  // Get the active plugin with this key, if any, from an editor\n  // state.\n  get(state) { return state.config.pluginsByKey[this.key] }\n\n  // :: (EditorState) → ?any\n  // Get the plugin's state from an editor state.\n  getState(state) { return state[this.key] }\n}\n","// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nconst lower16 = 0xffff\nconst factor16 = Math.pow(2, 16)\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nexport class MapResult {\n  constructor(pos, deleted = false, recover = null) {\n    // :: number The mapped version of the position.\n    this.pos = pos\n    // :: bool Tells you whether the position was deleted, that is,\n    // whether the step removed its surroundings from the document.\n    this.deleted = deleted\n    this.recover = recover\n  }\n}\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nexport class StepMap {\n  // :: ([number])\n  // Create a position map. The modifications to the document are\n  // represented as an array of numbers, in which each group of three\n  // represents a modified chunk as `[start, oldSize, newSize]`.\n  constructor(ranges, inverted = false) {\n    if (!ranges.length && StepMap.empty) return StepMap.empty\n    this.ranges = ranges\n    this.inverted = inverted\n  }\n\n  recover(value) {\n    let diff = 0, index = recoverIndex(value)\n    if (!this.inverted) for (let i = 0; i < index; i++)\n      diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]\n    return this.ranges[index * 3] + diff + recoverOffset(value)\n  }\n\n  // : (number, ?number) → MapResult\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  // : (number, ?number) → number\n  map(pos, assoc = 1) { return this._map(pos, assoc, true) }\n\n  _map(pos, assoc, simple) {\n    let diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize\n      if (pos <= end) {\n        let side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc\n        let result = start + diff + (side < 0 ? 0 : newSize)\n        if (simple) return result\n        let recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start)\n        return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n      }\n      diff += newSize - oldSize\n    }\n    return simple ? pos + diff : new MapResult(pos + diff)\n  }\n\n  touches(pos, recover) {\n    let diff = 0, index = recoverIndex(recover)\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i] - (this.inverted ? diff : 0)\n      if (start > pos) break\n      let oldSize = this.ranges[i + oldIndex], end = start + oldSize\n      if (pos <= end && i == index * 3) return true\n      diff += this.ranges[i + newIndex] - oldSize\n    }\n    return false\n  }\n\n  // :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n  // Calls the given function on each of the changed ranges included in\n  // this map.\n  forEach(f) {\n    let oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2\n    for (let i = 0, diff = 0; i < this.ranges.length; i += 3) {\n      let start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff)\n      let oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex]\n      f(oldStart, oldStart + oldSize, newStart, newStart + newSize)\n      diff += newSize - oldSize\n    }\n  }\n\n  // :: () → StepMap\n  // Create an inverted version of this map. The result can be used to\n  // map positions in the post-step document to the pre-step document.\n  invert() {\n    return new StepMap(this.ranges, !this.inverted)\n  }\n\n  toString() {\n    return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n  }\n\n  // :: (n: number) → StepMap\n  // Create a map that moves all positions by offset `n` (which may be\n  // negative). This can be useful when applying steps meant for a\n  // sub-document to a larger document, or vice-versa.\n  static offset(n) {\n    return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n  }\n}\n\n// :: StepMap\n// A StepMap that contains no changed ranges.\nStepMap.empty = new StepMap([])\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nexport class Mapping {\n  // :: (?[StepMap])\n  // Create a new mapping with the given position maps.\n  constructor(maps, mirror, from, to) {\n    // :: [StepMap]\n    // The step maps in this mapping.\n    this.maps = maps || []\n    // :: number\n    // The starting position in the `maps` array, used when `map` or\n    // `mapResult` is called.\n    this.from = from || 0\n    // :: number\n    // The end position in the `maps` array.\n    this.to = to == null ? this.maps.length : to\n    this.mirror = mirror\n  }\n\n  // :: (?number, ?number) → Mapping\n  // Create a mapping that maps only through a part of this one.\n  slice(from = 0, to = this.maps.length) {\n    return new Mapping(this.maps, this.mirror, from, to)\n  }\n\n  copy() {\n    return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n  }\n\n  // :: (StepMap, ?number)\n  // Add a step map to the end of this mapping. If `mirrors` is\n  // given, it should be the index of the step map that is the mirror\n  // image of this one.\n  appendMap(map, mirrors) {\n    this.to = this.maps.push(map)\n    if (mirrors != null) this.setMirror(this.maps.length - 1, mirrors)\n  }\n\n  // :: (Mapping)\n  // Add all the step maps in a given mapping to this one (preserving\n  // mirroring information).\n  appendMapping(mapping) {\n    for (let i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null)\n    }\n  }\n\n  // :: (number) → ?number\n  // Finds the offset of the step map that mirrors the map at the\n  // given offset, in this mapping (as per the second argument to\n  // `appendMap`).\n  getMirror(n) {\n    if (this.mirror) for (let i = 0; i < this.mirror.length; i++)\n      if (this.mirror[i] == n) return this.mirror[i + (i % 2 ? -1 : 1)]\n  }\n\n  setMirror(n, m) {\n    if (!this.mirror) this.mirror = []\n    this.mirror.push(n, m)\n  }\n\n  // :: (Mapping)\n  // Append the inverse of the given mapping to this one.\n  appendMappingInverted(mapping) {\n    for (let i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n      let mirr = mapping.getMirror(i)\n      this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null)\n    }\n  }\n\n  // :: () → Mapping\n  // Create an inverted version of this mapping.\n  invert() {\n    let inverse = new Mapping\n    inverse.appendMappingInverted(this)\n    return inverse\n  }\n\n  // : (number, ?number) → number\n  // Map a position through this mapping.\n  map(pos, assoc = 1) {\n    if (this.mirror) return this._map(pos, assoc, true)\n    for (let i = this.from; i < this.to; i++)\n      pos = this.maps[i].map(pos, assoc)\n    return pos\n  }\n\n  // : (number, ?number) → MapResult\n  // Map a position through this mapping, returning a mapping\n  // result.\n  mapResult(pos, assoc = 1) { return this._map(pos, assoc, false) }\n\n  _map(pos, assoc, simple) {\n    let deleted = false\n\n    for (let i = this.from; i < this.to; i++) {\n      let map = this.maps[i], result = map.mapResult(pos, assoc)\n      if (result.recover != null) {\n        let corr = this.getMirror(i)\n        if (corr != null && corr > i && corr < this.to) {\n          i = corr\n          pos = this.maps[corr].recover(result.recover)\n          continue\n        }\n      }\n\n      if (result.deleted) deleted = true\n      pos = result.pos\n    }\n\n    return simple ? pos : new MapResult(pos, deleted)\n  }\n}\n","import {Mapping} from \"./map\"\n\nexport function TransformError(message) {\n  let err = Error.call(this, message)\n  err.__proto__ = TransformError.prototype\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype)\nTransformError.prototype.constructor = TransformError\nTransformError.prototype.name = \"TransformError\"\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nexport class Transform {\n  // :: (Node)\n  // Create a transform that starts with the given document.\n  constructor(doc) {\n    // :: Node\n    // The current document (the result of applying the steps in the\n    // transform).\n    this.doc = doc\n    // :: [Step]\n    // The steps in this transform.\n    this.steps = []\n    // :: [Node]\n    // The documents before each of the steps.\n    this.docs = []\n    // :: Mapping\n    // A mapping with the maps for each of the steps in this transform.\n    this.mapping = new Mapping\n  }\n\n  // :: Node The starting document.\n  get before() { return this.docs.length ? this.docs[0] : this.doc }\n\n  // :: (step: Step) → this\n  // Apply a new step in this transform, saving the result. Throws an\n  // error when the step fails.\n  step(object) {\n    let result = this.maybeStep(object)\n    if (result.failed) throw new TransformError(result.failed)\n    return this\n  }\n\n  // :: (Step) → StepResult\n  // Try to apply a step in this transformation, ignoring it if it\n  // fails. Returns the step result.\n  maybeStep(step) {\n    let result = step.apply(this.doc)\n    if (!result.failed) this.addStep(step, result.doc)\n    return result\n  }\n\n  // :: bool\n  // True when the document has been changed (when there are any\n  // steps).\n  get docChanged() {\n    return this.steps.length > 0\n  }\n\n  addStep(step, doc) {\n    this.docs.push(this.doc)\n    this.steps.push(step)\n    this.mapping.appendMap(step.getMap())\n    this.doc = doc\n  }\n}\n","import {ReplaceError} from \"prosemirror-model\"\n\nimport {StepMap} from \"./map\"\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nconst stepsByID = Object.create(null)\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nexport class Step {\n  // :: (doc: Node) → StepResult\n  // Applies this step to the given document, returning a result\n  // object that either indicates failure, if the step can not be\n  // applied to this document, or indicates success by containing a\n  // transformed document.\n  apply(_doc) { return mustOverride() }\n\n  // :: () → StepMap\n  // Get the step map that represents the changes made by this step,\n  // and which can be used to transform between positions in the old\n  // and the new document.\n  getMap() { return StepMap.empty }\n\n  // :: (doc: Node) → Step\n  // Create an inverted version of this step. Needs the document as it\n  // was before the step as argument.\n  invert(_doc) { return mustOverride() }\n\n  // :: (mapping: Mappable) → ?Step\n  // Map this step through a mappable thing, returning either a\n  // version of that step with its positions adjusted, or `null` if\n  // the step was entirely deleted by the mapping.\n  map(_mapping) { return mustOverride() }\n\n  // :: (other: Step) → ?Step\n  // Try to merge this step with another one, to be applied directly\n  // after it. Returns the merged step when possible, null if the\n  // steps can't be merged.\n  merge(_other) { return null }\n\n  // :: () → Object\n  // Create a JSON-serializeable representation of this step. When\n  // defining this for a custom subclass, make sure the result object\n  // includes the step type's [JSON id](#transform.Step^jsonID) under\n  // the `stepType` property.\n  toJSON() { return mustOverride() }\n\n  // :: (Schema, Object) → Step\n  // Deserialize a step from its JSON representation. Will call\n  // through to the step class' own implementation of this method.\n  static fromJSON(schema, json) {\n    if (!json || !json.stepType) throw new RangeError(\"Invalid input for Step.fromJSON\")\n    let type = stepsByID[json.stepType]\n    if (!type) throw new RangeError(`No step type ${json.stepType} defined`)\n    return type.fromJSON(schema, json)\n  }\n\n  // :: (string, constructor<Step>)\n  // To be able to serialize steps to JSON, each step needs a string\n  // ID to attach to its JSON representation. Use this method to\n  // register an ID for your step classes. Try to pick something\n  // that's unlikely to clash with steps from other modules.\n  static jsonID(id, stepClass) {\n    if (id in stepsByID) throw new RangeError(\"Duplicate use of step JSON ID \" + id)\n    stepsByID[id] = stepClass\n    stepClass.prototype.jsonID = id\n    return stepClass\n  }\n}\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nexport class StepResult {\n  // : (?Node, ?string)\n  constructor(doc, failed) {\n    // :: ?Node The transformed document.\n    this.doc = doc\n    // :: ?string Text providing information about a failed step.\n    this.failed = failed\n  }\n\n  // :: (Node) → StepResult\n  // Create a successful step result.\n  static ok(doc) { return new StepResult(doc, null) }\n\n  // :: (string) → StepResult\n  // Create a failed step result.\n  static fail(message) { return new StepResult(null, message) }\n\n  // :: (Node, number, number, Slice) → StepResult\n  // Call [`Node.replace`](#model.Node.replace) with the given\n  // arguments. Create a successful result if it succeeds, and a\n  // failed one if it throws a `ReplaceError`.\n  static fromReplace(doc, from, to, slice) {\n    try {\n      return StepResult.ok(doc.replace(from, to, slice))\n    } catch (e) {\n      if (e instanceof ReplaceError) return StepResult.fail(e.message)\n      throw e\n    }\n  }\n}\n","import {Slice} from \"prosemirror-model\"\n\nimport {Step, StepResult} from \"./step\"\nimport {StepMap} from \"./map\"\n\n// ::- Replace a part of the document with a slice of new content.\nexport class ReplaceStep extends Step {\n  // :: (number, number, Slice, ?bool)\n  // The given `slice` should fit the 'gap' between `from` and\n  // `to`—the depths must line up, and the surrounding nodes must be\n  // able to be joined with the open sides of the slice. When\n  // `structure` is true, the step will fail if the content between\n  // from and to is not just a sequence of closing and then opening\n  // tokens (this is to guard against rebased replace steps\n  // overwriting something they weren't supposed to).\n  constructor(from, to, slice, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      return StepResult.fail(\"Structure replace would overwrite content\")\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  }\n\n  invert(doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted) return null\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  }\n\n  merge(other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) return null\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd)\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      let slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd)\n      return new ReplaceStep(other.from, this.to, slice, this.structure)\n    } else {\n      return null\n    }\n  }\n\n  toJSON() {\n    let json = {stepType: \"replace\", from: this.from, to: this.to}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\")\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  }\n}\n\nStep.jsonID(\"replace\", ReplaceStep)\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nexport class ReplaceAroundStep extends Step {\n  // :: (number, number, number, number, Slice, number, ?bool)\n  // Create a replace-around step with the given range and gap.\n  // `insert` should be the point in the slice into which the content\n  // of the gap should be moved. `structure` has the same meaning as\n  // it has in the [`ReplaceStep`](#transform.ReplaceStep) class.\n  constructor(from, to, gapFrom, gapTo, slice, insert, structure) {\n    super()\n    // :: number\n    // The start position of the replaced range.\n    this.from = from\n    // :: number\n    // The end position of the replaced range.\n    this.to = to\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert\n    this.structure = !!structure\n  }\n\n  apply(doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      return StepResult.fail(\"Structure gap-replace would overwrite content\")\n\n    let gap = doc.slice(this.gapFrom, this.gapTo)\n    if (gap.openStart || gap.openEnd)\n      return StepResult.fail(\"Gap is not a flat range\")\n    let inserted = this.slice.insertAt(this.insert, gap.content)\n    if (!inserted) return StepResult.fail(\"Content does not fit in gap\")\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  }\n\n  getMap() {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  }\n\n  invert(doc) {\n    let gap = this.gapTo - this.gapFrom\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    let gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1)\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) return null\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  }\n\n  toJSON() {\n    let json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert}\n    if (this.slice.size) json.slice = this.slice.toJSON()\n    if (this.structure) json.structure = true\n    return json\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\")\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  }\n}\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep)\n\nfunction contentBetween(doc, from, to) {\n  let $from = doc.resolve(from), dist = to - from, depth = $from.depth\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--\n    dist--\n  }\n  if (dist > 0) {\n    let next = $from.node(depth).maybeChild($from.indexAfter(depth))\n    while (dist > 0) {\n      if (!next || next.isLeaf) return true\n      next = next.firstChild\n      dist--\n    }\n  }\n  return false\n}\n","import {Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nexport function liftTarget(range) {\n  let parent = range.parent\n  let content = parent.content.cutByIndex(range.startIndex, range.endIndex)\n  for (let depth = range.depth;; --depth) {\n    let node = range.$from.node(depth)\n    let index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth)\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      return depth\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) break\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  let {$from, $to, depth} = range\n\n  let gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1)\n  let start = gapStart, end = gapEnd\n\n  let before = Fragment.empty, openStart = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $from.index(d) > 0) {\n      splitting = true\n      before = Fragment.from($from.node(d).copy(before))\n      openStart++\n    } else {\n      start--\n    }\n  let after = Fragment.empty, openEnd = 0\n  for (let d = depth, splitting = false; d > target; d--)\n    if (splitting || $to.after(d + 1) < $to.end(d)) {\n      splitting = true\n      after = Fragment.from($to.node(d).copy(after))\n      openEnd++\n    } else {\n      end++\n    }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n}\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nexport function findWrapping(range, nodeType, attrs, innerRange = range) {\n  let around = findWrappingOutside(range, nodeType)\n  let inner = around && findWrappingInside(innerRange, nodeType)\n  if (!inner) return null\n  return around.map(withAttrs).concat({type: nodeType, attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let around = parent.contentMatchAt(startIndex).findWrapping(type)\n  if (!around) return null\n  let outer = around.length ? around[0] : type\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  let {parent, startIndex, endIndex} = range\n  let inner = parent.child(startIndex)\n  let inside = type.contentMatch.findWrapping(inner.type)\n  if (!inside) return null\n  let lastType = inside.length ? inside[inside.length - 1] : type\n  let innerMatch = lastType.contentMatch\n  for (let i = startIndex; innerMatch && i < endIndex; i++)\n    innerMatch = innerMatch.matchType(parent.child(i).type)\n  if (!innerMatch || !innerMatch.validEnd) return null\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  let content = Fragment.empty\n  for (let i = wrappers.length - 1; i >= 0; i--) {\n    if (content.size) {\n      let match = wrappers[i].type.contentMatch.matchFragment(content)\n      if (!match || !match.validEnd)\n        throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\")\n    }\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content))\n  }\n\n  let start = range.start, end = range.end\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n}\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to = from, type, attrs) {\n  if (!type.isTextblock) throw new RangeError(\"Type given to setBlockType should be a textblock\")\n  let mapFrom = this.steps.length\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this.doc, this.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this.clearIncompatible(this.mapping.slice(mapFrom).map(pos, 1), type)\n      let mapping = this.mapping.slice(mapFrom)\n      let startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1)\n      this.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true))\n      return false\n    }\n  })\n  return this\n}\n\nfunction canChangeType(doc, pos, type) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  let node = this.doc.nodeAt(pos)\n  if (!node) throw new RangeError(\"No node at given position\")\n  if (!type) type = node.type\n  let newNode = type.create(attrs, null, marks || node.marks)\n  if (node.isLeaf)\n    return this.replaceWith(pos, pos + node.nodeSize, newNode)\n\n  if (!type.validContent(node.content))\n    throw new RangeError(\"Invalid content for node type \" + type.name)\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n}\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nexport function canSplit(doc, pos, depth = 1, typesAfter) {\n  let $pos = doc.resolve(pos), base = $pos.depth - depth\n  let innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    return false\n  for (let d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    let node = $pos.node(d), index = $pos.index(d)\n    if (node.type.spec.isolating) return false\n    let rest = node.content.cutByIndex(index, node.childCount)\n    let after = (typesAfter && typesAfter[i]) || node\n    if (after != node) rest = rest.replaceChild(0, after.type.create(after.attrs))\n    if (!node.canReplace(index + 1, node.childCount) || !after.type.validContent(rest))\n      return false\n  }\n  let index = $pos.indexAfter(base)\n  let baseType = typesAfter && typesAfter[0]\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth = 1, typesAfter) {\n  let $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty\n  for (let d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before))\n    let typeAfter = typesAfter && typesAfter[i]\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after))\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n}\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nexport function canJoin(doc, pos) {\n  let $pos = doc.resolve(pos), index = $pos.index()\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nexport function joinPoint(doc, pos, dir = -1) {\n  let $pos = doc.resolve(pos)\n  for (let d = $pos.depth;; d--) {\n    let before, after, index = $pos.index(d)\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore\n      after = $pos.nodeAfter\n    } else if (dir > 0) {\n      before = $pos.node(d + 1)\n      index++\n      after = $pos.node(d).maybeChild(index)\n    } else {\n      before = $pos.node(d).maybeChild(index - 1)\n      after = $pos.node(d + 1)\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) return pos\n    if (d == 0) break\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d)\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth = 1) {\n  let step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true)\n  return this.step(step)\n}\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nexport function insertPoint(doc, pos, nodeType) {\n  let $pos = doc.resolve(pos)\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) return pos\n\n  if ($pos.parentOffset == 0)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.index(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.before(d + 1)\n      if (index > 0) return null\n    }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    for (let d = $pos.depth - 1; d >= 0; d--) {\n      let index = $pos.indexAfter(d)\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) return $pos.after(d + 1)\n      if (index < $pos.node(d).childCount) return null\n    }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nexport function dropPoint(doc, pos, slice) {\n  let $pos = doc.resolve(pos)\n  if (!slice.content.size) return pos\n  let content = slice.content\n  for (let i = 0; i < slice.openStart; i++) content = content.firstChild.content\n  for (let pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (let d = $pos.depth; d >= 0; d--) {\n      let bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1\n      let insertPos = $pos.index(d) + (bias > 0 ? 1 : 0)\n      let parent = $pos.node(d), fits = false\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content)\n      } else {\n        let wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type)\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0])\n      }\n      if (fits)\n        return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1)\n    }\n  }\n  return null\n}\n","import {Fragment, Slice} from \"prosemirror-model\"\nimport {Step, StepResult} from \"./step\"\n\nfunction mapFragment(fragment, f, parent) {\n  let mapped = []\n  for (let i = 0; i < fragment.childCount; i++) {\n    let child = fragment.child(i)\n    if (child.content.size) child = child.copy(mapFragment(child.content, f, child))\n    if (child.isInline) child = f(child, parent, i)\n    mapped.push(child)\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nexport class AddMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the marked range.\n    this.from = from\n    // :: number\n    // The end of the marked range.\n    this.to = to\n    // :: Mark\n    // The mark to add.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from)\n    let parent = $from.node($from.sharedDepth(this.to))\n    let slice = new Slice(mapFragment(oldSlice.content, (node, parent) => {\n      if (!node.isAtom || !parent.type.allowsMarkType(this.mark.type)) return node\n      return node.mark(this.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\")\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"addMark\", AddMarkStep)\n\n// ::- Remove a mark from all inline content between two positions.\nexport class RemoveMarkStep extends Step {\n  // :: (number, number, Mark)\n  constructor(from, to, mark) {\n    super()\n    // :: number\n    // The start of the unmarked range.\n    this.from = from\n    // :: number\n    // The end of the unmarked range.\n    this.to = to\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark\n  }\n\n  apply(doc) {\n    let oldSlice = doc.slice(this.from, this.to)\n    let slice = new Slice(mapFragment(oldSlice.content, node => {\n      return node.mark(this.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd)\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  }\n\n  invert() {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  }\n\n  map(mapping) {\n    let from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1)\n    if (from.deleted && to.deleted || from.pos >= to.pos) return null\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  }\n\n  merge(other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark)\n  }\n\n  toJSON() {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  }\n\n  static fromJSON(schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\")\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  }\n}\n\nStep.jsonID(\"removeMark\", RemoveMarkStep)\n","import {Fragment, Slice} from \"prosemirror-model\"\n\nimport {ReplaceStep, ReplaceAroundStep} from \"./replace_step\"\nimport {Transform} from \"./transform\"\nimport {insertPoint} from \"./structure\"\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nexport function replaceStep(doc, from, to = from, slice = Slice.empty) {\n  if (from == to && !slice.size) return null\n\n  let $from = doc.resolve(from), $to = doc.resolve(to)\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) return new ReplaceStep(from, to, slice)\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to = from, slice = Slice.empty) {\n  let step = replaceStep(this.doc, from, to, slice)\n  if (step) this.step(step)\n  return this\n}\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n}\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n}\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nclass Fitter {\n  constructor($from, $to, slice) {\n    this.$to = $to\n    this.$from = $from\n    this.unplaced = slice\n\n    this.frontier = []\n    for (let i = 0; i <= $from.depth; i++) {\n      let node = $from.node(i)\n      this.frontier.push({\n        type: node.type,\n        match: node.contentMatchAt($from.indexAfter(i))\n      })\n    }\n\n    this.placed = Fragment.empty\n    for (let i = $from.depth; i > 0; i--)\n      this.placed = Fragment.from($from.node(i).copy(this.placed))\n  }\n\n  get depth() { return this.frontier.length - 1 }\n\n  fit() {\n    // As long as there's unplaced content, try to place some of it.\n    // If that fails, either increase the open score of the unplaced\n    // slice, or drop nodes from it, and then try again.\n    while (this.unplaced.size) {\n      let fit = this.findFittable()\n      if (fit) this.placeNodes(fit)\n      else this.openMore() || this.dropNode()\n    }\n    // When there's inline content directly after the frontier _and_\n    // directly after `this.$to`, we must generate a `ReplaceAround`\n    // step that pulls that content into the node after the frontier.\n    // That means the fitting must be done to the end of the textblock\n    // node after `this.$to`, not `this.$to` itself.\n    let moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth\n    let $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline))\n    if (!$to) return null\n\n    // If closing to `$to` succeeded, create a step\n    let content = this.placed, openStart = $from.depth, openEnd = $to.depth\n    while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n      content = content.firstChild.content\n      openStart--; openEnd--\n    }\n    let slice = new Slice(content, openStart, openEnd)\n    if (moveInline > -1)\n      return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize)\n    if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n      return new ReplaceStep($from.pos, $to.pos, slice)\n  }\n\n  // Find a position on the start spine of `this.unplaced` that has\n  // content that can be moved somewhere on the frontier. Returns two\n  // depths, one for the slice and one for the frontier.\n  findFittable() {\n    // Only try wrapping nodes (pass 2) after finding a place without\n    // wrapping failed.\n    for (let pass = 1; pass <= 2; pass++) {\n      for (let sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n        let fragment, parent\n        if (sliceDepth) {\n          parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild\n          fragment = parent.content\n        } else {\n          fragment = this.unplaced.content\n        }\n        let first = fragment.firstChild\n        for (let frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n          let {type, match} = this.frontier[frontierDepth], wrap, inject\n          // In pass 1, if the next node matches, or there is no next\n          // node but the parents look compatible, we've found a\n          // place.\n          if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                            : type.compatibleContent(parent.type)))\n            return {sliceDepth, frontierDepth, parent, inject}\n          // In pass 2, look for a set of wrapping nodes that make\n          // `first` fit here.\n          else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n            return {sliceDepth, frontierDepth, parent, wrap}\n          // Don't continue looking further up if the parent node\n          // would fit here.\n          if (parent && match.matchType(parent.type)) break\n        }\n      }\n    }\n  }\n\n  openMore() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (!inner.childCount || inner.firstChild.isLeaf) return false\n    this.unplaced = new Slice(content, openStart + 1,\n                              Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0))\n    return true\n  }\n\n  dropNode() {\n    let {content, openStart, openEnd} = this.unplaced\n    let inner = contentAt(content, openStart)\n    if (inner.childCount <= 1 && openStart > 0) {\n      let openAtEnd = content.size - openStart <= openStart + inner.size\n      this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                                openAtEnd ? openStart - 1 : openEnd)\n    } else {\n      this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd)\n    }\n  }\n\n  // : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n  // Move content from the unplaced slice at `sliceDepth` to the\n  // frontier node at `frontierDepth`. Close that frontier node when\n  // applicable.\n  placeNodes({sliceDepth, frontierDepth, parent, inject, wrap}) {\n    while (this.depth > frontierDepth) this.closeFrontierNode()\n    if (wrap) for (let i = 0; i < wrap.length; i++) this.openFrontierNode(wrap[i])\n\n    let slice = this.unplaced, fragment = parent ? parent.content : slice.content\n    let openStart = slice.openStart - sliceDepth\n    let taken = 0, add = []\n    let {match, type} = this.frontier[frontierDepth]\n    if (inject) {\n      for (let i = 0; i < inject.childCount; i++) add.push(inject.child(i))\n      match = match.matchFragment(inject)\n    }\n    // Computes the amount of (end) open nodes at the end of the\n    // fragment. When 0, the parent is open, but no more. When\n    // negative, nothing is open.\n    let openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd)\n    // Scan over the fragment, fitting as many child nodes as\n    // possible.\n    while (taken < fragment.childCount) {\n      let next = fragment.child(taken), matches = match.matchType(next.type)\n      if (!matches) break\n      taken++\n      if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n        match = matches\n        add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                                taken == fragment.childCount ? openEndCount : -1))\n      }\n    }\n    let toEnd = taken == fragment.childCount\n    if (!toEnd) openEndCount = -1\n\n    this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add))\n    this.frontier[frontierDepth].match = match\n\n    // If the parent types match, and the entire node was moved, and\n    // it's not open, close this frontier node right away.\n    if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n      this.closeFrontierNode()\n\n    // Add new frontier nodes for any open nodes at the end.\n    for (let i = 0, cur = fragment; i < openEndCount; i++) {\n      let node = cur.lastChild\n      this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)})\n      cur = node.content\n    }\n\n    // Update `this.unplaced`. Drop the entire node from which we\n    // placed it we got to its end, otherwise just drop the placed\n    // nodes.\n    this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n      : sliceDepth == 0 ? Slice.empty\n      : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                  sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1)\n  }\n\n  mustMoveInline() {\n    if (!this.$to.parent.isTextblock) return -1\n    let top = this.frontier[this.depth], level\n    if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n        (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) return -1\n\n    let {depth} = this.$to, after = this.$to.after(depth)\n    while (depth > 1 && after == this.$to.end(--depth)) ++after\n    return after\n  }\n\n  findCloseLevel($to) {\n    scan: for (let i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n      let {match, type} = this.frontier[i]\n      let dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1))\n      let fit = contentAfterFits($to, i, type, match, dropInner)\n      if (!fit) continue\n      for (let d = i - 1; d >= 0; d--) {\n        let {match, type} = this.frontier[d]\n        let matches = contentAfterFits($to, d, type, match, true)\n        if (!matches || matches.childCount) continue scan\n      }\n      return {depth: i, fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n    }\n  }\n\n  close($to) {\n    let close = this.findCloseLevel($to)\n    if (!close) return null\n\n    while (this.depth > close.depth) this.closeFrontierNode()\n    if (close.fit.childCount) this.placed = addToFragment(this.placed, close.depth, close.fit)\n    $to = close.move\n    for (let d = close.depth + 1; d <= $to.depth; d++) {\n      let node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d))\n      this.openFrontierNode(node.type, node.attrs, add)\n    }\n    return $to\n  }\n\n  openFrontierNode(type, attrs, content) {\n    let top = this.frontier[this.depth]\n    top.match = top.match.matchType(type)\n    this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)))\n    this.frontier.push({type, match: type.contentMatch})\n  }\n\n  closeFrontierNode() {\n    let open = this.frontier.pop()\n    let add = open.match.fillBefore(Fragment.empty, true)\n    if (add.childCount) this.placed = addToFragment(this.placed, this.frontier.length, add)\n  }\n}\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) return fragment.cutByIndex(count)\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) return fragment.append(content)\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (let i = 0; i < depth; i++) fragment = fragment.firstChild.content\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) return node\n  let frag = node.content\n  if (openStart > 1)\n    frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0))\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag)\n    if (openEnd <= 0) frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true))\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  let node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth)\n  if (index == node.childCount && !type.compatibleContent(node.type)) return null\n  let fit = match.fillBefore(node.content, true, index)\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (let i = start; i < fragment.childCount; i++)\n    if (!type.allowsMarks(fragment.child(i).marks)) return true\n  return false\n}\n\nfunction definesContent(type) {\n  return type.spec.defining || type.spec.definingForContent\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining as context](#model.NodeSpec.definingAsContext), or\n// including an open parent node from the slice that _is_ marked as\n// [defining its content](#model.NodeSpec.definingForContent).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) return this.deleteRange(from, to)\n\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  if (fitsTrivially($from, $to, slice))\n    return this.step(new ReplaceStep(from, to, slice))\n\n  let targetDepths = coveredDepths($from, this.doc.resolve(to))\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) targetDepths.pop()\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  let preferredTarget = -($from.depth + 1)\n  targetDepths.unshift(preferredTarget)\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (let d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    let spec = $from.node(d).type.spec\n    if (spec.defining || spec.definingAsContext || spec.isolating) break\n    if (targetDepths.indexOf(d) > -1) preferredTarget = d\n    else if ($from.before(d) == pos) targetDepths.splice(1, 0, -d)\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  let preferredTargetIndex = targetDepths.indexOf(preferredTarget)\n\n  let leftNodes = [], preferredDepth = slice.openStart\n  for (let content = slice.content, i = 0;; i++) {\n    let node = content.firstChild\n    leftNodes.push(node)\n    if (i == slice.openStart) break\n    content = node.content\n  }\n\n  // Back up preferredDepth to cover defining textblocks directly\n  // above it, possibly skipping a non-defining textblock.\n  for (let d = preferredDepth - 1; d >= 0; d--) {\n    let type = leftNodes[d].type, def = definesContent(type)\n    if (def && $from.node(preferredTargetIndex).type != type) preferredDepth = d\n    else if (def || !type.isTextblock) break\n  }\n\n  for (let j = slice.openStart; j >= 0; j--) {\n    let openDepth = (j + preferredDepth + 1) % (slice.openStart + 1)\n    let insert = leftNodes[openDepth]\n    if (!insert) continue\n    for (let i = 0; i < targetDepths.length; i++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      let targetDepth = targetDepths[(i + preferredTargetIndex) % targetDepths.length], expand = true\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth }\n      let parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1)\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd))\n    }\n  }\n\n  let startSteps = this.steps.length\n  for (let i = targetDepths.length - 1; i >= 0; i--) {\n    this.replace(from, to, slice)\n    if (this.steps.length > startSteps) break\n    let depth = targetDepths[i]\n    if (depth < 0) continue\n    from = $from.before(depth); to = $to.after(depth)\n  }\n  return this\n}\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    let first = fragment.firstChild\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)))\n  }\n  if (depth > newOpen) {\n    let match = parent.contentMatchAt(0)\n    let start = match.fillBefore(fragment).append(fragment)\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true))\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    let point = insertPoint(this.doc, from, node.type)\n    if (point != null) from = to = point\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n}\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  let $from = this.doc.resolve(from), $to = this.doc.resolve(to)\n  let covered = coveredDepths($from, $to)\n  for (let i = 0; i < covered.length; i++) {\n    let depth = covered[i], last = i == covered.length - 1\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      return this.delete($from.start(depth), $to.end(depth))\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      return this.delete($from.before(depth), $to.after(depth))\n  }\n  for (let d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      return this.delete($from.before(d), to)\n  }\n  return this.delete(from, to)\n}\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  let result = [], minDepth = Math.min($from.depth, $to.depth)\n  for (let d = minDepth; d >= 0; d--) {\n    let start = $from.start(d)\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) break\n    if (start == $to.start(d) ||\n        (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n         d && $to.start(d - 1) == start - 1))\n      result.push(d)\n  }\n  return result\n}\n","import {MarkType, Slice, Fragment} from \"prosemirror-model\"\n\nimport {Transform} from \"./transform\"\nimport {AddMarkStep, RemoveMarkStep} from \"./mark_step\"\nimport {ReplaceStep} from \"./replace_step\"\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  let removed = [], added = [], removing = null, adding = null\n  this.doc.nodesBetween(from, to, (node, pos, parent) => {\n    if (!node.isInline) return\n    let marks = node.marks\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      let start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to)\n      let newSet = mark.addToSet(marks)\n\n      for (let i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            removing.to = end\n          else\n            removed.push(removing = new RemoveMarkStep(start, end, marks[i]))\n        }\n      }\n\n      if (adding && adding.to == start)\n        adding.to = end\n      else\n        added.push(adding = new AddMarkStep(start, end, mark))\n    }\n  })\n\n  removed.forEach(s => this.step(s))\n  added.forEach(s => this.step(s))\n  return this\n}\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark = null) {\n  let matched = [], step = 0\n  this.doc.nodesBetween(from, to, (node, pos) => {\n    if (!node.isInline) return\n    step++\n    let toRemove = null\n    if (mark instanceof MarkType) {\n      let set = node.marks, found\n      while (found = mark.isInSet(set)) {\n        ;(toRemove || (toRemove = [])).push(found)\n        set = found.removeFromSet(set)\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) toRemove = [mark]\n    } else {\n      toRemove = node.marks\n    }\n    if (toRemove && toRemove.length) {\n      let end = Math.min(pos + node.nodeSize, to)\n      for (let i = 0; i < toRemove.length; i++) {\n        let style = toRemove[i], found\n        for (let j = 0; j < matched.length; j++) {\n          let m = matched[j]\n          if (m.step == step - 1 && style.eq(matched[j].style)) found = m\n        }\n        if (found) {\n          found.to = end\n          found.step = step\n        } else {\n          matched.push({style, from: Math.max(pos, from), to: end, step})\n        }\n      }\n    }\n  })\n  matched.forEach(m => this.step(new RemoveMarkStep(m.from, m.to, m.style)))\n  return this\n}\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match = parentType.contentMatch) {\n  let node = this.doc.nodeAt(pos)\n  let delSteps = [], cur = pos + 1\n  for (let i = 0; i < node.childCount; i++) {\n    let child = node.child(i), end = cur + child.nodeSize\n    let allowed = match.matchType(child.type, child.attrs)\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty))\n    } else {\n      match = allowed\n      for (let j = 0; j < child.marks.length; j++) if (!parentType.allowsMarkType(child.marks[j].type))\n        this.step(new RemoveMarkStep(cur, end, child.marks[j]))\n    }\n    cur = end\n  }\n  if (!match.validEnd) {\n    let fill = match.fillBefore(Fragment.empty, true)\n    this.replace(cur, cur, new Slice(fill, 0, 0))\n  }\n  for (let i = delSteps.length - 1; i >= 0; i--) this.step(delSteps[i])\n  return this\n}\n","const result = {}\nexport default result\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  const ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent)\n  const ie_upto10 = /MSIE \\d/.test(navigator.userAgent)\n  const ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n  let ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge)\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent)\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n  let chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\n  result.chrome = !!chrome\n  result.chrome_version = chrome && +chrome[1]\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor)\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2)\n  result.mac = result.ios || /Mac/.test(navigator.platform)\n  result.android = /Android \\d/.test(navigator.userAgent)\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1]\n}\n","import browser from \"./browser\"\n\nexport const domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling\n    if (!node) return index\n  }\n}\n\nexport const parentNode = function(node) {\n  let parent = node.assignedSlot || node.parentNode\n  return parent && parent.nodeType == 11 ? parent.host : parent\n}\n\nlet reusedRange = null\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nexport const textRange = function(node, from, to) {\n  let range = reusedRange || (reusedRange = document.createRange())\n  range.setEnd(node, to == null ? node.nodeValue.length : to)\n  range.setStart(node, from || 0)\n  return range\n}\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nexport const isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n}\n\nconst atomElements = /^(img|br|input|textarea|hr)$/i\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      let parent = node.parentNode\n      if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n          node.contentEditable == \"false\")\n        return false\n      off = domIndex(node) + (dir < 0 ? 0 : 1)\n      node = parent\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)]\n      if (node.contentEditable == \"false\") return false\n      off = dir < 0 ? nodeSize(node) : 0\n    } else {\n      return false\n    }\n  }\n}\n\nexport function nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nexport function isOnEdge(node, offset, parent) {\n  for (let atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) return true\n    let index = domIndex(node)\n    node = node.parentNode\n    if (!node) return false\n    atStart = atStart && index == 0\n    atEnd = atEnd && index == nodeSize(node)\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  let desc\n  for (let cur = dom; cur; cur = cur.parentNode) if (desc = cur.pmViewDesc) break\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nexport const selectionCollapsed = function(domSel) {\n  let collapsed = domSel.isCollapsed\n  if (collapsed && browser.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    collapsed = false\n  return collapsed\n}\n\nexport function keyEvent(keyCode, key) {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"keydown\", true, true)\n  event.keyCode = keyCode\n  event.key = event.code = key\n  return event\n}\n","import {nodeSize, textRange, parentNode} from \"./dom\"\nimport browser from \"./browser\"\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  let rect = node.getBoundingClientRect()\n  // Adjust for elements with style \"transform: scale()\"\n  let scaleX = (rect.width / node.offsetWidth) || 1\n  let scaleY = (rect.height / node.offsetHeight) || 1\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nexport function scrollRectIntoView(view, rect, startDOM) {\n  let scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5\n  let doc = view.dom.ownerDocument\n  for (let parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) break\n    if (parent.nodeType != 1) continue\n    let atTop = parent == doc.body || parent.nodeType != 1\n    let bounding = atTop ? windowRect(doc) : clientRect(parent)\n    let moveX = 0, moveY = 0\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\"))\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\")\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\"))\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\")\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY)\n      } else {\n        let startX = parent.scrollLeft, startY = parent.scrollTop\n        if (moveY) parent.scrollTop += moveY\n        if (moveX) parent.scrollLeft += moveX\n        let dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY}\n      }\n    }\n    if (atTop) break\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nexport function storeScrollPos(view) {\n  let rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top)\n  let refDOM, refTop\n  for (let x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    let dom = view.root.elementFromPoint(x, y)\n    if (dom == view.dom || !view.dom.contains(dom)) continue\n    let localRect = dom.getBoundingClientRect()\n    if (localRect.top >= startY - 20) {\n      refDOM = dom\n      refTop = localRect.top\n      break\n    }\n  }\n  return {refDOM, refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  let stack = [], doc = dom.ownerDocument\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom, top: dom.scrollTop, left: dom.scrollLeft})\n    if (dom == doc) break\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nexport function resetScrollPos({refDOM, refTop, stack}) {\n  let newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop)\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (let i = 0; i < stack.length; i++) {\n    let {dom, top, left} = stack[i]\n    if (dom.scrollTop != top + dTop) dom.scrollTop = top + dTop\n    if (dom.scrollLeft != left) dom.scrollLeft = left\n  }\n}\n\nlet preventScrollSupported = null\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nexport function focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive() // in IE\n  if (preventScrollSupported) return dom.focus(preventScrollSupported)\n\n  let stored = scrollStack(dom)\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true}\n      return true\n    }\n  } : undefined)\n  if (!preventScrollSupported) {\n    preventScrollSupported = false\n    restoreScrollStack(stored, 0)\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  let closest, dxClosest = 2e8, coordsClosest, offset = 0\n  let rowBot = coords.top, rowTop = coords.top\n  for (let child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    let rects\n    if (child.nodeType == 1) rects = child.getClientRects()\n    else if (child.nodeType == 3) rects = textRange(child).getClientRects()\n    else continue\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i]\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot)\n        rowTop = Math.min(rect.top, rowTop)\n        let dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0\n        if (dx < dxClosest) {\n          closest = child\n          dxClosest = dx\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords\n          if (child.nodeType == 1 && dx)\n            offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        offset = childIndex + 1\n    }\n  }\n  if (closest && closest.nodeType == 3) return findOffsetInText(closest, coordsClosest)\n  if (!closest || (dxClosest && closest.nodeType == 1)) return {node, offset}\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  let len = node.nodeValue.length\n  let range = document.createRange()\n  for (let i = 0; i < len; i++) {\n    range.setEnd(node, i + 1)\n    range.setStart(node, i)\n    let rect = singleRect(range, 1)\n    if (rect.top == rect.bottom) continue\n    if (inRect(coords, rect))\n      return {node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)}\n  }\n  return {node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  let parent = dom.parentNode\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    return parent\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  let {node, offset} = findOffsetInNode(elt, coords), bias = -1\n  if (node.nodeType == 1 && !node.firstChild) {\n    let rect = node.getBoundingClientRect()\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  let outside = -1\n  for (let cur = node;;) {\n    if (cur == view.dom) break\n    let desc = view.docView.nearestDesc(cur, true)\n    if (!desc) return null\n    if (desc.node.isBlock && desc.parent) {\n      let rect = desc.dom.getBoundingClientRect()\n      if (rect.left > coords.left || rect.top > coords.top) outside = desc.posBefore\n      else if (rect.right < coords.left || rect.bottom < coords.top) outside = desc.posAfter\n      else break\n    }\n    cur = desc.dom.parentNode\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  let len = element.childNodes.length\n  if (len && box.top < box.bottom) {\n    for (let startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      let child = element.childNodes[i]\n      if (child.nodeType == 1) {\n        let rects = child.getClientRects()\n        for (let j = 0; j < rects.length; j++) {\n          let rect = rects[j]\n          if (inRect(coords, rect)) return elementFromPoint(child, coords, rect)\n        }\n      }\n      if ((i = (i + 1) % len) == startI) break\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nexport function posAtCoords(view, coords) {\n  let doc = view.dom.ownerDocument, node, offset\n  if (doc.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      let pos = doc.caretPositionFromPoint(coords.left, coords.top)\n      if (pos) ({offsetNode: node, offset} = pos)\n    } catch (_) {}\n  }\n  if (!node && doc.caretRangeFromPoint) {\n    let range = doc.caretRangeFromPoint(coords.left, coords.top)\n    if (range) ({startContainer: node, startOffset: offset} = range)\n  }\n\n  let elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top + 1), pos\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    let box = view.dom.getBoundingClientRect()\n    if (!inRect(coords, box)) return null\n    elt = elementFromPoint(view.dom, coords, box)\n    if (!elt) return null\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (browser.safari) {\n    for (let p = elt; node && p; p = parentNode(p))\n      if (p.draggable) node = offset = null\n  }\n  elt = targetKludge(elt, coords)\n  if (node) {\n    if (browser.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length)\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        let next = node.childNodes[offset], box\n        if (next.nodeName == \"IMG\" && (box = next.getBoundingClientRect()).right <= coords.left &&\n            box.bottom > coords.top)\n          offset++\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      pos = view.state.doc.content.size\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      pos = posFromCaret(view, node, offset, coords)\n  }\n  if (pos == null) pos = posFromElement(view, elt, coords)\n\n  let desc = view.docView.nearestDesc(elt, true)\n  return {pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  let rects = object.getClientRects()\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nconst BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nexport function coordsAtPos(view, pos, side) {\n  let {node, offset} = view.docView.domFromPos(pos, side < 0 ? -1 : 1)\n\n  let supportEmptyRange = browser.webkit || browser.gecko\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      let rect = singleRect(textRange(node, offset, offset), side)\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (browser.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        let rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1)\n        if (rectBefore.top == rect.top) {\n          let rectAfter = singleRect(textRange(node, offset, offset + 1), -1)\n          if (rectAfter.top != rect.top)\n            return flattenV(rectAfter, rectAfter.left < rectBefore.left)\n        }\n      }\n      return rect\n    } else {\n      let from = offset, to = offset, takeSide = side < 0 ? 1 : -1\n      if (side < 0 && !offset) { to++; takeSide = -1 }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1 }\n      else if (side < 0) { from-- }\n      else { to ++ }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      let before = node.childNodes[offset - 1]\n      if (before.nodeType == 1) return flattenH(before.getBoundingClientRect(), false)\n    }\n    if (offset < nodeSize(node)) {\n      let after = node.childNodes[offset]\n      if (after.nodeType == 1) return flattenH(after.getBoundingClientRect(), true)\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    let before = node.childNodes[offset - 1]\n    let target = before.nodeType == 3 ? textRange(before, nodeSize(before) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before.nodeType == 1 && (before.nodeName != \"BR\" || !before.nextSibling) ? before : null\n    if (target) return flattenV(singleRect(target, 1), false)\n  }\n  if (offset < nodeSize(node)) {\n    let after = node.childNodes[offset]\n    while (after.pmViewDesc && after.pmViewDesc.ignoreForCoords) after = after.nextSibling\n    let target = !after ? null : after.nodeType == 3 ? textRange(after, 0, (supportEmptyRange ? 0 : 1))\n        : after.nodeType == 1 ? after : null\n    if (target) return flattenV(singleRect(target, -1), true)\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) return rect\n  let x = left ? rect.left : rect.right\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) return rect\n  let y = top ? rect.top : rect.bottom\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  let viewState = view.state, active = view.root.activeElement\n  if (viewState != state) view.updateState(state)\n  if (active != view.dom) view.focus()\n  try {\n    return f()\n  } finally {\n    if (viewState != state) view.updateState(viewState)\n    if (active != view.dom && active) active.focus()\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  let sel = state.selection\n  let $pos = dir == \"up\" ? sel.$from : sel.$to\n  return withFlushedState(view, state, () => {\n    let {node: dom} = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1)\n    for (;;) {\n      let nearest = view.docView.nearestDesc(dom, true)\n      if (!nearest) break\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode\n    }\n    let coords = coordsAtPos(view, $pos.pos, 1)\n    for (let child = dom.firstChild; child; child = child.nextSibling) {\n      let boxes\n      if (child.nodeType == 1) boxes = child.getClientRects()\n      else if (child.nodeType == 3) boxes = textRange(child, 0, child.nodeValue.length).getClientRects()\n      else continue\n      for (let i = 0; i < boxes.length; i++) {\n        let box = boxes[i]\n        if (box.bottom > box.top + 1 &&\n            (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n             : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n          return false\n      }\n    }\n    return true\n  })\n}\n\nconst maybeRTL = /[\\u0590-\\u08ac]/\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  let {$head} = state.selection\n  if (!$head.parent.isTextblock) return false\n  let offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size\n  let sel = view.root.getSelection()\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    return dir == \"left\" || dir == \"backward\" ? atStart : atEnd\n\n  return withFlushedState(view, state, () => {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    let oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset\n    let oldBidiLevel = sel.caretBidiLevel // Only for Firefox\n    sel.modify(\"move\", dir, \"character\")\n    let parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom\n    let result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset)\n    // Restore the previous selection\n    sel.removeAllRanges()\n    sel.addRange(oldRange)\n    if (oldBidiLevel != null) sel.caretBidiLevel = oldBidiLevel\n    return result\n  })\n}\n\nlet cachedState = null, cachedDir = null, cachedResult = false\nexport function endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) return cachedResult\n  cachedState = state; cachedDir = dir\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n","import {DOMSerializer, Fragment, Mark} from \"prosemirror-model\"\nimport {TextSelection} from \"prosemirror-state\"\n\nimport {domIndex, isEquivalentPosition, nodeSize} from \"./dom\"\nimport browser from \"./browser\"\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nconst NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nclass ViewDesc {\n  // : (?ViewDesc, [ViewDesc], dom.Node, ?dom.Node)\n  constructor(parent, children, dom, contentDOM) {\n    this.parent = parent\n    this.children = children\n    this.dom = dom\n    // An expando property on the DOM node provides a link back to its\n    // description.\n    dom.pmViewDesc = this\n    // This is the node that holds the child views. It may be null for\n    // descs that don't have children.\n    this.contentDOM = contentDOM\n    this.dirty = NOT_DIRTY\n  }\n\n  // Used to check whether a given description corresponds to a\n  // widget/mark/node.\n  matchesWidget() { return false }\n  matchesMark() { return false }\n  matchesNode() { return false }\n  matchesHack(_nodeName) { return false }\n\n  // : () → ?ParseRule\n  // When parsing in-editor content (in domchange.js), we allow\n  // descriptions to determine the parse rules that should be used to\n  // parse them.\n  parseRule() { return null }\n\n  // : (dom.Event) → bool\n  // Used by the editor's event handler to ignore events that come\n  // from certain descs.\n  stopEvent() { return false }\n\n  // The size of the content represented by this desc.\n  get size() {\n    let size = 0\n    for (let i = 0; i < this.children.length; i++) size += this.children[i].size\n    return size\n  }\n\n  // For block nodes, this represents the space taken up by their\n  // start/end tokens.\n  get border() { return 0 }\n\n  destroy() {\n    this.parent = null\n    if (this.dom.pmViewDesc == this) this.dom.pmViewDesc = null\n    for (let i = 0; i < this.children.length; i++)\n      this.children[i].destroy()\n  }\n\n  posBeforeChild(child) {\n    for (let i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n      let cur = this.children[i]\n      if (cur == child) return pos\n      pos += cur.size\n    }\n  }\n\n  get posBefore() {\n    return this.parent.posBeforeChild(this)\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n  }\n\n  get posAfter() {\n    return this.posBefore + this.size\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.size - 2 * this.border\n  }\n\n  // : (dom.Node, number, ?number) → number\n  localPosFromDOM(dom, offset, bias) {\n    // If the DOM position is in the content, use the child desc after\n    // it to figure out a position.\n    if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n      if (bias < 0) {\n        let domBefore, desc\n        if (dom == this.contentDOM) {\n          domBefore = dom.childNodes[offset - 1]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domBefore = dom.previousSibling\n        }\n        while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) domBefore = domBefore.previousSibling\n        return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n      } else {\n        let domAfter, desc\n        if (dom == this.contentDOM) {\n          domAfter = dom.childNodes[offset]\n        } else {\n          while (dom.parentNode != this.contentDOM) dom = dom.parentNode\n          domAfter = dom.nextSibling\n        }\n        while (domAfter && !((desc = domAfter.pmViewDesc) && desc.parent == this)) domAfter = domAfter.nextSibling\n        return domAfter ? this.posBeforeChild(desc) : this.posAtEnd\n      }\n    }\n    // Otherwise, use various heuristics, falling back on the bias\n    // parameter, to determine whether to return the position at the\n    // start or at the end of this view desc.\n    let atEnd\n    if (dom == this.dom && this.contentDOM) {\n      atEnd = offset > domIndex(this.contentDOM)\n    } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n      atEnd = dom.compareDocumentPosition(this.contentDOM) & 2\n    } else if (this.dom.firstChild) {\n      if (offset == 0) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = false; break }\n        if (search.parentNode.firstChild != search) break\n      }\n      if (atEnd == null && offset == dom.childNodes.length) for (let search = dom;; search = search.parentNode) {\n        if (search == this.dom) { atEnd = true; break }\n        if (search.parentNode.lastChild != search) break\n      }\n    }\n    return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n  }\n\n  // Scan up the dom finding the first desc that is a descendant of\n  // this one.\n  nearestDesc(dom, onlyNodes) {\n    for (let first = true, cur = dom; cur; cur = cur.parentNode) {\n      let desc = this.getDesc(cur)\n      if (desc && (!onlyNodes || desc.node)) {\n        // If dom is outside of this desc's nodeDOM, don't count it.\n        if (first && desc.nodeDOM &&\n            !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n          first = false\n        else\n          return desc\n      }\n    }\n  }\n\n  getDesc(dom) {\n    let desc = dom.pmViewDesc\n    for (let cur = desc; cur; cur = cur.parent) if (cur == this) return desc\n  }\n\n  posFromDOM(dom, offset, bias) {\n    for (let scan = dom; scan; scan = scan.parentNode) {\n      let desc = this.getDesc(scan)\n      if (desc) return desc.localPosFromDOM(dom, offset, bias)\n    }\n    return -1\n  }\n\n  // : (number) → ?NodeViewDesc\n  // Find the desc for the node after the given pos, if any. (When a\n  // parent node overrode rendering, there might not be one.)\n  descAt(pos) {\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == pos && end != offset) {\n        while (!child.border && child.children.length) child = child.children[0]\n        return child\n      }\n      if (pos < end) return child.descAt(pos - offset - child.border)\n      offset = end\n    }\n  }\n\n  // : (number, number) → {node: dom.Node, offset: number}\n  domFromPos(pos, side) {\n    if (!this.contentDOM) return {node: this.dom, offset: 0}\n    // First find the position in the child array\n    let i = 0, offset = 0\n    for (let curPos = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = curPos + child.size\n      if (end > pos || child instanceof TrailingHackViewDesc) { offset = pos - curPos; break }\n      curPos = end\n    }\n    // If this points into the middle of a child, call through\n    if (offset) return this.children[i].domFromPos(offset - this.children[i].border, side)\n    // Go back if there were any zero-length widgets with side >= 0 before this point\n    for (let prev; i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.widget.type.side >= 0; i--) {}\n    // Scan towards the first useable node\n    if (side <= 0) {\n      let prev, enter = true\n      for (;; i--, enter = false) {\n        prev = i ? this.children[i - 1] : null\n        if (!prev || prev.dom.parentNode == this.contentDOM) break\n      }\n      if (prev && side && enter && !prev.border && !prev.domAtom) return prev.domFromPos(prev.size, side)\n      return {node: this.contentDOM, offset: prev ? domIndex(prev.dom) + 1 : 0}\n    } else {\n      let next, enter = true\n      for (;; i++, enter = false) {\n        next = i < this.children.length ? this.children[i] : null\n        if (!next || next.dom.parentNode == this.contentDOM) break\n      }\n      if (next && enter && !next.border && !next.domAtom) return next.domFromPos(0, side)\n      return {node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length}\n    }\n  }\n\n  // Used to find a DOM range in a single parent for a given changed\n  // range.\n  parseRange(from, to, base = 0) {\n    if (this.children.length == 0)\n      return {node: this.contentDOM, from, to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length}\n\n    let fromOffset = -1, toOffset = -1\n    for (let offset = base, i = 0;; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (fromOffset == -1 && from <= end) {\n        let childBase = offset + child.border\n        // FIXME maybe descend mark views to parse a narrower range?\n        if (from >= childBase && to <= end - child.border && child.node &&\n            child.contentDOM && this.contentDOM.contains(child.contentDOM))\n          return child.parseRange(from, to, childBase)\n\n        from = offset\n        for (let j = i; j > 0; j--) {\n          let prev = this.children[j - 1]\n          if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n            fromOffset = domIndex(prev.dom) + 1\n            break\n          }\n          from -= prev.size\n        }\n        if (fromOffset == -1) fromOffset = 0\n      }\n      if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n        to = end\n        for (let j = i + 1; j < this.children.length; j++) {\n          let next = this.children[j]\n          if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n            toOffset = domIndex(next.dom)\n            break\n          }\n          to += next.size\n        }\n        if (toOffset == -1) toOffset = this.contentDOM.childNodes.length\n        break\n      }\n      offset = end\n    }\n    return {node: this.contentDOM, from, to, fromOffset, toOffset}\n  }\n\n  emptyChildAt(side) {\n    if (this.border || !this.contentDOM || !this.children.length) return false\n    let child = this.children[side < 0 ? 0 : this.children.length - 1]\n    return child.size == 0 || child.emptyChildAt(side)\n  }\n\n  // : (number) → dom.Node\n  domAfterPos(pos) {\n    let {node, offset} = this.domFromPos(pos, 0)\n    if (node.nodeType != 1 || offset == node.childNodes.length)\n      throw new RangeError(\"No node after pos \" + pos)\n    return node.childNodes[offset]\n  }\n\n  // : (number, number, dom.Document)\n  // View descs are responsible for setting any selection that falls\n  // entirely inside of them, so that custom implementations can do\n  // custom things with the selection. Note that this falls apart when\n  // a selection starts in such a node and ends in another, in which\n  // case we just use whatever domFromPos produces as a best effort.\n  setSelection(anchor, head, root, force) {\n    // If the selection falls entirely in a child, give it to that child\n    let from = Math.min(anchor, head), to = Math.max(anchor, head)\n    for (let i = 0, offset = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (from > offset && to < end)\n        return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force)\n      offset = end\n    }\n\n    let anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1)\n    let headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1)\n    let domSel = root.getSelection()\n\n    let brKludge = false\n    // On Firefox, using Selection.collapse to put the cursor after a\n    // BR node for some reason doesn't always work (#1073). On Safari,\n    // the cursor sometimes inexplicable visually lags behind its\n    // reported position in such situations (#1092).\n    if ((browser.gecko || browser.safari) && anchor == head) {\n      let {node, offset} = anchorDOM\n      if (node.nodeType == 3) {\n        brKludge = offset && node.nodeValue[offset - 1] == \"\\n\"\n        // Issue #1128\n        if (brKludge && offset == node.nodeValue.length) {\n          for (let scan = node, after; scan; scan = scan.parentNode) {\n            if (after = scan.nextSibling) {\n              if (after.nodeName == \"BR\")\n                anchorDOM = headDOM = {node: after.parentNode, offset: domIndex(after) + 1}\n              break\n            }\n            let desc = scan.pmViewDesc\n            if (desc && desc.node && desc.node.isBlock) break\n          }\n        }\n      } else {\n        let prev = node.childNodes[offset - 1]\n        brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\")\n      }\n    }\n    // Firefox can act strangely when the selection is in front of an\n    // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n    if (browser.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n      let after = domSel.focusNode.childNodes[domSel.focusOffset]\n      if (after && after.contentEditable == \"false\") force = true\n    }\n\n    if (!(force || brKludge && browser.safari) &&\n        isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n        isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n      return\n\n    // Selection.extend can be used to create an 'inverted' selection\n    // (one where the focus is before the anchor), but not all\n    // browsers support it yet.\n    let domSelExtended = false\n    if ((domSel.extend || anchor == head) && !brKludge) {\n      domSel.collapse(anchorDOM.node, anchorDOM.offset)\n      try {\n        if (anchor != head) domSel.extend(headDOM.node, headDOM.offset)\n        domSelExtended = true\n      } catch (err) {\n        // In some cases with Chrome the selection is empty after calling\n        // collapse, even when it should be valid. This appears to be a bug, but\n        // it is difficult to isolate. If this happens fallback to the old path\n        // without using extend.\n        if (!(err instanceof DOMException)) throw err\n        // declare global: DOMException\n      }\n    }\n    if (!domSelExtended) {\n      if (anchor > head) { let tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp }\n      let range = document.createRange()\n      range.setEnd(headDOM.node, headDOM.offset)\n      range.setStart(anchorDOM.node, anchorDOM.offset)\n      domSel.removeAllRanges()\n      domSel.addRange(range)\n    }\n  }\n\n  // : (dom.MutationRecord) → bool\n  ignoreMutation(mutation) {\n    return !this.contentDOM && mutation.type != \"selection\"\n  }\n\n  get contentLost() {\n    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n  }\n\n  // Remove a subtree of the element tree that has been touched\n  // by a DOM change, so that the next update will redraw it.\n  markDirty(from, to) {\n    for (let offset = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i], end = offset + child.size\n      if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n        let startInside = offset + child.border, endInside = end - child.border\n        if (from >= startInside && to <= endInside) {\n          this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY\n          if (from == startInside && to == endInside &&\n              (child.contentLost || child.dom.parentNode != this.contentDOM)) child.dirty = NODE_DIRTY\n          else child.markDirty(from - startInside, to - startInside)\n          return\n        } else {\n          child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n            ? CONTENT_DIRTY : NODE_DIRTY\n        }\n      }\n      offset = end\n    }\n    this.dirty = CONTENT_DIRTY\n  }\n\n  markParentsDirty() {\n    let level = 1\n    for (let node = this.parent; node; node = node.parent, level++) {\n      let dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY\n      if (node.dirty < dirty) node.dirty = dirty\n    }\n  }\n\n  get domAtom() { return false }\n\n  get ignoreForCoords() { return false }\n}\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nconst nothing = []\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nclass WidgetViewDesc extends ViewDesc {\n  // : (ViewDesc, Decoration)\n  constructor(parent, widget, view, pos) {\n    let self, dom = widget.type.toDOM\n    if (typeof dom == \"function\") dom = dom(view, () => {\n      if (!self) return pos\n      if (self.parent) return self.parent.posBeforeChild(self)\n    })\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        let wrap = document.createElement(\"span\")\n        wrap.appendChild(dom)\n        dom = wrap\n      }\n      dom.contentEditable = false\n      dom.classList.add(\"ProseMirror-widget\")\n    }\n    super(parent, nothing, dom, null)\n    this.widget = widget\n    self = this\n  }\n\n  matchesWidget(widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  }\n\n  parseRule() { return {ignore: true} }\n\n  stopEvent(event) {\n    let stop = this.widget.spec.stopEvent\n    return stop ? stop(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  }\n\n  destroy() {\n    this.widget.type.destroy(this.dom)\n    super.destroy()\n  }\n\n  get domAtom() { return true }\n}\n\nclass CompositionViewDesc extends ViewDesc {\n  constructor(parent, dom, textDOM, text) {\n    super(parent, nothing, dom, null)\n    this.textDOM = textDOM\n    this.text = text\n  }\n\n  get size() { return this.text.length }\n\n  localPosFromDOM(dom, offset) {\n    if (dom != this.textDOM) return this.posAtStart + (offset ? this.size : 0)\n    return this.posAtStart + offset\n  }\n\n  domFromPos(pos) {\n    return {node: this.textDOM, offset: pos}\n  }\n\n  ignoreMutation(mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   }\n}\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nclass MarkViewDesc extends ViewDesc {\n  // : (ViewDesc, Mark, dom.Node)\n  constructor(parent, mark, dom, contentDOM) {\n    super(parent, [], dom, contentDOM)\n    this.mark = mark\n  }\n\n  static create(parent, mark, inline, view) {\n    let custom = view.nodeViews[mark.type.name]\n    let spec = custom && custom(mark, view, inline)\n    if (!spec || !spec.dom)\n      spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline))\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  }\n\n  parseRule() {\n    if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView) return null\n    return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM}\n  }\n\n  matchesMark(mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      let parent = this.parent\n      while (!parent.node) parent = parent.parent\n      if (parent.dirty < this.dirty) parent.dirty = this.dirty\n      this.dirty = NOT_DIRTY\n    }\n  }\n\n  slice(from, to, view) {\n    let copy = MarkViewDesc.create(this.parent, this.mark, true, view)\n    let nodes = this.children, size = this.size\n    if (to < size) nodes = replaceNodes(nodes, to, size, view)\n    if (from > 0) nodes = replaceNodes(nodes, 0, from, view)\n    for (let i = 0; i < nodes.length; i++) nodes[i].parent = copy\n    copy.children = nodes\n    return copy\n  }\n}\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nclass NodeViewDesc extends ViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    super(parent, node.isLeaf ? nothing : [], dom, contentDOM)\n    this.nodeDOM = nodeDOM\n    this.node = node\n    this.outerDeco = outerDeco\n    this.innerDeco = innerDeco\n    if (contentDOM) this.updateChildren(view, pos)\n  }\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  static create(parent, node, outerDeco, innerDeco, view, pos) {\n    let custom = view.nodeViews[node.type.name], descObj\n    let spec = custom && custom(node, view, () => {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) return pos\n      if (descObj.parent) return descObj.parent.posBeforeChild(descObj)\n    }, outerDeco, innerDeco)\n\n    let dom = spec && spec.dom, contentDOM = spec && spec.contentDOM\n    if (node.isText) {\n      if (!dom) dom = document.createTextNode(node.text)\n      else if (dom.nodeType != 3) throw new RangeError(\"Text must be rendered as a DOM text node\")\n    } else if (!dom) {\n      ;({dom, contentDOM} = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)))\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) dom.contentEditable = false\n      if (node.type.spec.draggable) dom.draggable = true\n    }\n\n    let nodeDOM = dom\n    dom = applyOuterDeco(dom, outerDeco, node)\n\n    if (spec)\n      return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1)\n    else if (node.isText)\n      return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view)\n    else\n      return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1)\n  }\n\n  parseRule() {\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) return null\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    let rule = {node: this.node.type.name, attrs: this.node.attrs}\n    if (this.node.type.whitespace == \"pre\") rule.preserveWhitespace = \"full\"\n    if (!this.contentDOM) {\n      rule.getContent = () => this.node.content\n    } else if (!this.contentLost) {\n      rule.contentElement = this.contentDOM\n    } else {\n      // Chrome likes to randomly recreate parent nodes when\n      // backspacing things. When that happens, this tries to find the\n      // new parent.\n      for (let i = this.children.length - 1; i >= 0; i--) {\n        let child = this.children[i]\n        if (this.dom.contains(child.dom.parentNode)) {\n          rule.contentElement = child.dom.parentNode\n          break\n        }\n      }\n      if (!rule.contentElement) rule.getContent = () => Fragment.empty\n    }\n    return rule\n  }\n\n  matchesNode(node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  }\n\n  get size() { return this.node.nodeSize }\n\n  get border() { return this.node.isLeaf ? 0 : 1 }\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  updateChildren(view, pos) {\n    let inline = this.node.inlineContent, off = pos\n    let composition = view.composing && this.localCompositionInfo(view, pos)\n    let localComposition = composition && composition.pos > -1 ? composition : null\n    let compositionInChild = composition && composition.pos < 0\n    let updater = new ViewTreeUpdater(this, localComposition && localComposition.node)\n    iterDeco(this.node, this.innerDeco, (widget, i, insideNode) => {\n      if (widget.spec.marks)\n        updater.syncToMarks(widget.spec.marks, inline, view)\n      else if (widget.type.side >= 0 && !insideNode)\n        updater.syncToMarks(i == this.node.childCount ? Mark.none : this.node.child(i).marks, inline, view)\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off)\n    }, (child, outerDeco, innerDeco, i) => {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view)\n      // Try several strategies for drawing this node\n      let compIndex\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) {\n        // Found precise match with existing node view\n      } else if (compositionInChild && view.state.selection.from > off &&\n                 view.state.selection.to < off + child.nodeSize &&\n                 (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                 updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) {\n        // Updated the specific node that holds the composition\n      } else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) {\n        // Could update an existing node to reflect this node\n      } else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off)\n      }\n      off += child.nodeSize\n    })\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view)\n    if (this.node.isTextblock) updater.addTextblockHacks()\n    updater.destroyRest()\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) this.protectLocalComposition(view, localComposition)\n      renderDescs(this.contentDOM, this.children, view)\n      if (browser.ios) iosHacks(this.dom)\n    }\n  }\n\n  localCompositionInfo(view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    let {from, to} = view.state.selection\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) return\n    let sel = view.root.getSelection()\n    let textNode = nearbyTextNode(sel.focusNode, sel.focusOffset)\n    if (!textNode || !this.dom.contains(textNode.parentNode)) return\n\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      let text = textNode.nodeValue\n      let textPos = findTextInFragment(this.node.content, text, from - pos, to - pos)\n      return textPos < 0 ? null : {node: textNode, pos: textPos, text}\n    } else {\n      return {node: textNode, pos: -1}\n    }\n  }\n\n  protectLocalComposition(view, {node, pos, text}) {\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) return\n\n    // Create a composition view for the orphaned nodes\n    let topNode = node\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) break\n      while (topNode.previousSibling) topNode.parentNode.removeChild(topNode.previousSibling)\n      while (topNode.nextSibling) topNode.parentNode.removeChild(topNode.nextSibling)\n      if (topNode.pmViewDesc) topNode.pmViewDesc = null\n    }\n    let desc = new CompositionViewDesc(this, topNode, node, text)\n    view.compositionNodes.push(desc)\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc)\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) return false\n    this.updateInner(node, outerDeco, innerDeco, view)\n    return true\n  }\n\n  updateInner(node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco)\n    this.node = node\n    this.innerDeco = innerDeco\n    if (this.contentDOM) this.updateChildren(view, this.posAtStart)\n    this.dirty = NOT_DIRTY\n  }\n\n  updateOuterDeco(outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) return\n    let needsWrap = this.nodeDOM.nodeType != 1\n    let oldDOM = this.dom\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap))\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null\n      this.dom.pmViewDesc = this\n    }\n    this.outerDeco = outerDeco\n  }\n\n  // Mark this node as being the selected node.\n  selectNode() {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.draggable = true\n  }\n\n  // Remove selected node marking from this node.\n  deselectNode() {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\")\n    if (this.contentDOM || !this.node.type.spec.draggable) this.dom.removeAttribute(\"draggable\")\n  }\n\n  get domAtom() { return this.node.isAtom }\n}\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nexport function docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc)\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nclass TextViewDesc extends NodeViewDesc {\n  constructor(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    super(parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view)\n  }\n\n  parseRule() {\n    let skip = this.nodeDOM.parentNode\n    while (skip && skip != this.dom && !skip.pmIsDeco) skip = skip.parentNode\n    return {skip: skip || true}\n  }\n\n  update(node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) return false\n    this.updateOuterDeco(outerDeco)\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text\n      if (view.trackWrites == this.nodeDOM) view.trackWrites = null\n    }\n    this.node = node\n    this.dirty = NOT_DIRTY\n    return true\n  }\n\n  inParent() {\n    let parentDOM = this.parent.contentDOM\n    for (let n = this.nodeDOM; n; n = n.parentNode) if (n == parentDOM) return true\n    return false\n  }\n\n  domFromPos(pos) {\n    return {node: this.nodeDOM, offset: pos}\n  }\n\n  localPosFromDOM(dom, offset, bias) {\n    if (dom == this.nodeDOM) return this.posAtStart + Math.min(offset, this.node.text.length)\n    return super.localPosFromDOM(dom, offset, bias)\n  }\n\n  ignoreMutation(mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  }\n\n  slice(from, to, view) {\n    let node = this.node.cut(from, to), dom = document.createTextNode(node.text)\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  }\n\n  markDirty(from, to) {\n    super.markDirty(from, to)\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n      this.dirty = NODE_DIRTY\n  }\n\n  get domAtom() { return false }\n}\n\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nclass TrailingHackViewDesc extends ViewDesc {\n  parseRule() { return {ignore: true} }\n  matchesHack(nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName }\n  get domAtom() { return true }\n  get ignoreForCoords() { return this.dom.nodeName == \"IMG\" }\n}\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nclass CustomNodeViewDesc extends NodeViewDesc {\n  // : (?ViewDesc, Node, [Decoration], DecorationSource, dom.Node, ?dom.Node, NodeView, EditorView)\n  constructor(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    super(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos)\n    this.spec = spec\n  }\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  update(node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) return false\n    if (this.spec.update) {\n      let result = this.spec.update(node, outerDeco, innerDeco)\n      if (result) this.updateInner(node, outerDeco, innerDeco, view)\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return super.update(node, outerDeco, innerDeco, view)\n    }\n  }\n\n  selectNode() {\n    this.spec.selectNode ? this.spec.selectNode() : super.selectNode()\n  }\n\n  deselectNode() {\n    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()\n  }\n\n  setSelection(anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : super.setSelection(anchor, head, root, force)\n  }\n\n  destroy() {\n    if (this.spec.destroy) this.spec.destroy()\n    super.destroy()\n  }\n\n  stopEvent(event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  }\n\n  ignoreMutation(mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : super.ignoreMutation(mutation)\n  }\n}\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  let dom = parentDOM.firstChild, written = false\n  for (let i = 0; i < descs.length; i++) {\n    let desc = descs[i], childDOM = desc.dom\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true }\n      dom = dom.nextSibling\n    } else {\n      written = true\n      parentDOM.insertBefore(childDOM, dom)\n    }\n    if (desc instanceof MarkViewDesc) {\n      let pos = dom ? dom.previousSibling : parentDOM.lastChild\n      renderDescs(desc.contentDOM, desc.children, view)\n      dom = pos ? pos.nextSibling : parentDOM.firstChild\n    }\n  }\n  while (dom) { dom = rm(dom); written = true }\n  if (written && view.trackWrites == parentDOM) view.trackWrites = null\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) this.nodeName = nodeName\n}\nOuterDecoLevel.prototype = Object.create(null)\n\nconst noDeco = [new OuterDecoLevel]\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) return noDeco\n\n  let top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top]\n\n  for (let i = 0; i < outerDeco.length; i++) {\n    let attrs = outerDeco[i].type.attrs\n    if (!attrs) continue\n    if (attrs.nodeName)\n      result.push(top = new OuterDecoLevel(attrs.nodeName))\n\n    for (let name in attrs) {\n      let val = attrs[name]\n      if (val == null) continue\n      if (needsWrap && result.length == 1)\n        result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\"))\n      if (name == \"class\") top.class = (top.class ? top.class + \" \" : \"\") + val\n      else if (name == \"style\") top.style = (top.style ? top.style + \";\" : \"\") + val\n      else if (name != \"nodeName\") top[name] = val\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) return nodeDOM\n\n  let curDOM = nodeDOM\n  for (let i = 0; i < curComputed.length; i++) {\n    let deco = curComputed[i], prev = prevComputed[i]\n    if (i) {\n      let parent\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent\n      } else {\n        parent = document.createElement(deco.nodeName)\n        parent.pmIsDeco = true\n        parent.appendChild(curDOM)\n        prev = noDeco[0]\n        curDOM = parent\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco)\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (let name in prev)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      dom.removeAttribute(name)\n  for (let name in cur)\n    if (name != \"class\" && name != \"style\" && name != \"nodeName\" && cur[name] != prev[name])\n      dom.setAttribute(name, cur[name])\n  if (prev.class != cur.class) {\n    let prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing\n    let curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing\n    for (let i = 0; i < prevList.length; i++) if (curList.indexOf(prevList[i]) == -1)\n      dom.classList.remove(prevList[i])\n    for (let i = 0; i < curList.length; i++) if (prevList.indexOf(curList[i]) == -1)\n      dom.classList.add(curList[i])\n    if (dom.classList.length == 0)\n      dom.removeAttribute(\"class\")\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      let prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m\n      while (m = prop.exec(prev.style))\n        dom.style.removeProperty(m[1])\n    }\n    if (cur.style)\n      dom.style.cssText += cur.style\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) return false\n  for (let i = 0; i < a.length; i++) if (!a[i].type.eq(b[i].type)) return false\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  let next = dom.nextSibling\n  dom.parentNode.removeChild(dom)\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nclass ViewTreeUpdater {\n  // : (NodeViewDesc)\n  constructor(top, lockedNode) {\n    this.top = top\n    this.lock = lockedNode\n    // Index into `this.top`'s child array, represents the current\n    // update position.\n    this.index = 0\n    // When entering a mark, the current top and index are pushed\n    // onto this.\n    this.stack = []\n    // Tracks whether anything was changed\n    this.changed = false\n\n    this.preMatch = preMatch(top.node.content, top)\n  }\n\n  // Destroy and remove the children between the given indices in\n  // `this.top`.\n  destroyBetween(start, end) {\n    if (start == end) return\n    for (let i = start; i < end; i++) this.top.children[i].destroy()\n    this.top.children.splice(start, end - start)\n    this.changed = true\n  }\n\n  // Destroy all remaining children in `this.top`.\n  destroyRest() {\n    this.destroyBetween(this.index, this.top.children.length)\n  }\n\n  // : ([Mark], EditorView)\n  // Sync the current stack of mark descs with the given array of\n  // marks, reusing existing mark descs when possible.\n  syncToMarks(marks, inline, view) {\n    let keep = 0, depth = this.stack.length >> 1\n    let maxKeep = Math.min(depth, marks.length)\n    while (keep < maxKeep &&\n           (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n      keep++\n\n    while (keep < depth) {\n      this.destroyRest()\n      this.top.dirty = NOT_DIRTY\n      this.index = this.stack.pop()\n      this.top = this.stack.pop()\n      depth--\n    }\n    while (depth < marks.length) {\n      this.stack.push(this.top, this.index + 1)\n      let found = -1\n      for (let i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n        if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n      }\n      if (found > -1) {\n        if (found > this.index) {\n          this.changed = true\n          this.destroyBetween(this.index, found)\n        }\n        this.top = this.top.children[this.index]\n      } else {\n        let markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view)\n        this.top.children.splice(this.index, 0, markDesc)\n        this.top = markDesc\n        this.changed = true\n      }\n      this.index = 0\n      depth++\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource) → bool\n  // Try to find a node desc matching the given data. Skip over it and\n  // return true when successful.\n  findNodeMatch(node, outerDeco, innerDeco, index) {\n    let found = -1, targetDesc\n    if (index >= this.preMatch.index &&\n        (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n        targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n      found = this.top.children.indexOf(targetDesc, this.index)\n    } else {\n      for (let i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n        let child = this.top.children[i]\n        if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n          found = i\n          break\n        }\n      }\n    }\n    if (found < 0) return false\n    this.destroyBetween(this.index, found)\n    this.index++\n    return true\n  }\n\n  updateNodeAt(node, outerDeco, innerDeco, index, view) {\n    let child = this.top.children[index]\n    if (!child.update(node, outerDeco, innerDeco, view)) return false\n    this.destroyBetween(this.index, index)\n    this.index = index + 1\n    return true\n  }\n\n  findIndexWithChild(domNode) {\n    for (;;) {\n      let parent = domNode.parentNode\n      if (!parent) return -1\n      if (parent == this.top.contentDOM) {\n        let desc = domNode.pmViewDesc\n        if (desc) for (let i = this.index; i < this.top.children.length; i++) {\n          if (this.top.children[i] == desc) return i\n        }\n        return -1\n      }\n      domNode = parent\n    }\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n  // Try to update the next node, if any, to the given data. Checks\n  // pre-matches to avoid overwriting nodes that could still be used.\n  updateNextNode(node, outerDeco, innerDeco, view, index) {\n    for (let i = this.index; i < this.top.children.length; i++) {\n      let next = this.top.children[i]\n      if (next instanceof NodeViewDesc) {\n        let preMatch = this.preMatch.matched.get(next)\n        if (preMatch != null && preMatch != index) return false\n        let nextDOM = next.dom\n\n        // Can't update if nextDOM is or contains this.lock, except if\n        // it's a text node whose content already matches the new text\n        // and whose decorations match the new ones.\n        let locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n            !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n              next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco))\n        if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n          this.destroyBetween(this.index, i)\n          if (next.dom != nextDOM) this.changed = true\n          this.index++\n          return true\n        }\n        break\n      }\n    }\n    return false\n  }\n\n  // : (Node, [Decoration], DecorationSource, EditorView)\n  // Insert the node as a newly created node desc.\n  addNode(node, outerDeco, innerDeco, view, pos) {\n    this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos))\n    this.changed = true\n  }\n\n  placeWidget(widget, view, pos) {\n    let next = this.index < this.top.children.length ? this.top.children[this.index] : null\n    if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n      this.index++\n    } else {\n      let desc = new WidgetViewDesc(this.top, widget, view, pos)\n      this.top.children.splice(this.index++, 0, desc)\n      this.changed = true\n    }\n  }\n\n  // Make sure a textblock looks and behaves correctly in\n  // contentEditable.\n  addTextblockHacks() {\n    let lastChild = this.top.children[this.index - 1], parent = this.top\n    while (lastChild instanceof MarkViewDesc) {\n      parent = lastChild\n      lastChild = parent.children[parent.children.length - 1]\n    }\n\n    if (!lastChild || // Empty textblock\n        !(lastChild instanceof TextViewDesc) ||\n        /\\n$/.test(lastChild.node.text)) {\n      // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n      if ((browser.safari || browser.chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n        this.addHackNode(\"IMG\", parent)\n      this.addHackNode(\"BR\", this.top)\n    }\n  }\n\n  addHackNode(nodeName, parent) {\n    if (parent == this.top && this.index < parent.children.length && parent.children[this.index].matchesHack(nodeName)) {\n      this.index++\n    } else {\n      let dom = document.createElement(nodeName)\n      if (nodeName == \"IMG\") {\n        dom.className = \"ProseMirror-separator\"\n        dom.alt = \"\"\n      }\n      if (nodeName == \"BR\") dom.className = \"ProseMirror-trailingBreak\"\n      let hack = new TrailingHackViewDesc(this.top, nothing, dom, null)\n      if (parent != this.top) parent.children.push(hack)\n      else parent.children.splice(this.index++, 0, hack)\n      this.changed = true\n    }\n  }\n}\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>, matches: ViewDesc[]}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n  let curDesc = parentDesc, descI = curDesc.children.length\n  let fI = frag.childCount, matched = new Map, matches = []\n  outer: while (fI > 0) {\n    let desc\n    for (;;) {\n      if (descI) {\n        let next = curDesc.children[descI - 1]\n        if (next instanceof MarkViewDesc) {\n          curDesc = next\n          descI = next.children.length\n        } else {\n          desc = next\n          descI--\n          break\n        }\n      } else if (curDesc == parentDesc) {\n        break outer\n      } else {\n        // FIXME\n        descI = curDesc.parent.children.indexOf(curDesc)\n        curDesc = curDesc.parent\n      }\n    }\n    let node = desc.node\n    if (!node) continue\n    if (node != frag.child(fI - 1)) break\n    --fI\n    matched.set(desc, fI)\n    matches.push(desc)\n  }\n  return {index: fI, matched, matches: matches.reverse()}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  let locals = deco.locals(parent), offset = 0\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (let i = 0; i < parent.childCount; i++) {\n      let child = parent.child(i)\n      onNode(child, locals, deco.forChild(offset, child), i)\n      offset += child.nodeSize\n    }\n    return\n  }\n\n  let decoIndex = 0, active = [], restNode = null\n  for (let parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      let widget = locals[decoIndex++], widgets\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        (widgets || (widgets = [widget])).push(locals[decoIndex++])\n      if (widgets) {\n        widgets.sort(compareSide)\n        for (let i = 0; i < widgets.length; i++) onWidget(widgets[i], parentIndex, !!restNode)\n      } else {\n        onWidget(widget, parentIndex, !!restNode)\n      }\n    }\n\n    let child, index\n    if (restNode) {\n      index = -1\n      child = restNode\n      restNode = null\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex\n      child = parent.child(parentIndex++)\n    } else {\n      break\n    }\n\n    for (let i = 0; i < active.length; i++) if (active[i].to <= offset) active.splice(i--, 1)\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      active.push(locals[decoIndex++])\n\n    let end = offset + child.nodeSize\n    if (child.isText) {\n      let cutAt = end\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) cutAt = locals[decoIndex].from\n      for (let i = 0; i < active.length; i++) if (active[i].to < cutAt) cutAt = active[i].to\n      if (cutAt < end) {\n        restNode = child.cut(cutAt - offset)\n        child = child.cut(0, cutAt - offset)\n        end = cutAt\n        index = -1\n      }\n    }\n\n    let outerDeco = !active.length ? nothing\n        : child.isInline && !child.isLeaf ? active.filter(d => !d.inline)\n        : active.slice()\n    onNode(child, outerDeco, deco.forChild(offset, child), index)\n    offset = end\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    let oldCSS = dom.style.cssText\n    dom.style.cssText = oldCSS + \"; list-style: square !important\"\n    window.getComputedStyle(dom).listStyle\n    dom.style.cssText = oldCSS\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) return node\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        return node.childNodes[offset]\n      node = node.childNodes[offset - 1]\n      offset = nodeSize(node)\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset]\n      offset = 0\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (let i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    let child = frag.child(i++), childStart = pos\n    pos += child.nodeSize\n    if (!child.isText) continue\n    let str = child.text\n    while (i < frag.childCount) {\n      let next = frag.child(i++)\n      pos += next.nodeSize\n      if (!next.isText) break\n      str += next.text\n    }\n    if (pos >= from) {\n      let found = childStart < to ? str.lastIndexOf(text, to - childStart - 1) : -1\n      if (found >= 0 && found + text.length + childStart >= from)\n        return childStart + found\n      if (from == to && str.length >= (to + text.length) - childStart &&\n          str.slice(to - childStart, to - childStart + text.length) == text)\n        return to\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  let result = []\n  for (let i = 0, off = 0; i < nodes.length; i++) {\n    let child = nodes[i], start = off, end = off += child.size\n    if (start >= to || end <= from) {\n      result.push(child)\n    } else {\n      if (start < from) result.push(child.slice(0, from - start, view))\n      if (replacement) {\n        result.push(replacement)\n        replacement = null\n      }\n      if (end > to) result.push(child.slice(to - start, child.size, view))\n    }\n  }\n  return result\n}\n","import {TextSelection, NodeSelection} from \"prosemirror-state\"\n\nimport browser from \"./browser\"\nimport {selectionCollapsed, isEquivalentPosition, domIndex, isOnEdge} from \"./dom\"\n\nexport function selectionFromDOM(view, origin) {\n  let domSel = view.root.getSelection(), doc = view.state.doc\n  if (!domSel.focusNode) return null\n  let nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0\n  let head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset)\n  if (head < 0) return null\n  let $head = doc.resolve(head), $anchor, selection\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head\n    while (nearestDesc && !nearestDesc.node) nearestDesc = nearestDesc.parent\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      let pos = nearestDesc.posBefore\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos))\n    }\n  } else {\n    let anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset)\n    if (anchor < 0) return null\n    $anchor = doc.resolve(anchor)\n  }\n\n  if (!selection) {\n    let bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1\n    selection = selectionBetween(view, $anchor, $head, bias)\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nexport function selectionToDOM(view, force) {\n  let sel = view.state.selection\n  syncNodeSelection(view, sel)\n\n  if (!editorOwnsSelection(view)) return\n\n  // The delayed drag selection causes issues with Cell Selections\n  // in Safari. And the drag selection delay is to workarond issues\n  // which only present in Chrome.\n  if (!force && view.mouseDown && view.mouseDown.allowDefault && browser.chrome) {\n    let domSel = view.root.getSelection(), curSel = view.domObserver.currentSelection\n    if (domSel.anchorNode && isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset,\n                                                  curSel.anchorNode, curSel.anchorOffset)) {\n      view.mouseDown.delayedSelectionSync = true\n      view.domObserver.setCurSelection()\n      return\n    }\n  }\n\n  view.domObserver.disconnectSelection()\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view)\n  } else {\n    let {anchor, head} = sel, resetEditableFrom, resetEditableTo\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        resetEditableFrom = temporarilyEditableNear(view, sel.from)\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        resetEditableTo = temporarilyEditableNear(view, sel.to)\n    }\n    view.docView.setSelection(anchor, head, view.root, force)\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) resetEditable(resetEditableFrom)\n      if (resetEditableTo) resetEditable(resetEditableTo)\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\")\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\")\n      if (\"onselectionchange\" in document) removeClassOnSelectionChange(view)\n    }\n  }\n\n  view.domObserver.setCurSelection()\n  view.domObserver.connectSelection()\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nconst brokenSelectBetweenUneditable = browser.safari || browser.chrome && browser.chrome_version < 63\n\nfunction temporarilyEditableNear(view, pos) {\n  let {node, offset} = view.docView.domFromPos(pos, 0)\n  let after = offset < node.childNodes.length ? node.childNodes[offset] : null\n  let before = offset ? node.childNodes[offset - 1] : null\n  if (browser.safari && after && after.contentEditable == \"false\") return setEditable(after)\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) return setEditable(after)\n    else if (before) return setEditable(before)\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\"\n  if (browser.safari && element.draggable) { element.draggable = false; element.wasDraggable = true }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\"\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  let doc = view.dom.ownerDocument\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n  let domSel = view.root.getSelection()\n  let node = domSel.anchorNode, offset = domSel.anchorOffset\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = () => {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard)\n      setTimeout(() => {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          view.dom.classList.remove(\"ProseMirror-hideselection\")\n      }, 20)\n    }\n  })\n}\n\nfunction selectCursorWrapper(view) {\n  let domSel = view.root.getSelection(), range = document.createRange()\n  let node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\"\n  if (img) range.setEnd(node.parentNode, domIndex(node) + 1)\n  else range.setEnd(node, 0)\n  range.collapse(false)\n  domSel.removeAllRanges()\n  domSel.addRange(range)\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && browser.ie && browser.ie_version <= 11) {\n    node.disabled = true\n    node.disabled = false\n  }\n}\n\nexport function syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    let desc = view.docView.descAt(sel.from)\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view)\n      if (desc) desc.selectNode()\n      view.lastSelectedViewDesc = desc\n    }\n  } else {\n    clearNodeSelection(view)\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      view.lastSelectedViewDesc.deselectNode()\n    view.lastSelectedViewDesc = null\n  }\n}\n\nexport function selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", f => f(view, $anchor, $head))\n    || TextSelection.between($anchor, $head, bias)\n}\n\nexport function hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) return false\n  return hasSelection(view)\n}\n\nexport function hasSelection(view) {\n  let sel = view.root.getSelection()\n  if (!sel.anchorNode) return false\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nexport function anchorInRightPlace(view) {\n  let anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0)\n  let domSel = view.root.getSelection()\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n","import {Selection, NodeSelection, TextSelection, AllSelection} from \"prosemirror-state\"\nimport browser from \"./browser\"\nimport {domIndex, selectionCollapsed} from \"./dom\"\nimport {selectionToDOM} from \"./selection\"\n\nfunction moveSelectionBlock(state, dir) {\n  let {$anchor, $head} = state.selection\n  let $side = dir > 0 ? $anchor.max($head) : $anchor.min($head)\n  let $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView())\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      let next = moveSelectionBlock(view.state, dir)\n      if (next && (next instanceof NodeSelection)) return apply(view, next)\n      return false\n    } else if (!(browser.mac && mods.indexOf(\"m\") > -1)) {\n      let $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc\n      if (!node || node.isText) return false\n      let nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) return false\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (browser.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next) return apply(view, next)\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let moveNode, moveOffset, force = false\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (browser.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) force = true\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        let before = node.childNodes[offset - 1]\n        if (isIgnorable(before)) {\n          moveNode = node\n          moveOffset = --offset\n        } else if (before.nodeType == 3) {\n          node = before\n          offset = node.nodeValue.length\n        } else break\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let prev = node.previousSibling\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode\n        moveOffset = domIndex(prev)\n        prev = prev.previousSibling\n      }\n      if (!prev) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = 0\n      } else {\n        node = prev\n        offset = nodeLen(node)\n      }\n    }\n  }\n  if (force) setSelFocus(view, sel, node, offset)\n  else if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  let sel = view.root.getSelection()\n  let node = sel.focusNode, offset = sel.focusOffset\n  if (!node) return\n  let len = nodeLen(node)\n  let moveNode, moveOffset\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) break\n      let after = node.childNodes[offset]\n      if (isIgnorable(after)) {\n        moveNode = node\n        moveOffset = ++offset\n      }\n      else break\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      let next = node.nextSibling\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode\n        moveOffset = domIndex(next) + 1\n        next = next.nextSibling\n      }\n      if (!next) {\n        node = node.parentNode\n        if (node == view.dom) break\n        offset = len = 0\n      } else {\n        node = next\n        offset = 0\n        len = nodeLen(node)\n      }\n    }\n  }\n  if (moveNode) setSelFocus(view, sel, moveNode, moveOffset)\n}\n\nfunction isBlockNode(dom) {\n  let desc = dom.pmViewDesc\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    let range = document.createRange()\n    range.setEnd(node, offset)\n    range.setStart(node, offset)\n    sel.removeAllRanges()\n    sel.addRange(range)\n  } else if (sel.extend) {\n    sel.extend(node, offset)\n  }\n  view.domObserver.setCurSelection()\n  let {state} = view\n  // If no state update ends up happening, reset the selection.\n  setTimeout(() => {\n    if (view.state == state) selectionToDOM(view)\n  }, 50)\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  let sel = view.state.selection\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) return false\n  if (browser.mac && mods.indexOf(\"m\") > -1) return false\n  let {$from, $to} = sel\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    let next = moveSelectionBlock(view.state, dir)\n    if (next && (next instanceof NodeSelection))\n      return apply(view, next)\n  }\n  if (!$from.parent.inlineContent) {\n    let side = dir < 0 ? $from : $to\n    let beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir)\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return true\n  let {$head, $anchor, empty} = view.state.selection\n  if (!$head.sameParent($anchor)) return true\n  if (!empty) return false\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) return true\n  let nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter)\n  if (nextNode && !nextNode.isText) {\n    let tr = view.state.tr\n    if (dir < 0) tr.delete($head.pos - nextNode.nodeSize, $head.pos)\n    else tr.delete($head.pos, $head.pos + nextNode.nodeSize)\n    view.dispatch(tr)\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop()\n  node.contentEditable = state\n  view.domObserver.start()\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!browser.safari || view.state.selection.$head.parentOffset > 0) return\n  let {focusNode, focusOffset} = view.root.getSelection()\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    let child = focusNode.firstChild\n    switchEditable(view, child, true)\n    setTimeout(() => switchEditable(view, child, false), 20)\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  let result = \"\"\n  if (event.ctrlKey) result += \"c\"\n  if (event.metaKey) result += \"m\"\n  if (event.altKey) result += \"a\"\n  if (event.shiftKey) result += \"s\"\n  return result\n}\n\nexport function captureKeyDown(view, event) {\n  let code = event.keyCode, mods = getMods(event)\n  if (code == 8 || (browser.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (browser.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (browser.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n","import {Fragment, DOMParser} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\n\nimport {selectionBetween, selectionFromDOM, selectionToDOM} from \"./selection\"\nimport {selectionCollapsed, keyEvent} from \"./dom\"\nimport browser from \"./browser\"\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  let {node: parent, fromOffset, toOffset, from, to} = view.docView.parseRange(from_, to_)\n\n  let domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}]\n    if (!selectionCollapsed(domSel))\n      find.push({node: domSel.focusNode, offset: domSel.focusOffset})\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (browser.chrome && view.lastKeyCode === 8) {\n    for (let off = toOffset; off > fromOffset; off--) {\n      let node = parent.childNodes[off - 1], desc = node.pmViewDesc\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) break\n    }\n  }\n  let startDoc = view.state.doc\n  let parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n  let $from = startDoc.resolve(from)\n\n  let sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode,\n    context: $from\n  })\n  if (find && find[0].pos != null) {\n    let anchor = find[0].pos, head = find[1] && find[1].pos\n    if (head == null) head = anchor\n    sel = {anchor: anchor + from, head: head + from}\n  }\n  return {doc, sel, from, to}\n}\n\nfunction ruleFromNode(dom) {\n  let desc = dom.pmViewDesc\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (browser.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      let skip = document.createElement(\"div\")\n      skip.appendChild(document.createElement(\"li\"))\n      return {skip}\n    } else if (dom.parentNode.lastChild == dom || browser.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nexport function readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    let origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null\n    let newSel = selectionFromDOM(view, origin)\n    if (newSel && !view.state.selection.eq(newSel)) {\n      let tr = view.state.tr.setSelection(newSel)\n      if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n      else if (origin == \"key\") tr.scrollIntoView()\n      view.dispatch(tr)\n    }\n    return\n  }\n\n  let $before = view.state.doc.resolve(from)\n  let shared = $before.sharedDepth(to)\n  from = $before.before(shared + 1)\n  to = view.state.doc.resolve(to).after(shared + 1)\n\n  let sel = view.state.selection\n  let parse = parseBetween(view, from, to)\n\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (browser.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    let text = view.cursorWrapper.deco.type.toDOM.nextSibling\n    let size = text && text.nodeValue ? text.nodeValue.length : 1\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size}\n  }\n\n  let doc = view.state.doc, compare = doc.slice(parse.from, parse.to)\n  let preferredPos, preferredSide\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to\n    preferredSide = \"end\"\n  } else {\n    preferredPos = view.state.selection.from\n    preferredSide = \"start\"\n  }\n  view.lastKeyCode = null\n\n  let change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide)\n  if ((browser.ios && view.lastIOSEnter > Date.now() - 225 || browser.android) &&\n      addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\") &&\n      (!change || change.endA >= change.endB) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to}\n    } else {\n      if (parse.sel) {\n        let sel = resolveSelection(view, view.state.doc, parse.sel)\n        if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n      }\n      return\n    }\n  }\n  view.domChangeCount++\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2 &&\n        view.state.selection.from >= parse.from) {\n      change.start = view.state.selection.from\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2 &&\n               view.state.selection.to <= parse.to) {\n      change.endB += (view.state.selection.to - change.endA)\n      change.endA = view.state.selection.to\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (browser.ie && browser.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--\n    change.endA--\n    change.endB--\n  }\n\n  let $from = parse.doc.resolveNoCache(change.start - parse.from)\n  let $to = parse.doc.resolveNoCache(change.endB - parse.from)\n  let inlineChange = $from.sameParent($to) && $from.parent.inlineContent\n  let nextSel\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((browser.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(n => n.nodeName == \"DIV\" || n.nodeName == \"P\"))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))) {\n    view.lastIOSEnter = 0\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) {\n    if (browser.android && browser.chrome) view.domObserver.suppressSelectionUpdates() // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (browser.chrome && browser.android && change.toB == change.from)\n    view.lastAndroidDelete = Date.now()\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (browser.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2\n    $to = parse.doc.resolveNoCache(change.endB - parse.from)\n    setTimeout(() => {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })\n    }, 20)\n  }\n\n  let chFrom = change.start, chTo = change.endA\n\n  let tr, storedMarks, markChange, $from1\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (browser.ie && browser.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates()\n        setTimeout(() => selectionToDOM(view), 20)\n      }\n      tr = view.state.tr.delete(chFrom, chTo)\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA))\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr\n      if (markChange.type == \"add\") tr.addMark(chFrom, chTo, markChange.mark)\n      else tr.removeMark(chFrom, chTo, markChange.mark)\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      let text = $from.parent.textBetween($from.parentOffset, $to.parentOffset)\n      if (view.someProp(\"handleTextInput\", f => f(view, chFrom, chTo, text))) return\n      tr = view.state.tr.insertText(text, chFrom, chTo)\n    }\n  }\n\n  if (!tr)\n    tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from))\n  if (parse.sel) {\n    let sel = resolveSelection(view, tr.doc, parse.sel)\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel && !(browser.chrome && browser.android && view.composing && sel.empty &&\n                 (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel.head == chFrom || sel.head == tr.mapping.map(chTo) - 1) ||\n                 browser.ie && sel.empty && sel.head == chFrom))\n      tr.setSelection(sel)\n  }\n  if (storedMarks) tr.ensureMarks(storedMarks)\n  view.dispatch(tr.scrollIntoView())\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) return null\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  let curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks\n  let added = curMarks, removed = prevMarks, type, mark, update\n  for (let i = 0; i < prevMarks.length; i++) added = prevMarks[i].removeFromSet(added)\n  for (let i = 0; i < curMarks.length; i++) removed = curMarks[i].removeFromSet(removed)\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0]\n    type = \"add\"\n    update = node => node.mark(mark.addToSet(node.marks))\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0]\n    type = \"remove\"\n    update = node => node.mark(mark.removeFromSet(node.marks))\n  } else {\n    return null\n  }\n  let updated = []\n  for (let i = 0; i < prev.childCount; i++) updated.push(update(prev.child(i)))\n  if (Fragment.from(updated).eq(cur)) return {mark, type}\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    return false\n\n  let $start = old.resolve(start)\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    return false\n  let $next = old.resolve(skipClosingAndOpening($start, true, true))\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    return false\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  let depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--\n    end++\n    fromEnd = false\n  }\n  if (mayOpen) {\n    let next = $pos.node(depth).maybeChild($pos.indexAfter(depth))\n    while (next && !next.isLeaf) {\n      next = next.firstChild\n      end++\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  let start = a.findDiffStart(b, pos)\n  if (start == null) return null\n  let {a: endA, b: endB} = a.findDiffEnd(b, pos + a.size, pos + b.size)\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, start - Math.min(endA, endB))\n    preferredPos -= endA + adjust - start\n  }\n  if (endA < start && a.size < b.size) {\n    let move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0\n    start -= move\n    endB = start + (endB - endA)\n    endA = start\n  } else if (endB < start) {\n    let move = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0\n    start -= move\n    endA = start + (endA - endB)\n    endB = start\n  }\n  return {start, endA, endB}\n}\n","import {Slice, Fragment, DOMParser, DOMSerializer} from \"prosemirror-model\"\nimport browser from \"./browser\"\n\nexport function serializeForClipboard(view, slice) {\n  let context = [], {content, openStart, openEnd} = slice\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--\n    openEnd--\n    let node = content.firstChild\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null)\n    content = node.content\n  }\n\n  let serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema)\n  let doc = detachedDoc(), wrap = doc.createElement(\"div\")\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}))\n\n  let firstChild = wrap.firstChild, needsWrap\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      let wrapper = doc.createElement(needsWrap[i])\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n      if (needsWrap[i] != \"tbody\") {\n        openStart++\n        openEnd++\n      }\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    firstChild.setAttribute(\"data-pm-slice\", `${openStart} ${openEnd} ${JSON.stringify(context)}`)\n\n  let text = view.someProp(\"clipboardTextSerializer\", f => f(slice)) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\")\n\n  return {dom: wrap, text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nexport function parseFromClipboard(view, text, html, plainText, $context) {\n  let dom, inCode = $context.parent.type.spec.code, slice\n  if (!html && !text) return null\n  let asText = text && (plainText || inCode || !html)\n  if (asText) {\n    view.someProp(\"transformPastedText\", f => { text = f(text, inCode || plainText) })\n    if (inCode) return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty\n    let parsed = view.someProp(\"clipboardTextParser\", f => f(text, $context, plainText))\n    if (parsed) {\n      slice = parsed\n    } else {\n      let marks = $context.marks()\n      let {schema} = view.state, serializer = DOMSerializer.fromSchema(schema)\n      dom = document.createElement(\"div\")\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(block => {\n        let p = dom.appendChild(document.createElement(\"p\"))\n        if (block) p.appendChild(serializer.serializeNode(schema.text(block, marks)))\n      })\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", f => { html = f(html) })\n    dom = readHTML(html)\n    if (browser.webkit) restoreReplacedSpaces(dom)\n  }\n\n  let contextNode = dom && dom.querySelector(\"[data-pm-slice]\")\n  let sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"))\n  if (!slice) {\n    let parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema)\n    slice = parser.parseSlice(dom, {\n      preserveWhitespace: !!(asText || sliceData),\n      context: $context,\n      ruleFromNode(dom) {\n        if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n            dom.parentNode && !inlineParents.test(dom.parentNode.nodeName)) return {ignore: true}\n      }\n    })\n  }\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3])\n  } else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true)\n    if (slice.openStart || slice.openEnd) {\n      let openStart = 0, openEnd = 0\n      for (let node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating;\n           openStart++, node = node.firstChild) {}\n      for (let node = slice.content.lastChild; openEnd < slice.openEnd && !node.type.spec.isolating;\n           openEnd++, node = node.lastChild) {}\n      slice = closeSlice(slice, openStart, openEnd)\n    }\n  }\n\n  view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  return slice\n}\n\nconst inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) return fragment\n  for (let d = $context.depth; d >= 0; d--) {\n    let parent = $context.node(d)\n    let match = parent.contentMatchAt($context.index(d))\n    let lastWrap, result = []\n    fragment.forEach(node => {\n      if (!result) return\n      let wrap = match.findWrapping(node.type), inLast\n      if (!wrap) return result = null\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast\n      } else {\n        if (result.length) result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length)\n        let wrapped = withWrappers(node, wrap)\n        result.push(wrapped)\n        match = match.matchType(wrapped.type, wrapped.attrs)\n        lastWrap = wrap\n      }\n    })\n    if (result) return Fragment.from(result)\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from = 0) {\n  for (let i = wrap.length - 1; i >= from; i--)\n    node = wrap[i].create(null, Fragment.from(node))\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    let inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1)\n    if (inner) return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner))\n    let match = sibling.contentMatchAt(sibling.childCount)\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1))))\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) return node\n  let fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1))\n  let fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  let node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content\n  if (depth < to - 1) inner = closeRange(inner, side, from, to, depth + 1, openEnd)\n  if (depth >= from)\n    inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true))\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd)\n  if (openEnd < slice.openEnd)\n    slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd)\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nconst wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n}\n\nlet _detachedDoc = null\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  let metas = /^(\\s*<meta [^>]*>)*/.exec(html)\n  if (metas) html = html.slice(metas[0].length)\n  let elt = detachedDoc().createElement(\"div\")\n  let firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    html = wrap.map(n => \"<\" + n + \">\").join(\"\") + html + wrap.map(n => \"</\" + n + \">\").reverse().join(\"\")\n  elt.innerHTML = html\n  if (wrap) for (let i = 0; i < wrap.length; i++) elt = elt.querySelector(wrap[i]) || elt\n  return elt\n}\n\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n  let nodes = dom.querySelectorAll(browser.chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\")\n  for (let i = 0; i < nodes.length; i++) {\n    let node = nodes[i]\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n      node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node)\n  }\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) return slice\n  let schema = slice.content.firstChild.type.schema, array\n  try { array = JSON.parse(context) }\n  catch(e) { return slice }\n  let {content, openStart, openEnd} = slice\n  for (let i = array.length - 2; i >= 0; i -= 2) {\n    let type = schema.nodes[array[i]]\n    if (!type || type.hasRequiredAttrs()) break\n    content = Fragment.from(type.create(array[i + 1], content))\n    openStart++; openEnd++\n  }\n  return new Slice(content, openStart, openEnd)\n}\n","import browser from \"./browser\"\nimport {domIndex, isEquivalentPosition} from \"./dom\"\nimport {hasFocusAndSelection, selectionToDOM} from \"./selection\"\n\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n}\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nconst useCharData = browser.ie && browser.ie_version <= 11\n\nclass SelectionState {\n  constructor() {\n    this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null\n  }\n\n  set(sel) {\n    this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset\n    this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset\n  }\n\n  eq(sel) {\n    return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n      sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n  }\n}\n\nexport class DOMObserver {\n  constructor(view, handleDOMChange) {\n    this.view = view\n    this.handleDOMChange = handleDOMChange\n    this.queue = []\n    this.flushingSoon = -1\n    this.observer = window.MutationObserver &&\n      new window.MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) this.queue.push(mutations[i])\n        // IE11 will sometimes (on backspacing out a single character\n        // text node after a BR node) call the observer callback\n        // before actually updating the DOM, which will cause\n        // ProseMirror to miss the change (see #930)\n        if (browser.ie && browser.ie_version <= 11 && mutations.some(\n          m => m.type == \"childList\" && m.removedNodes.length ||\n               m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n          this.flushSoon()\n        else\n          this.flush()\n      })\n    this.currentSelection = new SelectionState\n    if (useCharData) {\n      this.onCharData = e => {\n        this.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue})\n        this.flushSoon()\n      }\n    }\n    this.onSelectionChange = this.onSelectionChange.bind(this)\n    this.suppressingSelectionUpdates = false\n  }\n\n  flushSoon() {\n    if (this.flushingSoon < 0)\n      this.flushingSoon = window.setTimeout(() => { this.flushingSoon = -1; this.flush() }, 20)\n  }\n\n  forceFlush() {\n    if (this.flushingSoon > -1) {\n      window.clearTimeout(this.flushingSoon)\n      this.flushingSoon = -1\n      this.flush()\n    }\n  }\n\n  start() {\n    if (this.observer)\n      this.observer.observe(this.view.dom, observeOptions)\n    if (useCharData)\n      this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.connectSelection()\n  }\n\n  stop() {\n    if (this.observer) {\n      let take = this.observer.takeRecords()\n      if (take.length) {\n        for (let i = 0; i < take.length; i++) this.queue.push(take[i])\n        window.setTimeout(() => this.flush(), 20)\n      }\n      this.observer.disconnect()\n    }\n    if (useCharData) this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData)\n    this.disconnectSelection()\n  }\n\n  connectSelection() {\n    this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  disconnectSelection() {\n    this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange)\n  }\n\n  suppressSelectionUpdates() {\n    this.suppressingSelectionUpdates = true\n    setTimeout(() => this.suppressingSelectionUpdates = false, 50)\n  }\n\n  onSelectionChange() {\n    if (!hasFocusAndSelection(this.view)) return\n    if (this.suppressingSelectionUpdates) return selectionToDOM(this.view)\n    // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    if (browser.ie && browser.ie_version <= 11 && !this.view.state.selection.empty) {\n      let sel = this.view.root.getSelection()\n      // Selection.isCollapsed isn't reliable on IE\n      if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n        return this.flushSoon()\n    }\n    this.flush()\n  }\n\n  setCurSelection() {\n    this.currentSelection.set(this.view.root.getSelection())\n  }\n\n  ignoreSelectionChange(sel) {\n    if (sel.rangeCount == 0) return true\n    let container = sel.getRangeAt(0).commonAncestorContainer\n    let desc = this.view.docView.nearestDesc(container)\n    if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n      this.setCurSelection()\n      return true\n    }\n  }\n\n  flush() {\n    if (!this.view.docView || this.flushingSoon > -1) return\n    let mutations = this.observer ? this.observer.takeRecords() : []\n    if (this.queue.length) {\n      mutations = this.queue.concat(mutations)\n      this.queue.length = 0\n    }\n\n    let sel = this.view.root.getSelection()\n    let newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasFocusAndSelection(this.view) && !this.ignoreSelectionChange(sel)\n\n    let from = -1, to = -1, typeOver = false, added = []\n    if (this.view.editable) {\n      for (let i = 0; i < mutations.length; i++) {\n        let result = this.registerMutation(mutations[i], added)\n        if (result) {\n          from = from < 0 ? result.from : Math.min(result.from, from)\n          to = to < 0 ? result.to : Math.max(result.to, to)\n          if (result.typeOver) typeOver = true\n        }\n      }\n    }\n\n    if (browser.gecko && added.length > 1) {\n      let brs = added.filter(n => n.nodeName == \"BR\")\n      if (brs.length == 2) {\n        let [a, b] = brs\n        if (a.parentNode && a.parentNode.parentNode == b.parentNode) b.remove()\n        else a.remove()\n      }\n    }\n\n    if (from > -1 || newSel) {\n      if (from > -1) {\n        this.view.docView.markDirty(from, to)\n        checkCSS(this.view)\n      }\n      this.handleDOMChange(from, to, typeOver, added)\n      if (this.view.docView && this.view.docView.dirty) this.view.updateState(this.view.state)\n      else if (!this.currentSelection.eq(sel)) selectionToDOM(this.view)\n      this.currentSelection.set(sel)\n    }\n  }\n\n  registerMutation(mut, added) {\n    // Ignore mutations inside nodes that were already noted as inserted\n    if (added.indexOf(mut.target) > -1) return null\n    let desc = this.view.docView.nearestDesc(mut.target)\n    if (mut.type == \"attributes\" &&\n        (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n         // Firefox sometimes fires spurious events for null/empty styles\n         (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n      return null\n    if (!desc || desc.ignoreMutation(mut)) return null\n\n    if (mut.type == \"childList\") {\n      for (let i = 0; i < mut.addedNodes.length; i++) added.push(mut.addedNodes[i])\n      if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n        return {from: desc.posBefore, to: desc.posAfter}\n      let prev = mut.previousSibling, next = mut.nextSibling\n      if (browser.ie && browser.ie_version <= 11 && mut.addedNodes.length) {\n        // IE11 gives us incorrect next/prev siblings for some\n        // insertions, so if there are added nodes, recompute those\n        for (let i = 0; i < mut.addedNodes.length; i++) {\n          let {previousSibling, nextSibling} = mut.addedNodes[i]\n          if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) prev = previousSibling\n          if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) next = nextSibling\n        }\n      }\n      let fromOffset = prev && prev.parentNode == mut.target\n          ? domIndex(prev) + 1 : 0\n      let from = desc.localPosFromDOM(mut.target, fromOffset, -1)\n      let toOffset = next && next.parentNode == mut.target\n          ? domIndex(next) : mut.target.childNodes.length\n      let to = desc.localPosFromDOM(mut.target, toOffset, 1)\n      return {from, to}\n    } else if (mut.type == \"attributes\") {\n      return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n    } else { // \"characterData\"\n      return {\n        from: desc.posAtStart,\n        to: desc.posAtEnd,\n        // An event was generated for a text change that didn't change\n        // any text. Mark the dom change to fall back to assuming the\n        // selection was typed over with an identical value if it can't\n        // find another change.\n        typeOver: mut.target.nodeValue == mut.oldValue\n      }\n    }\n  }\n}\n\nlet cssChecked = false\n\nfunction checkCSS(view) {\n  if (cssChecked) return\n  cssChecked = true\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\")\n}\n","import {Selection, NodeSelection, TextSelection} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\nimport {Slice} from \"prosemirror-model\"\n\nimport browser from \"./browser\"\nimport {captureKeyDown} from \"./capturekeys\"\nimport {readDOMChange} from \"./domchange\"\nimport {parseFromClipboard, serializeForClipboard} from \"./clipboard\"\nimport {DOMObserver} from \"./domobserver\"\nimport {selectionBetween, selectionToDOM, selectionFromDOM} from \"./selection\"\nimport {keyEvent} from \"./dom\"\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nconst handlers = {}, editHandlers = {}\n\nexport function initInput(view) {\n  view.shiftKey = false\n  view.mouseDown = null\n  view.lastKeyCode = null\n  view.lastKeyCodeTime = 0\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"}\n  view.lastSelectionOrigin = null\n  view.lastSelectionTime = 0\n\n  view.lastIOSEnter = 0\n  view.lastIOSEnterFallbackTimeout = null\n  view.lastAndroidDelete = 0\n\n  view.composing = false\n  view.composingTimeout = null\n  view.compositionNodes = []\n  view.compositionEndedAt = -2e8\n\n  view.domObserver = new DOMObserver(view, (from, to, typeOver, added) => readDOMChange(view, from, to, typeOver, added))\n  view.domObserver.start()\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0\n\n  view.eventHandlers = Object.create(null)\n  for (let event in handlers) {\n    let handler = handlers[event]\n    view.dom.addEventListener(event, view.eventHandlers[event] = event => {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        handler(view, event)\n    })\n  }\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (browser.safari) view.dom.addEventListener(\"input\", () => null)\n\n  ensureListeners(view)\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin\n  view.lastSelectionTime = Date.now()\n}\n\nexport function destroyInput(view) {\n  view.domObserver.stop()\n  for (let type in view.eventHandlers)\n    view.dom.removeEventListener(type, view.eventHandlers[type])\n  clearTimeout(view.composingTimeout)\n  clearTimeout(view.lastIOSEnterFallbackTimeout)\n}\n\nexport function ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", currentHandlers => {\n    for (let type in currentHandlers) if (!view.eventHandlers[type])\n      view.dom.addEventListener(type, view.eventHandlers[type] = event => runCustomHandler(view, event))\n  })\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", handlers => {\n    let handler = handlers[event.type]\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) return true\n  if (event.defaultPrevented) return false\n  for (let node = event.target; node != view.dom; node = node.parentNode)\n    if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      return false\n  return true\n}\n\nexport function dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    handlers[event.type](view, event)\n}\n\neditHandlers.keydown = (view, event) => {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey\n  if (inOrNearComposition(view, event)) return\n  view.lastKeyCode = event.keyCode\n  view.lastKeyCodeTime = Date.now()\n  // Suppress enter key events on Chrome Android, because those tend\n  // to be part of a confused sequence of composition events fired,\n  // and handling them eagerly tends to corrupt the input.\n  if (browser.android && browser.chrome && event.keyCode == 13) return\n  if (event.keyCode != 229) view.domObserver.forceFlush()\n\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (browser.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    let now = Date.now()\n    view.lastIOSEnter = now\n    view.lastIOSEnterFallbackTimeout = setTimeout(() => {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", f => f(view, keyEvent(13, \"Enter\")))\n        view.lastIOSEnter = 0\n      }\n    }, 200)\n  } else if (view.someProp(\"handleKeyDown\", f => f(view, event)) || captureKeyDown(view, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"key\")\n  }\n}\n\neditHandlers.keyup = (view, e) => {\n  if (e.keyCode == 16) view.shiftKey = false\n}\n\neditHandlers.keypress = (view, event) => {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || browser.mac && event.metaKey) return\n\n  if (view.someProp(\"handleKeyPress\", f => f(view, event))) {\n    event.preventDefault()\n    return\n  }\n\n  let sel = view.state.selection\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    let text = String.fromCharCode(event.charCode)\n    if (!view.someProp(\"handleTextInput\", f => f(view, sel.$from.pos, sel.$to.pos, text)))\n      view.dispatch(view.state.tr.insertText(text).scrollIntoView())\n    event.preventDefault()\n  }\n}\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  let dx = click.x - event.clientX, dy = click.y - event.clientY\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    if (view.someProp(propName, f => i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false)))\n      return true\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) view.focus()\n  let tr = view.state.tr.setSelection(selection)\n  if (origin == \"pointer\") tr.setMeta(\"pointer\", true)\n  view.dispatch(tr)\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) return false\n  let $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\")\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) return false\n  let sel = view.state.selection, selectedNode, selectAt\n  if (sel instanceof NodeSelection) selectedNode = sel.node\n\n  let $pos = view.state.doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        selectAt = $pos.before(sel.$from.depth)\n      else\n        selectAt = $pos.before(i)\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\")\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", f => f(view, pos, event)) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", f => f(view, pos, event))\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", f => f(view, pos, event)) ||\n    defaultTripleClick(view, inside, event)\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) return false\n  let doc = view.state.doc\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\")\n      return true\n    }\n    return false\n  }\n\n  let $pos = doc.resolve(inside)\n  for (let i = $pos.depth + 1; i > 0; i--) {\n    let node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i)\n    let nodePos = $pos.before(i)\n    if (node.inlineContent)\n      updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\")\n    else if (NodeSelection.isSelectable(node))\n      updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\")\n    else\n      continue\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nconst selectNodeModifier = browser.mac ? \"metaKey\" : \"ctrlKey\"\n\nhandlers.mousedown = (view, event) => {\n  view.shiftKey = event.shiftKey\n  let flushed = forceDOMFlush(view)\n  let now = Date.now(), type = \"singleClick\"\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") type = \"doubleClick\"\n    else if (view.lastClick.type == \"doubleClick\") type = \"tripleClick\"\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type}\n\n  let pos = view.posAtCoords(eventCoords(event))\n  if (!pos) return\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) view.mouseDown.done()\n    view.mouseDown = new MouseDown(view, pos, event, flushed)\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault()\n  } else {\n    setSelectionOrigin(view, \"pointer\")\n  }\n}\n\nclass MouseDown {\n  constructor(view, pos, event, flushed) {\n    this.view = view\n    this.startDoc = view.state.doc\n    this.pos = pos\n    this.event = event\n    this.flushed = flushed\n    this.selectNode = event[selectNodeModifier]\n    this.allowDefault = event.shiftKey\n    this.delayedSelectionSync = false\n\n    let targetNode, targetPos\n    if (pos.inside > -1) {\n      targetNode = view.state.doc.nodeAt(pos.inside)\n      targetPos = pos.inside\n    } else {\n      let $pos = view.state.doc.resolve(pos.pos)\n      targetNode = $pos.parent\n      targetPos = $pos.depth ? $pos.before() : 0\n    }\n\n    this.mightDrag = null\n\n    const target = flushed ? null : event.target\n    const targetDesc = target ? view.docView.nearestDesc(target, true) : null\n    this.target = targetDesc ? targetDesc.dom : null\n\n    let {selection} = view.state\n    if (event.button == 0 &&\n        targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n        selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n      this.mightDrag = {node: targetNode,\n                        pos: targetPos,\n                        addAttr: this.target && !this.target.draggable,\n                        setUneditable: this.target && browser.gecko && !this.target.hasAttribute(\"contentEditable\")}\n\n    if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.draggable = true\n      if (this.mightDrag.setUneditable)\n        setTimeout(() => {\n          if (this.view.mouseDown == this) this.target.setAttribute(\"contentEditable\", \"false\")\n        }, 20)\n      this.view.domObserver.start()\n    }\n\n    view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this))\n    view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this))\n    setSelectionOrigin(view, \"pointer\")\n  }\n\n  done() {\n    this.view.root.removeEventListener(\"mouseup\", this.up)\n    this.view.root.removeEventListener(\"mousemove\", this.move)\n    if (this.mightDrag && this.target) {\n      this.view.domObserver.stop()\n      if (this.mightDrag.addAttr) this.target.removeAttribute(\"draggable\")\n      if (this.mightDrag.setUneditable) this.target.removeAttribute(\"contentEditable\")\n      this.view.domObserver.start()\n    }\n    if (this.delayedSelectionSync) setTimeout(() => selectionToDOM(this.view))\n    this.view.mouseDown = null\n  }\n\n  up(event) {\n    this.done()\n\n    if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n      return\n\n    let pos = this.pos\n    if (this.view.state.doc != this.startDoc) pos = this.view.posAtCoords(eventCoords(event))\n\n    if (this.allowDefault || !pos) {\n      setSelectionOrigin(this.view, \"pointer\")\n    } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n      event.preventDefault()\n    } else if (event.button == 0 &&\n               (this.flushed ||\n                // Safari ignores clicks on draggable elements\n                (browser.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n                // Chrome will sometimes treat a node selection as a\n                // cursor, but still report that the node is selected\n                // when asked through getSelection. You'll then get a\n                // situation where clicking at the point where that\n                // (hidden) cursor is doesn't change the selection, and\n                // thus doesn't get a reaction from ProseMirror. This\n                // works around that.\n                (browser.chrome && !(this.view.state.selection instanceof TextSelection) &&\n                 Math.min(Math.abs(pos.pos - this.view.state.selection.from),\n                          Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n      updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\")\n      event.preventDefault()\n    } else {\n      setSelectionOrigin(this.view, \"pointer\")\n    }\n  }\n\n  move(event) {\n    if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                               Math.abs(this.event.y - event.clientY) > 4))\n      this.allowDefault = true\n    setSelectionOrigin(this.view, \"pointer\")\n    if (event.buttons == 0) this.done()\n  }\n}\n\nhandlers.touchdown = view => {\n  forceDOMFlush(view)\n  setSelectionOrigin(view, \"pointer\")\n}\n\nhandlers.contextmenu = view => forceDOMFlush(view)\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) return true\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (browser.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nconst timeoutComposition = browser.android ? 5000 : -1\n\neditHandlers.compositionstart = editHandlers.compositionupdate = view => {\n  if (!view.composing) {\n    view.domObserver.flush()\n    let {state} = view, $pos = state.selection.$from\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(m => m.type.spec.inclusive === false)))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks()\n      endComposition(view, true)\n      view.markCursor = null\n    } else {\n      endComposition(view)\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (browser.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        let sel = view.root.getSelection()\n        for (let node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          let before = offset < 0 ? node.lastChild : node.childNodes[offset - 1]\n          if (!before) break\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length)\n            break\n          } else {\n            node = before\n            offset = -1\n          }\n        }\n      }\n    }\n    view.composing = true\n  }\n  scheduleComposeEnd(view, timeoutComposition)\n}\n\neditHandlers.compositionend = (view, event) => {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = event.timeStamp\n    scheduleComposeEnd(view, 20)\n  }\n}\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout)\n  if (delay > -1) view.composingTimeout = setTimeout(() => endComposition(view), delay)\n}\n\nexport function clearComposition(view) {\n  if (view.composing) {\n    view.composing = false\n    view.compositionEndedAt = timestampFromCustomEvent()\n  }\n  while (view.compositionNodes.length > 0) view.compositionNodes.pop().markParentsDirty()\n}\n\nfunction timestampFromCustomEvent() {\n  let event = document.createEvent(\"Event\")\n  event.initEvent(\"event\", true, true)\n  return event.timeStamp\n}\n\nexport function endComposition(view, forceUpdate) {\n  if (browser.android && view.domObserver.flushingSoon >= 0) return\n  view.domObserver.forceFlush()\n  clearComposition(view)\n  if (forceUpdate || view.docView && view.docView.dirty) {\n    let sel = selectionFromDOM(view)\n    if (sel && !sel.eq(view.state.selection)) view.dispatch(view.state.tr.setSelection(sel))\n    else view.updateState(view.state)\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) return\n  let wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"))\n  wrap.appendChild(dom)\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  let sel = getSelection(), range = document.createRange()\n  range.selectNodeContents(dom)\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur()\n  sel.removeAllRanges()\n  sel.addRange(range)\n  setTimeout(() => {\n    if (wrap.parentNode) wrap.parentNode.removeChild(wrap)\n    view.focus()\n  }, 50)\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n      (browser.ios && browser.webkit_version < 604)\n\nhandlers.copy = editHandlers.cut = (view, e) => {\n  let sel = view.state.selection, cut = e.type == \"cut\"\n  if (sel.empty) return\n\n  // IE and Edge's clipboard interface is completely broken\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  let slice = sel.content(), {dom, text} = serializeForClipboard(view, slice)\n  if (data) {\n    e.preventDefault()\n    data.clearData()\n    data.setData(\"text/html\", dom.innerHTML)\n    data.setData(\"text/plain\", text)\n  } else {\n    captureCopy(view, dom)\n  }\n  if (cut) view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\"))\n}\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) return\n  let plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code\n  let target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"))\n  if (!plainText) target.contentEditable = \"true\"\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\"\n  target.focus()\n  setTimeout(() => {\n    view.focus()\n    if (target.parentNode) target.parentNode.removeChild(target)\n    if (plainText) doPaste(view, target.value, null, e)\n    else doPaste(view, target.textContent, target.innerHTML, e)\n  }, 50)\n}\n\nfunction doPaste(view, text, html, e) {\n  let slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from)\n  if (view.someProp(\"handlePaste\", f => f(view, e, slice || Slice.empty))) return true\n  if (!slice) return false\n\n  let singleNode = sliceSingleNode(slice)\n  let tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice)\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"))\n  return true\n}\n\neditHandlers.paste = (view, e) => {\n  // Handling paste from JavaScript during composition is very poorly\n  // handled by browsers, so as a dodgy but preferable kludge, we just\n  // let the browser do its native thing there, except on Android,\n  // where the editor is almost always composing.\n  if (view.composing && !browser.android) return\n  let data = brokenClipboardAPI ? null : e.clipboardData\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) e.preventDefault()\n  else capturePaste(view, e)\n}\n\nclass Dragging {\n  constructor(slice, move) {\n    this.slice = slice\n    this.move = move\n  }\n}\n\nconst dragCopyModifier = browser.mac ? \"altKey\" : \"ctrlKey\"\n\nhandlers.dragstart = (view, e) => {\n  let mouseDown = view.mouseDown\n  if (mouseDown) mouseDown.done()\n  if (!e.dataTransfer) return\n\n  let sel = view.state.selection\n  let pos = sel.empty ? null : view.posAtCoords(eventCoords(e))\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) {\n    // In selection\n  } else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)))\n  } else if (e.target && e.target.nodeType == 1) {\n    let desc = view.docView.nearestDesc(e.target, true)\n    if (desc && desc.node.type.spec.draggable && desc != view.docView)\n      view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore)))\n  }\n  let slice = view.state.selection.content(), {dom, text} = serializeForClipboard(view, slice)\n  e.dataTransfer.clearData()\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML)\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\"\n  if (!brokenClipboardAPI) e.dataTransfer.setData(\"text/plain\", text)\n  view.dragging = new Dragging(slice, !e[dragCopyModifier])\n}\n\nhandlers.dragend = view => {\n  let dragging = view.dragging\n  window.setTimeout(() => {\n    if (view.dragging == dragging)  view.dragging = null\n  }, 50)\n}\n\neditHandlers.dragover = editHandlers.dragenter = (_, e) => e.preventDefault()\n\neditHandlers.drop = (view, e) => {\n  let dragging = view.dragging\n  view.dragging = null\n\n  if (!e.dataTransfer) return\n\n  let eventPos = view.posAtCoords(eventCoords(e))\n  if (!eventPos) return\n  let $mouse = view.state.doc.resolve(eventPos.pos)\n  if (!$mouse) return\n  let slice = dragging && dragging.slice\n  if (slice) {\n    view.someProp(\"transformPasted\", f => { slice = f(slice) })\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                               brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse)\n  }\n  let move = dragging && !e[dragCopyModifier]\n  if (view.someProp(\"handleDrop\", f => f(view, e, slice || Slice.empty, move))) {\n    e.preventDefault()\n    return\n  }\n  if (!slice) return\n\n  e.preventDefault()\n  let insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos\n  if (insertPos == null) insertPos = $mouse.pos\n\n  let tr = view.state.tr\n  if (move) tr.deleteSelection()\n\n  let pos = tr.mapping.map(insertPos)\n  let isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1\n  let beforeInsert = tr.doc\n  if (isNode)\n    tr.replaceRangeWith(pos, pos, slice.content.firstChild)\n  else\n    tr.replaceRange(pos, pos, slice)\n  if (tr.doc.eq(beforeInsert)) return\n\n  let $pos = tr.doc.resolve(pos)\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos))\n  } else {\n    let end = tr.mapping.map(insertPos)\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach((_from, _to, _newFrom, newTo) => end = newTo)\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)))\n  }\n  view.focus()\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"))\n}\n\nhandlers.focus = view => {\n  if (!view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.add(\"ProseMirror-focused\")\n    view.domObserver.start()\n    view.focused = true\n    setTimeout(() => {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        selectionToDOM(view)\n    }, 20)\n  }\n}\n\nhandlers.blur = (view, e) => {\n  if (view.focused) {\n    view.domObserver.stop()\n    view.dom.classList.remove(\"ProseMirror-focused\")\n    view.domObserver.start()\n    if (e.relatedTarget && view.dom.contains(e.relatedTarget))\n      view.domObserver.currentSelection.set({})\n    view.focused = false\n  }\n}\n\nhandlers.beforeinput = (view, event) => {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (browser.chrome && browser.android && event.inputType == \"deleteContentBackward\") {\n    view.domObserver.flushSoon()\n    let {domChangeCount} = view\n    setTimeout(() => {\n      if (view.domChangeCount != domChangeCount) return // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur()\n      view.focus()\n      if (view.someProp(\"handleKeyDown\", f => f(view, keyEvent(8, \"Backspace\")))) return\n      let {$cursor} = view.state.selection\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView())\n    }, 50)\n  }\n}\n\n// Make sure all handlers get registered\nfor (let prop in editHandlers) handlers[prop] = editHandlers[prop]\n","function compareObjs(a, b) {\n  if (a == b) return true\n  for (let p in a) if (a[p] !== b[p]) return false\n  for (let p in b) if (!(p in a)) return false\n  return true\n}\n\nclass WidgetType {\n  constructor(toDOM, spec) {\n    this.spec = spec || noSpec\n    this.side = this.spec.side || 0\n    this.toDOM = toDOM\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let {pos, deleted} = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1)\n    return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n  }\n\n  valid() { return true }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof WidgetType &&\n       (this.spec.key && this.spec.key == other.spec.key ||\n        this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n  }\n\n  destroy(node) {\n    if (this.spec.destroy) this.spec.destroy(node)\n  }\n}\n\nclass InlineType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset\n    let to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset\n    return from >= to ? null : new Decoration(from, to, this)\n  }\n\n  valid(_, span) { return span.from < span.to }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n\n  static is(span) { return span.type instanceof InlineType }\n}\n\nclass NodeType {\n  constructor(attrs, spec) {\n    this.spec = spec || noSpec\n    this.attrs = attrs\n  }\n\n  map(mapping, span, offset, oldOffset) {\n    let from = mapping.mapResult(span.from + oldOffset, 1)\n    if (from.deleted) return null\n    let to = mapping.mapResult(span.to + oldOffset, -1)\n    if (to.deleted || to.pos <= from.pos) return null\n    return new Decoration(from.pos - offset, to.pos - offset, this)\n  }\n\n  valid(node, span) {\n    let {index, offset} = node.content.findIndex(span.from), child\n    return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to\n  }\n\n  eq(other) {\n    return this == other ||\n      (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n       compareObjs(this.spec, other.spec))\n  }\n}\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nexport class Decoration {\n  constructor(from, to, type) {\n    // :: number\n    // The start position of the decoration.\n    this.from = from\n    // :: number\n    // The end position. Will be the same as `from` for [widget\n    // decorations](#view.Decoration^widget).\n    this.to = to\n    this.type = type\n  }\n\n  copy(from, to) {\n    return new Decoration(from, to, this.type)\n  }\n\n  eq(other, offset = 0) {\n    return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n  }\n\n  map(mapping, offset, oldOffset) {\n    return this.type.map(mapping, this, offset, oldOffset)\n  }\n\n  // :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n  // Creates a widget decoration, which is a DOM node that's shown in\n  // the document at the given position. It is recommended that you\n  // delay rendering the widget by passing a function that will be\n  // called when the widget is actually drawn in a view, but you can\n  // also directly pass a DOM node. `getPos` can be used to find the\n  // widget's current document position.\n  //\n  //   spec::- These options are supported:\n  //\n  //     side:: ?number\n  //     Controls which side of the document position this widget is\n  //     associated with. When negative, it is drawn before a cursor\n  //     at its position, and content inserted at that position ends\n  //     up after the widget. When zero (the default) or positive, the\n  //     widget is drawn after the cursor and content inserted there\n  //     ends up before the widget.\n  //\n  //     When there are multiple widgets at a given position, their\n  //     `side` values determine the order in which they appear. Those\n  //     with lower values appear first. The ordering of widgets with\n  //     the same `side` value is unspecified.\n  //\n  //     When `marks` is null, `side` also determines the marks that\n  //     the widget is wrapped in—those of the node before when\n  //     negative, those of the node after when positive.\n  //\n  //     marks:: ?[Mark]\n  //     The precise set of marks to draw around the widget.\n  //\n  //     stopEvent:: ?(event: dom.Event) → bool\n  //     Can be used to control which DOM events, when they bubble out\n  //     of this widget, the editor view should ignore.\n  //\n  //     ignoreSelection:: ?bool\n  //     When set (defaults to false), selection changes inside the\n  //     widget are ignored, and don't cause ProseMirror to try and\n  //     re-sync the selection with its selection state.\n  //\n  //     key:: ?string\n  //     When comparing decorations of this type (in order to decide\n  //     whether it needs to be redrawn), ProseMirror will by default\n  //     compare the widget DOM node by identity. If you pass a key,\n  //     that key will be compared instead, which can be useful when\n  //     you generate decorations on the fly and don't want to store\n  //     and reuse DOM nodes. Make sure that any widgets with the same\n  //     key are interchangeable—if widgets differ in, for example,\n  //     the behavior of some event handler, they should get\n  //     different keys.\n  //\n  //     destroy:: ?(node: dom.Node)\n  //     Called when the widget decoration is removed as a result of\n  //     mapping\n  static widget(pos, toDOM, spec) {\n    return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates an inline decoration, which adds the given attributes to\n  // each inline node between `from` and `to`.\n  //\n  //   spec::- These options are recognized:\n  //\n  //     inclusiveStart:: ?bool\n  //     Determines how the left side of the decoration is\n  //     [mapped](#transform.Position_Mapping) when content is\n  //     inserted directly at that position. By default, the decoration\n  //     won't include the new content, but you can set this to `true`\n  //     to make it inclusive.\n  //\n  //     inclusiveEnd:: ?bool\n  //     Determines how the right side of the decoration is mapped.\n  //     See\n  //     [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\n  static inline(from, to, attrs, spec) {\n    return new Decoration(from, to, new InlineType(attrs, spec))\n  }\n\n  // :: (number, number, DecorationAttrs, ?Object) → Decoration\n  // Creates a node decoration. `from` and `to` should point precisely\n  // before and after a node in the document. That node, and only that\n  // node, will receive the given attributes.\n  //\n  //   spec::-\n  //\n  //   Optional information to store with the decoration. It\n  //   is also used when comparing decorators for equality.\n  static node(from, to, attrs, spec) {\n    return new Decoration(from, to, new NodeType(attrs, spec))\n  }\n\n  // :: Object\n  // The spec provided when creating this decoration. Can be useful\n  // if you've stored extra information in that object.\n  get spec() { return this.type.spec }\n\n  get inline() { return this.type instanceof InlineType }\n}\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nconst none = [], noSpec = {}\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nexport class DecorationSet {\n  constructor(local, children) {\n    this.local = local && local.length ? local : none\n    this.children = children && children.length ? children : none\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Create a set of decorations, using the structure of the given\n  // document.\n  static create(doc, decorations) {\n    return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n  }\n\n  // :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n  // Find all decorations in this set which touch the given range\n  // (including decorations that start or end directly at the\n  // boundaries) and match the given predicate on their spec. When\n  // `start` and `end` are omitted, all decorations in the set are\n  // considered. When `predicate` isn't given, all decorations are\n  // assumed to match.\n  find(start, end, predicate) {\n    let result = []\n    this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate)\n    return result\n  }\n\n  findInner(start, end, result, offset, predicate) {\n    for (let i = 0; i < this.local.length; i++) {\n      let span = this.local[i]\n      if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n        result.push(span.copy(span.from + offset, span.to + offset))\n    }\n    for (let i = 0; i < this.children.length; i += 3) {\n      if (this.children[i] < end && this.children[i + 1] > start) {\n        let childOff = this.children[i] + 1\n        this.children[i + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate)\n      }\n    }\n  }\n\n  // :: (Mapping, Node, ?Object) → DecorationSet\n  // Map the set of decorations in response to a change in the\n  // document.\n  //\n  //   options::- An optional set of options.\n  //\n  //     onRemove:: ?(decorationSpec: Object)\n  //     When given, this function will be called for each decoration\n  //     that gets dropped as a result of the mapping, passing the\n  //     spec of that decoration.\n  map(mapping, doc, options) {\n    if (this == empty || mapping.maps.length == 0) return this\n    return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n  }\n\n  mapInner(mapping, node, offset, oldOffset, options) {\n    let newLocal\n    for (let i = 0; i < this.local.length; i++) {\n      let mapped = this.local[i].map(mapping, offset, oldOffset)\n      if (mapped && mapped.type.valid(node, mapped)) (newLocal || (newLocal = [])).push(mapped)\n      else if (options.onRemove) options.onRemove(this.local[i].spec)\n    }\n\n    if (this.children.length)\n      return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options)\n    else\n      return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty\n  }\n\n  // :: (Node, [Decoration]) → DecorationSet\n  // Add the given array of decorations to the ones in the set,\n  // producing a new set. Needs access to the current document to\n  // create the appropriate tree structure.\n  add(doc, decorations) {\n    if (!decorations.length) return this\n    if (this == empty) return DecorationSet.create(doc, decorations)\n    return this.addInner(doc, decorations, 0)\n  }\n\n  addInner(doc, decorations, offset) {\n    let children, childIndex = 0\n    doc.forEach((childNode, childOffset) => {\n      let baseOffset = childOffset + offset, found\n      if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) return\n\n      if (!children) children = this.children.slice()\n      while (childIndex < children.length && children[childIndex] < childOffset) childIndex += 3\n      if (children[childIndex] == childOffset)\n        children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1)\n      else\n        children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec))\n      childIndex += 3\n    })\n\n    let local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset)\n    for (let i = 0; i < local.length; i++) if (!local[i].type.valid(doc, local[i])) local.splice(i--, 1)\n\n    return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                             children || this.children)\n  }\n\n  // :: ([Decoration]) → DecorationSet\n  // Create a new set that contains the decorations in this set, minus\n  // the ones in the given array.\n  remove(decorations) {\n    if (decorations.length == 0 || this == empty) return this\n    return this.removeInner(decorations, 0)\n  }\n\n  removeInner(decorations, offset) {\n    let children = this.children, local = this.local\n    for (let i = 0; i < children.length; i += 3) {\n      let found, from = children[i] + offset, to = children[i + 1] + offset\n      for (let j = 0, span; j < decorations.length; j++) if (span = decorations[j]) {\n        if (span.from > from && span.to < to) {\n          decorations[j] = null\n          ;(found || (found = [])).push(span)\n        }\n      }\n      if (!found) continue\n      if (children == this.children) children = this.children.slice()\n      let removed = children[i + 2].removeInner(found, from + 1)\n      if (removed != empty) {\n        children[i + 2] = removed\n      } else {\n        children.splice(i, 3)\n        i -= 3\n      }\n    }\n    if (local.length) for (let i = 0, span; i < decorations.length; i++) if (span = decorations[i]) {\n      for (let j = 0; j < local.length; j++) if (local[j].eq(span, offset)) {\n        if (local == this.local) local = this.local.slice()\n        local.splice(j--, 1)\n      }\n    }\n    if (children == this.children && local == this.local) return this\n    return local.length || children.length ? new DecorationSet(local, children) : empty\n  }\n\n  forChild(offset, node) {\n    if (this == empty) return this\n    if (node.isLeaf) return DecorationSet.empty\n\n    let child, local\n    for (let i = 0; i < this.children.length; i += 3) if (this.children[i] >= offset) {\n      if (this.children[i] == offset) child = this.children[i + 2]\n      break\n    }\n    let start = offset + 1, end = start + node.content.size\n    for (let i = 0; i < this.local.length; i++) {\n      let dec = this.local[i]\n      if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n        let from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start\n        if (from < to) (local || (local = [])).push(dec.copy(from, to))\n      }\n    }\n    if (local) {\n      let localSet = new DecorationSet(local.sort(byPos))\n      return child ? new DecorationGroup([localSet, child]) : localSet\n    }\n    return child || empty\n  }\n\n  eq(other) {\n    if (this == other) return true\n    if (!(other instanceof DecorationSet) ||\n        this.local.length != other.local.length ||\n        this.children.length != other.children.length) return false\n    for (let i = 0; i < this.local.length; i++)\n      if (!this.local[i].eq(other.local[i])) return false\n    for (let i = 0; i < this.children.length; i += 3)\n      if (this.children[i] != other.children[i] ||\n          this.children[i + 1] != other.children[i + 1] ||\n          !this.children[i + 2].eq(other.children[i + 2])) return false\n    return true\n  }\n\n  locals(node) {\n    return removeOverlap(this.localsInner(node))\n  }\n\n  localsInner(node) {\n    if (this == empty) return none\n    if (node.inlineContent || !this.local.some(InlineType.is)) return this.local\n    let result = []\n    for (let i = 0; i < this.local.length; i++) {\n      if (!(this.local[i].type instanceof InlineType))\n        result.push(this.local[i])\n    }\n    return result\n  }\n}\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n//\n//   map:: (Mapping, Node) → DecorationSource\n//   Map the set of decorations in response to a change in the\n//   document.\n\nconst empty = new DecorationSet()\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty\n\nDecorationSet.removeOverlap = removeOverlap\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nclass DecorationGroup {\n  constructor(members) {\n    this.members = members\n  }\n\n  map(mapping, doc) {\n    const mappedDecos = this.members.map(\n      member => member.map(mapping, doc, noSpec)\n    )\n    return DecorationGroup.from(mappedDecos)\n  }\n\n  forChild(offset, child) {\n    if (child.isLeaf) return DecorationSet.empty\n    let found = []\n    for (let i = 0; i < this.members.length; i++) {\n      let result = this.members[i].forChild(offset, child)\n      if (result == empty) continue\n      if (result instanceof DecorationGroup) found = found.concat(result.members)\n      else found.push(result)\n    }\n    return DecorationGroup.from(found)\n  }\n\n  eq(other) {\n    if (!(other instanceof DecorationGroup) ||\n        other.members.length != this.members.length) return false\n    for (let i = 0; i < this.members.length; i++)\n      if (!this.members[i].eq(other.members[i])) return false\n    return true\n  }\n\n  locals(node) {\n    let result, sorted = true\n    for (let i = 0; i < this.members.length; i++) {\n      let locals = this.members[i].localsInner(node)\n      if (!locals.length) continue\n      if (!result) {\n        result = locals\n      } else {\n        if (sorted) {\n          result = result.slice()\n          sorted = false\n        }\n        for (let j = 0; j < locals.length; j++) result.push(locals[j])\n      }\n    }\n    return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n  }\n\n  // : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n  // Create a group for the given array of decoration sets, or return\n  // a single set when possible.\n  static from(members) {\n    switch (members.length) {\n      case 0: return empty\n      case 1: return members[0]\n      default: return new DecorationGroup(members)\n    }\n  }\n}\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  let children = oldChildren.slice()\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  let shift = (oldStart, oldEnd, newStart, newEnd) => {\n    for (let i = 0; i < children.length; i += 3) {\n      let end = children[i + 1], dSize\n      if (end < 0 || oldStart > end + oldOffset) continue\n      let start = children[i] + oldOffset\n      if (oldEnd >= start) {\n        children[i + 1] = oldStart <= start ? -2 : -1\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize\n        children[i + 1] += dSize\n      }\n    }\n  }\n  for (let i = 0; i < mapping.maps.length; i++) mapping.maps[i].forEach(shift)\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  let mustRebuild = false\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) { // Touched nodes\n    if (children[i + 1] == -2) {\n      mustRebuild = true\n      children[i + 1] = -1\n      continue\n    }\n    let from = mapping.map(oldChildren[i] + oldOffset), fromLocal = from - offset\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    let to = mapping.map(oldChildren[i + 1] + oldOffset, -1), toLocal = to - offset\n    let {index, offset: childOffset} = node.content.findIndex(fromLocal)\n    let childNode = node.maybeChild(index)\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      let mapped = children[i + 2].mapInner(mapping, childNode, from + 1, oldChildren[i] + oldOffset + 1, options)\n      if (mapped != empty) {\n        children[i] = fromLocal\n        children[i + 1] = toLocal\n        children[i + 2] = mapped\n      } else {\n        children[i + 1] = -2\n        mustRebuild = true\n      }\n    } else {\n      mustRebuild = true\n    }\n  }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    let decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options)\n    let built = buildTree(decorations, node, 0, options)\n    newLocal = built.local\n    for (let i = 0; i < children.length; i += 3) if (children[i + 1] < 0) {\n      children.splice(i, 3)\n      i -= 3\n    }\n    for (let i = 0, j = 0; i < built.children.length; i += 3) {\n      let from = built.children[i]\n      while (j < children.length && children[j] < from) j += 3\n      children.splice(j, 0, built.children[i], built.children[i + 1], built.children[i + 2])\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) return spans\n  let result = []\n  for (let i = 0; i < spans.length; i++) {\n    let span = spans[i]\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type))\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (let i = 0; i < set.local.length; i++) {\n      let mapped = set.local[i].map(mapping, offset, oldOffset)\n      if (mapped) decorations.push(mapped)\n      else if (options.onRemove) options.onRemove(set.local[i].spec)\n    }\n    for (let i = 0; i < set.children.length; i += 3)\n      gather(set.children[i + 2], set.children[i] + oldOffset + 1)\n  }\n  for (let i = 0; i < children.length; i += 3) if (children[i + 1] == -1)\n    gather(children[i + 2], oldChildren[i] + oldOffset + 1)\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) return null\n  let end = offset + node.nodeSize, found = null\n  for (let i = 0, span; i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n      ;(found || (found = [])).push(span)\n      spans[i] = null\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  let result = []\n  for (let i = 0; i < array.length; i++)\n    if (array[i] != null) result.push(array[i])\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  let children = [], hasNulls = false\n  node.forEach((childNode, localStart) => {\n    let found = takeSpansForNode(spans, childNode, localStart + offset)\n    if (found) {\n      hasNulls = true\n      let subtree = buildTree(found, childNode, offset + localStart + 1, options)\n      if (subtree != empty)\n        children.push(localStart, localStart + childNode.nodeSize, subtree)\n    }\n  })\n  let locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos)\n  for (let i = 0; i < locals.length; i++) if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) options.onRemove(locals[i].spec)\n    locals.splice(i--, 1)\n  }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  let working = spans\n  for (let i = 0; i < working.length - 1; i++) {\n    let span = working[i]\n    if (span.from != span.to) for (let j = i + 1; j < working.length; j++) {\n      let next = working[j]\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) working = spans.slice()\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to)\n          insertAhead(working, j + 1, next.copy(span.to, next.to))\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) working = spans.slice()\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from)\n          insertAhead(working, j, span.copy(next.from, span.to))\n        }\n        break\n      }\n    }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) i++\n  array.splice(i, 0, deco)\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nexport function viewDecorations(view) {\n  let found = []\n  view.someProp(\"decorations\", f => {\n    let result = f(view.state)\n    if (result && result != empty) found.push(result)\n  })\n  if (view.cursorWrapper)\n    found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco]))\n  return DecorationGroup.from(found)\n}\n","import {NodeSelection} from \"prosemirror-state\"\n\nimport {scrollRectIntoView, posAtCoords, coordsAtPos, endOfTextblock, storeScrollPos,\n        resetScrollPos, focusPreventScroll} from \"./domcoords\"\nimport {docViewDesc} from \"./viewdesc\"\nimport {initInput, destroyInput, dispatchEvent, ensureListeners, clearComposition} from \"./input\"\nimport {selectionToDOM, anchorInRightPlace, syncNodeSelection} from \"./selection\"\nimport {Decoration, viewDecorations} from \"./decoration\"\nimport browser from \"./browser\"\n\nexport {Decoration, DecorationSet} from \"./decoration\"\n\n// Exported for testing\nexport {serializeForClipboard as __serializeForClipboard, parseFromClipboard as __parseFromClipboard} from \"./clipboard\"\nexport {endComposition as __endComposition} from \"./input\"\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nexport class EditorView {\n  // :: (?union<dom.Node, (dom.Node), {mount: dom.Node}>, DirectEditorProps)\n  // Create a view. `place` may be a DOM node that the editor should\n  // be appended to, a function that will place it into the document,\n  // or an object whose `mount` property holds the node to use as the\n  // document container. If it is `null`, the editor will not be added\n  // to the document.\n  constructor(place, props) {\n    this._props = props\n    // :: EditorState\n    // The view's current [state](#state.EditorState).\n    this.state = props.state\n\n    this.directPlugins = props.plugins || []\n    this.directPlugins.forEach(checkStateComponent)\n\n    this.dispatch = this.dispatch.bind(this)\n\n    this._root = null\n    this.focused = false\n    // Kludge used to work around a Chrome bug\n    this.trackWrites = null\n\n    // :: dom.Element\n    // An editable DOM node containing the document. (You probably\n    // should not directly interfere with its content.)\n    this.dom = (place && place.mount) || document.createElement(\"div\")\n    if (place) {\n      if (place.appendChild) place.appendChild(this.dom)\n      else if (place.apply) place(this.dom)\n      else if (place.mount) this.mounted = true\n    }\n\n    // :: bool\n    // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n    this.editable = getEditable(this)\n    this.markCursor = null\n    this.cursorWrapper = null\n    updateCursorWrapper(this)\n    this.nodeViews = buildNodeViews(this)\n    this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this)\n\n    this.lastSelectedViewDesc = null\n    // :: ?{slice: Slice, move: bool}\n    // When editor content is being dragged, this object contains\n    // information about the dragged slice and whether it is being\n    // copied or moved. At any other time, it is null.\n    this.dragging = null\n\n    initInput(this)\n\n    this.prevDirectPlugins = []\n    this.pluginViews = []\n    this.updatePluginViews()\n  }\n\n  // composing:: boolean\n  // Holds `true` when a\n  // [composition](https://w3c.github.io/uievents/#events-compositionevents)\n  // is active.\n\n  // :: DirectEditorProps\n  // The view's current [props](#view.EditorProps).\n  get props() {\n    if (this._props.state != this.state) {\n      let prev = this._props\n      this._props = {}\n      for (let name in prev) this._props[name] = prev[name]\n      this._props.state = this.state\n    }\n    return this._props\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view's props. Will immediately cause an update to\n  // the DOM.\n  update(props) {\n    if (props.handleDOMEvents != this._props.handleDOMEvents) ensureListeners(this)\n    this._props = props\n    if (props.plugins) {\n      props.plugins.forEach(checkStateComponent)\n      this.directPlugins = props.plugins\n    }\n    this.updateStateInner(props.state, true)\n  }\n\n  // :: (DirectEditorProps)\n  // Update the view by updating existing props object with the object\n  // given as argument. Equivalent to `view.update(Object.assign({},\n  // view.props, props))`.\n  setProps(props) {\n    let updated = {}\n    for (let name in this._props) updated[name] = this._props[name]\n    updated.state = this.state\n    for (let name in props) updated[name] = props[name]\n    this.update(updated)\n  }\n\n  // :: (EditorState)\n  // Update the editor's `state` prop, without touching any of the\n  // other props.\n  updateState(state) {\n    this.updateStateInner(state, this.state.plugins != state.plugins)\n  }\n\n  updateStateInner(state, reconfigured) {\n    let prev = this.state, redraw = false, updateSel = false\n    // When stored marks are added, stop composition, so that they can\n    // be displayed.\n    if (state.storedMarks && this.composing) {\n      clearComposition(this)\n      updateSel = true\n    }\n    this.state = state\n    if (reconfigured) {\n      let nodeViews = buildNodeViews(this)\n      if (changedNodeViews(nodeViews, this.nodeViews)) {\n        this.nodeViews = nodeViews\n        redraw = true\n      }\n      ensureListeners(this)\n    }\n\n    this.editable = getEditable(this)\n    updateCursorWrapper(this)\n    let innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this)\n\n    let scroll = reconfigured ? \"reset\"\n        : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\"\n    let updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco)\n    if (updateDoc || !state.selection.eq(prev.selection)) updateSel = true\n    let oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this)\n\n    if (updateSel) {\n      this.domObserver.stop()\n      // Work around an issue in Chrome, IE, and Edge where changing\n      // the DOM around an active selection puts it into a broken\n      // state where the thing the user sees differs from the\n      // selection reported by the Selection object (#710, #973,\n      // #1011, #1013, #1035).\n      let forceSelUpdate = updateDoc && (browser.ie || browser.chrome) && !this.composing &&\n          !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection)\n      if (updateDoc) {\n        // If the node that the selection points into is written to,\n        // Chrome sometimes starts misreporting the selection, so this\n        // tracks that and forces a selection reset when our update\n        // did write to the node.\n        let chromeKludge = browser.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null\n        if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n          this.docView.updateOuterDeco([])\n          this.docView.destroy()\n          this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this)\n        }\n        if (chromeKludge && !this.trackWrites) forceSelUpdate = true\n      }\n      // Work around for an issue where an update arriving right between\n      // a DOM selection change and the \"selectionchange\" event for it\n      // can cause a spurious DOM selection update, disrupting mouse\n      // drag selection.\n      if (forceSelUpdate ||\n          !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n        selectionToDOM(this, forceSelUpdate)\n      } else {\n        syncNodeSelection(this, state.selection)\n        this.domObserver.setCurSelection()\n      }\n      this.domObserver.start()\n    }\n\n    this.updatePluginViews(prev)\n\n    if (scroll == \"reset\") {\n      this.dom.scrollTop = 0\n    } else if (scroll == \"to selection\") {\n      let startDOM = this.root.getSelection().focusNode\n      if (this.someProp(\"handleScrollToSelection\", f => f(this)))\n        {} // Handled\n      else if (state.selection instanceof NodeSelection)\n        scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM)\n      else\n        scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM)\n    } else if (oldScrollPos) {\n      resetScrollPos(oldScrollPos)\n    }\n  }\n\n  destroyPluginViews() {\n    let view\n    while (view = this.pluginViews.pop()) if (view.destroy) view.destroy()\n  }\n\n  updatePluginViews(prevState) {\n    if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n      this.prevDirectPlugins = this.directPlugins\n      this.destroyPluginViews()\n      for (let i = 0; i < this.directPlugins.length; i++) {\n        let plugin = this.directPlugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n      for (let i = 0; i < this.state.plugins.length; i++) {\n        let plugin = this.state.plugins[i]\n        if (plugin.spec.view) this.pluginViews.push(plugin.spec.view(this))\n      }\n    } else {\n      for (let i = 0; i < this.pluginViews.length; i++) {\n        let pluginView = this.pluginViews[i]\n        if (pluginView.update) pluginView.update(this, prevState)\n      }\n    }\n  }\n\n  // :: (string, ?(prop: *) → *) → *\n  // Goes over the values of a prop, first those provided directly,\n  // then those from plugins given to the view, then from plugins in\n  // the state (in order), and calls `f` every time a non-undefined\n  // value is found. When `f` returns a truthy value, that is\n  // immediately returned. When `f` isn't provided, it is treated as\n  // the identity function (the prop value is returned directly).\n  someProp(propName, f) {\n    let prop = this._props && this._props[propName], value\n    if (prop != null && (value = f ? f(prop) : prop)) return value\n    for (let i = 0; i < this.directPlugins.length; i++) {\n      let prop = this.directPlugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n    let plugins = this.state.plugins\n    if (plugins) for (let i = 0; i < plugins.length; i++) {\n      let prop = plugins[i].props[propName]\n      if (prop != null && (value = f ? f(prop) : prop)) return value\n    }\n  }\n\n  // :: () → bool\n  // Query whether the view has focus.\n  hasFocus() {\n    return this.root.activeElement == this.dom\n  }\n\n  // :: ()\n  // Focus the editor.\n  focus() {\n    this.domObserver.stop()\n    if (this.editable) focusPreventScroll(this.dom)\n    selectionToDOM(this)\n    this.domObserver.start()\n  }\n\n  // :: union<dom.Document, dom.DocumentFragment>\n  // Get the document root in which the editor exists. This will\n  // usually be the top-level `document`, but might be a [shadow\n  // DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n  // root if the editor is inside one.\n  get root() {\n    let cached = this._root\n    if (cached == null) for (let search = this.dom.parentNode; search; search = search.parentNode) {\n      if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n        if (!search.getSelection) Object.getPrototypeOf(search).getSelection = () => document.getSelection()\n        return this._root = search\n      }\n    }\n    return cached || document\n  }\n\n  // :: ({left: number, top: number}) → ?{pos: number, inside: number}\n  // Given a pair of viewport coordinates, return the document\n  // position that corresponds to them. May return null if the given\n  // coordinates aren't inside of the editor. When an object is\n  // returned, its `pos` property is the position nearest to the\n  // coordinates, and its `inside` property holds the position of the\n  // inner node that the position falls inside of, or -1 if it is at\n  // the top level, not in any node.\n  posAtCoords(coords) {\n    return posAtCoords(this, coords)\n  }\n\n  // :: (number, number) → {left: number, right: number, top: number, bottom: number}\n  // Returns the viewport rectangle at a given document position.\n  // `left` and `right` will be the same number, as this returns a\n  // flat cursor-ish rectangle. If the position is between two things\n  // that aren't directly adjacent, `side` determines which element is\n  // used. When < 0, the element before the position is used,\n  // otherwise the element after.\n  coordsAtPos(pos, side = 1) {\n    return coordsAtPos(this, pos, side)\n  }\n\n  // :: (number, number) → {node: dom.Node, offset: number}\n  // Find the DOM position that corresponds to the given document\n  // position. When `side` is negative, find the position as close as\n  // possible to the content before the position. When positive,\n  // prefer positions close to the content after the position. When\n  // zero, prefer as shallow a position as possible.\n  //\n  // Note that you should **not** mutate the editor's internal DOM,\n  // only inspect it (and even that is usually not necessary).\n  domAtPos(pos, side = 0) {\n    return this.docView.domFromPos(pos, side)\n  }\n\n  // :: (number) → ?dom.Node\n  // Find the DOM node that represents the document node after the\n  // given position. May return `null` when the position doesn't point\n  // in front of a node or if the node is inside an opaque node view.\n  //\n  // This is intended to be able to call things like\n  // `getBoundingClientRect` on that DOM node. Do **not** mutate the\n  // editor DOM directly, or add styling this way, since that will be\n  // immediately overriden by the editor as it redraws the node.\n  nodeDOM(pos) {\n    let desc = this.docView.descAt(pos)\n    return desc ? desc.nodeDOM : null\n  }\n\n  // :: (dom.Node, number, ?number) → number\n  // Find the document position that corresponds to a given DOM\n  // position. (Whenever possible, it is preferable to inspect the\n  // document structure directly, rather than poking around in the\n  // DOM, but sometimes—for example when interpreting an event\n  // target—you don't have a choice.)\n  //\n  // The `bias` parameter can be used to influence which side of a DOM\n  // node to use when the position is inside a leaf node.\n  posAtDOM(node, offset, bias = -1) {\n    let pos = this.docView.posFromDOM(node, offset, bias)\n    if (pos == null) throw new RangeError(\"DOM position not inside the editor\")\n    return pos\n  }\n\n  // :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n  // Find out whether the selection is at the end of a textblock when\n  // moving in a given direction. When, for example, given `\"left\"`,\n  // it will return true if moving left from the current cursor\n  // position would leave that position's parent textblock. Will apply\n  // to the view's current state by default, but it is possible to\n  // pass a different state.\n  endOfTextblock(dir, state) {\n    return endOfTextblock(this, state || this.state, dir)\n  }\n\n  // :: ()\n  // Removes the editor from the DOM and destroys all [node\n  // views](#view.NodeView).\n  destroy() {\n    if (!this.docView) return\n    destroyInput(this)\n    this.destroyPluginViews()\n    if (this.mounted) {\n      this.docView.update(this.state.doc, [], viewDecorations(this), this)\n      this.dom.textContent = \"\"\n    } else if (this.dom.parentNode) {\n      this.dom.parentNode.removeChild(this.dom)\n    }\n    this.docView.destroy()\n    this.docView = null\n  }\n\n  // :: boolean\n  // This is true when the view has been\n  // [destroyed](#view.EditorView.destroy) (and thus should not be\n  // used anymore).\n  get isDestroyed() {\n    return this.docView == null\n  }\n\n  // Used for testing.\n  dispatchEvent(event) {\n    return dispatchEvent(this, event)\n  }\n\n  // :: (Transaction)\n  // Dispatch a transaction. Will call\n  // [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n  // when given, and otherwise defaults to applying the transaction to\n  // the current state and calling\n  // [`updateState`](#view.EditorView.updateState) with the result.\n  // This method is bound to the view instance, so that it can be\n  // easily passed around.\n  dispatch(tr) {\n    let dispatchTransaction = this._props.dispatchTransaction\n    if (dispatchTransaction) dispatchTransaction.call(this, tr)\n    else this.updateState(this.state.apply(tr))\n  }\n}\n\nfunction computeDocDeco(view) {\n  let attrs = Object.create(null)\n  attrs.class = \"ProseMirror\"\n  attrs.contenteditable = String(view.editable)\n  attrs.translate = \"no\"\n\n  view.someProp(\"attributes\", value => {\n    if (typeof value == \"function\") value = value(view.state)\n    if (value) for (let attr in value) {\n      if (attr == \"class\")\n        attrs.class += \" \" + value[attr]\n      if (attr == \"style\") {\n        attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr]\n      }\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        attrs[attr] = String(value[attr])\n    }\n  })\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    let dom = document.createElement(\"img\")\n    dom.className = \"ProseMirror-separator\"\n    dom.setAttribute(\"mark-placeholder\", \"true\")\n    dom.setAttribute(\"alt\", \"\")\n    view.cursorWrapper = {dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})}\n  } else {\n    view.cursorWrapper = null\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", value => value(view.state) === false)\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  let depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head))\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  let result = {}\n  view.someProp(\"nodeViews\", obj => {\n    for (let prop in obj) if (!Object.prototype.hasOwnProperty.call(result, prop))\n      result[prop] = obj[prop]\n  })\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  let nA = 0, nB = 0\n  for (let prop in a) {\n    if (a[prop] != b[prop]) return true\n    nA++\n  }\n  for (let _ in b) nB++\n  return nA != nB\n}\n\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n    throw new RangeError(\"Plugins passed directly to the view must not have a state component\")\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used. This object will only have its\n//   [`serializeFragment`](#model.DOMSerializer.serializeFragment)\n//   method called, and you may provide an alternative object type\n//   implementing a compatible method.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports some\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   plugins:: [Plugin]\n//   A set of plugins to use in the view, applying their [plugin\n//   view](#state.PluginSpec.view) and\n//   [props](#state.PluginSpec.props). Passing plugins with a state\n//   component (a [state field](#state.PluginSpec.state) field or a\n//   [transaction](#state.PluginSpec.filterTransaction) filter or\n//   appender) will result in an error, since such plugins must be\n//   present in the state to work.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/* Copyright 2021, Milkdown by Mirone. */\nimport { stackOverFlow } from '@milkdown/exception';\n\ntype ElInstance<U> = {\n    push: (node: U, ...rest: U[]) => void;\n};\n\ntype StackCtx<T extends ElInstance<U>, U> = {\n    readonly elements: T[];\n};\n\nexport const getStackUtil = <Node, El extends ElInstance<Node>, Ctx extends StackCtx<El, Node>>() => {\n    const size = (ctx: Ctx): number => ctx.elements.length;\n\n    const top = (ctx: Ctx): El | undefined => ctx.elements[size(ctx) - 1];\n\n    const push =\n        (ctx: Ctx) =>\n        (node: Node): void => {\n            top(ctx)?.push(node);\n        };\n\n    const open =\n        (ctx: Ctx) =>\n        (node: El): void => {\n            ctx.elements.push(node);\n        };\n\n    const close = (ctx: Ctx): El => {\n        const el = ctx.elements.pop();\n        if (!el) throw stackOverFlow();\n\n        return el;\n    };\n\n    return {\n        size,\n        top,\n        push,\n        open,\n        close,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Node, NodeType } from '@milkdown/prose';\n\nimport type { Attrs } from './types';\n\nexport type StackElement = {\n    type: NodeType;\n    content: Node[];\n    attrs?: Attrs;\n    push: (node: Node, ...rest: Node[]) => void;\n    pop: () => Node | undefined;\n};\n\nconst pushElement = (element: StackElement, node: Node, ...rest: Node[]) => {\n    element.content.push(node, ...rest);\n};\n\nconst popElement = (element: StackElement): Node | undefined => element.content.pop();\n\nexport const createElement = (type: NodeType, content: Node[], attrs?: Attrs): StackElement => {\n    const element: StackElement = {\n        type,\n        content,\n        attrs,\n        push: (...args) => pushElement(element, ...args),\n        pop: () => popElement(element),\n    };\n    return element;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNodeInParserFail, stackOverFlow } from '@milkdown/exception';\nimport { Mark, MarkType, Node, NodeType, Schema } from '@milkdown/prose';\n\nimport { getStackUtil } from '../utility';\nimport { createElement, StackElement } from './stack-element';\nimport type { Attrs } from './types';\n\ntype Ctx = {\n    marks: Mark[];\n    readonly schema: Schema;\n    readonly elements: StackElement[];\n};\n\nconst { size, push, top, open, close } = getStackUtil<Node, StackElement, Ctx>();\n\nconst hasText = (node: Node): node is Node & { text: string } => node.isText;\n\nconst maybeMerge = (schema: Schema, a: Node, b: Node): Node | undefined => {\n    if (hasText(a) && hasText(b) && Mark.sameSet(a.marks, b.marks)) {\n        return schema.text(a.text + b.text, a.marks);\n    }\n    return;\n};\n\nconst openNode = (ctx: Ctx) => (nodeType: NodeType, attrs?: Attrs) => open(ctx)(createElement(nodeType, [], attrs));\n\nconst addNode =\n    (ctx: Ctx) =>\n    (nodeType: NodeType, attrs?: Attrs, content?: Node[]): Node => {\n        const node = nodeType.createAndFill(attrs, content, ctx.marks);\n\n        if (!node) throw createNodeInParserFail(nodeType, attrs, content);\n\n        push(ctx)(node);\n\n        return node;\n    };\n\nconst closeNode = (ctx: Ctx) => (): Node => {\n    ctx.marks = Mark.none;\n    const element = close(ctx);\n\n    return addNode(ctx)(element.type, element.attrs, element.content);\n};\n\nconst openMark =\n    (ctx: Ctx) =>\n    (markType: MarkType, attrs?: Attrs): void => {\n        const mark = markType.create(attrs);\n\n        ctx.marks = mark.addToSet(ctx.marks);\n    };\n\nconst closeMark =\n    (ctx: Ctx) =>\n    (markType: MarkType): void => {\n        ctx.marks = markType.removeFromSet(ctx.marks);\n    };\n\nconst addText =\n    (ctx: Ctx) =>\n    (text: string): void => {\n        const topElement = top(ctx);\n        if (!topElement) throw stackOverFlow();\n\n        const prevNode = topElement.pop();\n        const currNode = ctx.schema.text(text, ctx.marks);\n\n        if (!prevNode) {\n            topElement.push(currNode);\n            return;\n        }\n\n        const merged = maybeMerge(ctx.schema, prevNode, currNode);\n        if (merged) {\n            topElement.push(merged);\n            return;\n        }\n        topElement.push(prevNode, currNode);\n    };\n\nconst build = (ctx: Ctx) => () => {\n    let doc: Node | null = null;\n    do {\n        doc = closeNode(ctx)();\n    } while (size(ctx));\n\n    return doc;\n};\n\nexport const createStack = (schema: Schema) => {\n    const ctx: Ctx = {\n        marks: [],\n        elements: [],\n        schema,\n    };\n\n    return {\n        build: build(ctx),\n        openMark: openMark(ctx),\n        closeMark: closeMark(ctx),\n        addText: addText(ctx),\n        openNode: openNode(ctx),\n        addNode: addNode(ctx),\n        closeNode: closeNode(ctx),\n    };\n};\n\nexport type Stack = ReturnType<typeof createStack>;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { parserMatchError } from '@milkdown/exception';\nimport type { MarkType, NodeType, Schema } from '@milkdown/prose';\n\nimport { RemarkParser } from '../utility';\nimport type { Stack } from './stack';\nimport type { Attrs, InnerParserSpecMap, MarkdownNode, ParserSpecWithType } from './types';\n\ntype PS<T extends keyof Stack> = Parameters<Stack[T]>;\n\n/**\n * State for parser.\n * Transform remark AST into prosemirror state.\n */\nexport class State {\n    constructor(\n        private readonly stack: Stack,\n        public readonly schema: Schema,\n        private readonly specMap: InnerParserSpecMap,\n    ) {}\n\n    #matchTarget(node: MarkdownNode): ParserSpecWithType {\n        const result = Object.values(this.specMap).find((x) => x.match(node));\n\n        if (!result) throw parserMatchError(node);\n\n        return result;\n    }\n\n    #runNode(node: MarkdownNode) {\n        const { key, runner, is } = this.#matchTarget(node);\n\n        const proseType: NodeType | MarkType = this.schema[is === 'node' ? 'nodes' : 'marks'][key] as\n            | NodeType\n            | MarkType;\n\n        runner(this, node, proseType as NodeType & MarkType);\n    }\n\n    /**\n     * Transform a markdown string into prosemirror state.\n     *\n     * @param remark - The remark parser used.\n     * @param markdown - The markdown string needs to be parsed.\n     * @returns The state instance.\n     */\n    run = (remark: RemarkParser, markdown: string) => {\n        const tree = remark.runSync(remark.parse(markdown)) as MarkdownNode;\n        this.next(tree);\n\n        return this;\n    };\n\n    /**\n     * Give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n     *\n     * @param nodes - The node or node list needs to be handled.\n     *\n     * @returns The state instance.\n     */\n    next = (nodes: MarkdownNode | MarkdownNode[] = []) => {\n        [nodes].flat().forEach((node) => this.#runNode(node));\n        return this;\n    };\n\n    /**\n     * Parse current remark AST into prosemirror state.\n     *\n     * @returns Result prosemirror doc.\n     */\n    toDoc = () => this.stack.build();\n\n    /**\n     * Inject root node for prosemirror state.\n     *\n     * @param node - The target markdown node.\n     * @param nodeType - The root prosemirror nodeType .\n     * @param attrs - The attribute of root type.\n     * @returns The state instance.\n     */\n    injectRoot = (node: MarkdownNode, nodeType: NodeType, attrs?: Attrs) => {\n        this.stack.openNode(nodeType, attrs);\n        this.next(node.children);\n\n        return this;\n    };\n\n    /**\n     * Add a text type prosemirror node.\n     *\n     * @param text - Text string.\n     * @returns The state instance.\n     */\n    addText = (text = '') => {\n        this.stack.addText(text);\n        return this;\n    };\n\n    /**\n     * Add a node without open or close it.\n     *\n     * @remarks\n     * It's useful for nodes which don't have content.\n     *\n     * @param nodeType - Node type of this node.\n     * @param attrs - Attributes of this node.\n     * @param content - Content of this node.\n     *\n     * @returns The added node.\n     */\n    addNode = (...args: PS<'addNode'>) => {\n        this.stack.addNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n     *\n     * @remarks\n     * You can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param nodeType - Node type of this node.\n     * @param attrs - Attributes of this node.\n     *\n     * @returns\n     */\n    openNode = (...args: PS<'openNode'>) => {\n        this.stack.openNode(...args);\n        return this;\n    };\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode = (...args: PS<'closeNode'>) => {\n        this.stack.closeNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a mark, and all marks created after this method will be set as the children of the mark until a `closeMark` been called.\n     *\n     * @remarks\n     * You can imagine `openMark` as the left half of parenthesis and `closeMark` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param markType - Mark type of this mark.\n     * @param attrs - Attributes of this mark.\n     *\n     * @returns\n     */\n    openMark = (...args: PS<'openMark'>) => {\n        this.stack.openMark(...args);\n        return this;\n    };\n\n    /**\n     * Close target mark.\n     *\n     * @param markType - Mark type of this mark.\n     *\n     * @returns The mark closed.\n     */\n    closeMark = (...args: PS<'closeMark'>) => {\n        this.stack.closeMark(...args);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Schema } from '@milkdown/prose';\n\nimport type { RemarkParser } from '../utility';\nimport { createStack } from './stack';\nimport { State } from './state';\nimport type { InnerParserSpecMap } from './types';\n\nexport const createParser = (schema: Schema, specMap: InnerParserSpecMap, remark: RemarkParser) => (text: string) => {\n    const state = new State(createStack(schema), schema, specMap);\n    state.run(remark, text);\n    return state.toDoc();\n};\n\nexport * from './types';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { MarkdownNode } from '..';\nimport type { JSONRecord } from '../utility';\n\nexport type StackElement = {\n    type: string;\n    value?: string;\n    props: JSONRecord;\n    children?: MarkdownNode[];\n    push: (node: MarkdownNode, ...rest: MarkdownNode[]) => void;\n    pop: () => MarkdownNode | undefined;\n};\n\nconst pushElement = (element: StackElement, node: MarkdownNode, ...rest: MarkdownNode[]) => {\n    if (!element.children) {\n        element.children = [];\n    }\n    element.children.push(node, ...rest);\n};\n\nconst popElement = (element: StackElement): MarkdownNode | undefined => element.children?.pop();\n\nexport const createElement = (\n    type: string,\n    children?: MarkdownNode[],\n    value?: string,\n    props: JSONRecord = {},\n): StackElement => {\n    const element: StackElement = {\n        type,\n        children,\n        props,\n        value,\n        push: (...args) => pushElement(element, ...args),\n        pop: () => popElement(element),\n    };\n    return element;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Mark } from '@milkdown/prose';\nimport { Root } from 'mdast';\n\nimport type { MarkdownNode } from '..';\nimport { getStackUtil, JSONRecord } from '../utility';\nimport { createElement, StackElement } from './stack-element';\n\ntype Ctx = {\n    marks: Mark[];\n    readonly elements: StackElement[];\n};\n\nconst { size, push, open, close } = getStackUtil<MarkdownNode, StackElement, Ctx>();\n\nconst maybeMergeChildren = (element: MarkdownNode) => {\n    const { children } = element;\n    if (!children) return element;\n\n    element.children = children.reduce((nextChildren, child, index) => {\n        if (index === 0) {\n            return [child];\n        }\n        const last = nextChildren[nextChildren.length - 1];\n        if (last && child['isMark'] && child.type === last.type) {\n            const { children: currChildren, ...currRest } = child;\n            const { children: prevChildren, ...prevRest } = last;\n            if (currChildren && prevChildren && JSON.stringify(currRest) === JSON.stringify(prevRest)) {\n                const next = {\n                    ...prevRest,\n                    children: [...prevChildren, ...currChildren],\n                };\n                return nextChildren.slice(0, -1).concat(maybeMergeChildren(next));\n            }\n        }\n        return nextChildren.concat(child);\n    }, [] as MarkdownNode[]);\n\n    return element;\n};\n\nconst createMarkdownNode = (element: StackElement) => {\n    const node: MarkdownNode = {\n        ...element.props,\n        type: element.type,\n    };\n\n    if (element.children) {\n        node.children = element.children;\n    }\n\n    if (element.value) {\n        node['value'] = element.value;\n    }\n\n    return node;\n};\n\nconst openNode =\n    (ctx: Ctx) =>\n    (type: string, value?: string, props?: JSONRecord): void =>\n        open(ctx)(createElement(type, [], value, props));\n\nconst addNode =\n    (ctx: Ctx) =>\n    (type: string, children?: MarkdownNode[], value?: string, props?: JSONRecord): MarkdownNode => {\n        const element = createElement(type, children, value, props);\n        const node: MarkdownNode = maybeMergeChildren(createMarkdownNode(element));\n\n        push(ctx)(node);\n\n        return node;\n    };\n\nconst closeNode = (ctx: Ctx) => (): MarkdownNode => {\n    const element = close(ctx);\n\n    return addNode(ctx)(element.type, element.children, element.value, element.props);\n};\n\nconst openMark =\n    (ctx: Ctx) =>\n    (mark: Mark, type: string, value?: string, props?: JSONRecord): void => {\n        const isIn = mark.isInSet(ctx.marks);\n\n        if (isIn) {\n            return;\n        }\n        ctx.marks = mark.addToSet(ctx.marks);\n        openNode(ctx)(type, value, { ...props, isMark: true });\n    };\n\nconst closeMark =\n    (ctx: Ctx) =>\n    (mark: Mark): MarkdownNode | null => {\n        if (!mark.isInSet(ctx.marks)) return null;\n        ctx.marks = mark.type.removeFromSet(ctx.marks);\n        return closeNode(ctx)();\n    };\n\nconst build = (ctx: Ctx) => () => {\n    let doc: Root | null = null;\n    do {\n        doc = closeNode(ctx)() as Root;\n    } while (size(ctx));\n\n    return doc;\n};\n\nexport type Stack = {\n    /**\n     * Build the remark AST tree with current stack.\n     *\n     * @returns A remark AST tree.\n     */\n    build: () => Root;\n\n    /**\n     * Open a mark.\n     *\n     * @param mark - The mark need to be opened.\n     * @param type - Type of this mark.\n     * @param value - Value of this mark.\n     * @param props - Additional props of this mark.\n     *\n     * @returns\n     */\n    openMark: (mark: Mark, type: string, value?: string, props?: JSONRecord) => void;\n\n    /**\n     * Close current mark.\n     * @param mark - The prosemirror mark of target mark to be closed.\n     *\n     * @returns The mark closed, will be null if not exists.\n     */\n    closeMark: (mark: Mark) => MarkdownNode | null;\n\n    /**\n     * Open a node.\n     *\n     * @param type - Type of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns\n     */\n    openNode: (type: string, value?: string, props?: JSONRecord) => void;\n\n    /**\n     * Add a node in current position.\n     *\n     * @param type - Type of this node.\n     * @param children - Children of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The added node.\n     */\n    addNode: (type: string, children?: MarkdownNode[], value?: string, props?: JSONRecord) => MarkdownNode;\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode: () => MarkdownNode;\n};\n\nexport const createStack = (): Stack => {\n    const ctx: Ctx = {\n        marks: [],\n        elements: [],\n    };\n\n    return {\n        build: build(ctx),\n        openMark: openMark(ctx),\n        closeMark: closeMark(ctx),\n        openNode: openNode(ctx),\n        addNode: addNode(ctx),\n        closeNode: closeNode(ctx),\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { serializerMatchError } from '@milkdown/exception';\nimport type { Fragment, Mark as ProseMark, Node as ProseNode, Schema } from '@milkdown/prose';\n\nimport { RemarkParser } from '../utility';\nimport type { Stack } from './stack';\nimport type { InnerSerializerSpecMap, MarkSerializerSpec, NodeSerializerSpec } from './types';\n\nconst isFragment = (x: ProseNode | Fragment): x is Fragment => Object.prototype.hasOwnProperty.call(x, 'size');\n\ntype StateMethod<T extends keyof Stack> = (...args: Parameters<Stack[T]>) => State;\n\n/**\n * State for serializer.\n * Transform prosemirror state into remark AST.\n */\nexport class State {\n    constructor(\n        private readonly stack: Stack,\n        public readonly schema: Schema,\n        private readonly specMap: InnerSerializerSpecMap,\n    ) {}\n\n    #matchTarget<T extends ProseMark | ProseNode>(\n        node: T,\n    ): (T extends ProseNode ? NodeSerializerSpec : MarkSerializerSpec) & { key: string } {\n        const result = Object.entries(this.specMap)\n            .map(([key, spec]) => ({\n                key,\n                ...spec,\n            }))\n            .find((x) => x.match(node as ProseMark & ProseNode));\n\n        if (!result) throw serializerMatchError(node.type);\n\n        return result as never;\n    }\n\n    #runProseNode(node: ProseNode) {\n        const { runner } = this.#matchTarget(node);\n        runner(this, node);\n    }\n\n    #runProseMark(mark: ProseMark, node: ProseNode) {\n        const { runner } = this.#matchTarget(mark);\n        return runner(this, mark, node);\n    }\n\n    #runNode(node: ProseNode) {\n        const { marks } = node;\n        const getPriority = (x: ProseMark) => x.type.spec['priority'] ?? 50;\n        const tmp = [...marks].sort((a, b) => getPriority(a) - getPriority(b));\n        const unPreventNext = tmp.every((mark) => !this.#runProseMark(mark, node));\n        if (unPreventNext) {\n            this.#runProseNode(node);\n        }\n        marks.forEach((mark) => this.stack.closeMark(mark));\n    }\n\n    /**\n     * Transform a prosemirror node tree into remark AST.\n     *\n     * @param tree - The prosemirror node tree needs to be transformed.\n     *\n     * @returns The state instance.\n     */\n    run(tree: ProseNode) {\n        this.next(tree);\n\n        return this;\n    }\n\n    /**\n     * Use a remark parser to serialize current AST stored.\n     *\n     * @param remark - The remark parser needs to used.\n     * @returns Result markdown string.\n     */\n    toString = (remark: RemarkParser): string => remark.stringify(this.stack.build()) as string;\n\n    /**\n     * Give the node or node list back to the state and the state will find a proper runner (by `match` method) to handle it.\n     *\n     * @param nodes - The node or node list needs to be handled.\n     *\n     * @returns The state instance.\n     */\n    next = (nodes: ProseNode | Fragment) => {\n        if (isFragment(nodes)) {\n            nodes.forEach((node) => {\n                this.#runNode(node);\n            });\n            return this;\n        }\n        this.#runNode(nodes);\n        return this;\n    };\n\n    /**\n     * Add a node without open or close it.\n     *\n     * @remarks\n     * It's useful for nodes which don't have content.\n     *\n     * @param type - Type of this node.\n     * @param children - Children of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The added node.\n     */\n    addNode: StateMethod<'addNode'> = (...args) => {\n        this.stack.addNode(...args);\n        return this;\n    };\n\n    /**\n     * Open a node, and all nodes created after this method will be set as the children of the node until a `closeNode` been called.\n     *\n     * @remarks\n     * You can imagine `openNode` as the left half of parenthesis and `closeNode` as the right half. For nodes have children, your runner should just take care of the node itself and let other runners to handle the children.\n     *\n     * @param type - Type of this node.\n     * @param value - Value of this node.\n     * @param props - Additional props of this node.\n     *\n     * @returns The state instance.\n     */\n    openNode: StateMethod<'openNode'> = (...args) => {\n        this.stack.openNode(...args);\n        return this;\n    };\n\n    /**\n     * Close current node.\n     *\n     * @returns The node closed.\n     */\n    closeNode: StateMethod<'closeNode'> = (...args) => {\n        this.stack.closeNode(...args);\n        return this;\n    };\n\n    /**\n     * Used when current node has marks, the serializer will auto combine marks nearby.\n     *\n     * @param mark - The mark need to be opened.\n     * @param type - Type of this mark.\n     * @param value - Value of this mark.\n     * @param props - Additional props of this mark.\n     *\n     * @returns The state instance.\n     */\n    withMark: StateMethod<'openMark'> = (...args) => {\n        this.stack.openMark(...args);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node, Schema } from '@milkdown/prose';\n\nimport { RemarkParser } from '../utility';\nimport { createStack } from './stack';\nimport { State } from './state';\nimport type { InnerSerializerSpecMap } from './types';\n\nexport const createSerializer =\n    (schema: Schema, specMap: InnerSerializerSpecMap, remark: RemarkParser) => (content: Node) => {\n        const state = new State(createStack(), schema, specMap);\n        state.run(content);\n        return state.toString(remark);\n    };\n\nexport * from './types';\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('..').VFileData} VFileData\n * @typedef {import('..').VFileValue} VFileValue\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {VFileValue|VFileOptions|VFile|URL} VFileCompatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {VFileValue} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {VFileData} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} VFileOptions\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} VFileReporterSettings\n * @typedef {<T = VFileReporterSettings>(files: Array<VFile>, options: T) => string} VFileReporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, treats it as `{value: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All other given fields are set on the newly created `VFile`.\n   *\n   * Path related properties are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {VFileCompatible} [value]\n   */\n  constructor(value) {\n    /** @type {VFileOptions} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information.\n     * It’s OK to store custom data directly on the file, moving it to `data`\n     * gives a little more privacy.\n     * @type {VFileData}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of file paths the file moved between.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path`.\n     * Defaults to `process.cwd()` (`/` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {VFileValue}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `RawSourceMap` type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Access full path (`~/index.min.js`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set full path (`~/index.min.js`).\n   * Cannot be nullified.\n   *\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Access parent path (`~`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set parent path (`~`).\n   * Cannot be set if there's no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Access basename (including extname) (`index.min.js`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (`index.min.js`).\n   * Cannot contain path separators.\n   * Cannot be nullified either (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Access extname (including dot) (`.js`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set extname (including dot) (`.js`).\n   * Cannot be set if there's no `path` yet and cannot contain path separators.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Access stem (w/o extname) (`index.min`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set stem (w/o extname) (`index.min`).\n   * Cannot be nullified, and cannot contain path separators.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8'] If `file.value` is a buffer, `encoding` is used to serialize buffers.\n   * @returns {string}\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Create a message and associates it w/ the file.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Info: create a message, associate it with the file, and mark the fatality\n   * as `null`.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {VFileMessage}\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Fail: create a message, associate it with the file, mark the fatality as\n   * `true`.\n   * Note: fatal errors mean a file is no longer processable.\n   * Calls `message()` internally.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   * @returns {never}\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.29/#html-blocks>.\n *\n * Note that `textarea` is not available in `CommonMark@0.29` but has been\n * merged to the primary branch and is slated to be released in the next release\n * of CommonMark.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n */\n\n/**\n * @param {Context} base\n * @param {Options} extension\n * @returns {Context}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {string} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Blockquote} node\n */\nexport function blockquote(node, _, context, safeOptions) {\n  const exit = context.enter('blockquote')\n  const tracker = track(safeOptions)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').Break} Break\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @type {Handle}\n * @param {Break} _\n */\nexport function hardBreak(_, _1, context, safe) {\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Context} Context\n */\n\n/**\n * @param {Code} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, context) {\n  return Boolean(\n    !context.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../util/indent-lines.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Code} node\n */\nexport function code(node, _, context, safeOptions) {\n  const marker = checkFence(context)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, context)) {\n    const exit = context.enter('codeIndented')\n    const value = indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = track(safeOptions)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = context.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = context.enter('codeFencedLang' + suffix)\n    value += tracker.move(\n      safe(context, node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = context.enter('codeFencedMeta' + suffix)\n    value += tracker.move(' ')\n    value += tracker.move(\n      safe(context, node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['quote'], undefined>}\n */\nexport function checkQuote(context) {\n  const marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Emphasis} node\n */\nexport function emphasis(node, _, context, safeOptions) {\n  const marker = checkEmphasis(context)\n  const exit = context.enter('emphasis')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Emphasis} _\n */\nfunction emphasisPeek(_, _1, context) {\n  return context.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['emphasis'], undefined>}\n */\nexport function checkEmphasis(context) {\n  const marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, context) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (context.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../types.js').Handle} Handle\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @type {Handle}\n * @param {HTML} node\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @type {Handle}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimage.peek = imagePeek\n\n/**\n * @type {Handle}\n * @param {Image} node\n */\nexport function image(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('image')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  value += tracker.move(\n    safe(context, node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @type {Handle}\n * @param {ImageReference} node\n */\nexport function imageReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('imageReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('![')\n  const alt = safe(context, node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {Context} context\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, context) {\n  const raw = toString(node)\n\n  return Boolean(\n    !context.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlink.peek = linkPeek\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nexport function link(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = track(safeOptions)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      containerPhrasing(node, context, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Link} node\n */\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @type {Handle}\n * @param {LinkReference} node\n */\nexport function linkReference(node, _, context, safeOptions) {\n  const type = node.referenceType\n  const exit = context.enter('linkReference')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  const text = containerPhrasing(node, context, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = safe(context, association(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @type {Handle}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrdered(context) {\n  const marker = context.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['rule'], undefined>}\n */\nexport function checkRule(context) {\n  const marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @type {Handle}\n * @param {Strong} node\n */\nexport function strong(node, _, context, safeOptions) {\n  const marker = checkStrong(context)\n  const exit = context.enter('strong')\n  const tracker = track(safeOptions)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    containerPhrasing(node, context, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @type {Handle}\n * @param {Strong} _\n */\nfunction strongPeek(_, _1, context) {\n  return context.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['strong'], undefined>}\n */\nexport function checkStrong(context) {\n  const marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['fence'], undefined>}\n */\nexport function checkFence(context) {\n  const marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Get the count of the longest repeating streak of `character` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} character\n *   Single character to look for.\n * @returns {number}\n *   Count of most frequent adjacent `character`s in `value`.\n */\nexport function longestStreak(value, character) {\n  const source = String(value)\n  let index = source.indexOf(character)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = source.indexOf(character, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {association} from '../util/association.js'\nimport {checkQuote} from '../util/check-quote.js'\nimport {safe} from '../util/safe.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Definition} node\n */\nexport function definition(node, _, context, safeOptions) {\n  const quote = checkQuote(context)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = context.enter('definition')\n  let subexit = context.enter('label')\n  const tracker = track(safeOptions)\n  let value = tracker.move('[')\n  value += tracker.move(\n    safe(context, association(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      safe(context, node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += tracker.move(\n      safe(context, node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      safe(context, node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\nimport {containerPhrasing} from '../util/container-phrasing.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {Heading} node\n */\nexport function heading(node, _, context, safeOptions) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = track(safeOptions)\n\n  if (formatHeadingAsSetext(node, context)) {\n    const exit = context.enter('headingSetext')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = context.enter('headingAtx')\n  const subexit = context.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = containerPhrasing(node, context, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {List} node\n */\nexport function list(node, parent, context, safeOptions) {\n  const exit = context.enter('list')\n  const bulletCurrent = context.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(context) : checkBullet(context)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(context)\n    : checkBulletOther(context)\n  const bulletLastUsed = context.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      context.stack[context.stack.length - 1] === 'list' &&\n      context.stack[context.stack.length - 2] === 'listItem' &&\n      context.stack[context.stack.length - 3] === 'list' &&\n      context.stack[context.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      context.indexStack[context.indexStack.length - 1] === 0 &&\n      context.indexStack[context.indexStack.length - 2] === 0 &&\n      context.indexStack[context.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(context) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  context.bulletCurrent = bullet\n  const value = containerFlow(node, context, safeOptions)\n  context.bulletLastUsed = bullet\n  context.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bulletOrdered'], undefined>}\n */\nexport function checkBulletOrderedOther(context) {\n  const bulletOrdered = checkBulletOrdered(context)\n  const bulletOrderedOther = context.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBulletOther(context) {\n  const bullet = checkBullet(context)\n  const bulletOther = context.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerPhrasing} from '../util/container-phrasing.js'\n\n/**\n * @type {Handle}\n * @param {Paragraph} node\n */\nexport function paragraph(node, _, context, safeOptions) {\n  const exit = context.enter('paragraph')\n  const subexit = context.enter('phrasing')\n  const value = containerPhrasing(node, context, safeOptions)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {containerFlow} from '../util/container-flow.js'\n\n/**\n * @type {Handle}\n * @param {Root} node\n */\nexport function root(node, _, context, safeOptions) {\n  return containerFlow(node, context, safeOptions)\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {safe} from '../util/safe.js'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(node, _, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @type {Handle}\n * @param {ThematicBreak} _\n */\nexport function thematicBreak(_, _1, context) {\n  const value = (\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(context))\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['ruleRepetition'], undefined>}\n */\nexport function checkRuleRepetition(context) {\n  const repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, context) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, context) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, context)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? context.options.bulletOrderedOther\n      : context.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Context} Context\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').Unsafe} Unsafe\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\n\n/**\n * @param {Node} tree\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {Context} */\n  // @ts-expect-error: we’ll add `handle` later.\n  const context = {\n    enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {},\n    indexStack: []\n  }\n\n  configure(context, {unsafe, join, handlers: handle})\n  configure(context, options)\n\n  if (context.options.tightDefinitions) {\n    configure(context, {join: [joinDefinition]})\n  }\n\n  /** @type {Handle} */\n  context.handle = zwitch('type', {\n    invalid,\n    // @ts-expect-error: hush.\n    unknown,\n    // @ts-expect-error: hush.\n    handlers: context.handlers\n  })\n\n  let result = context.handle(tree, null, context, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Context['enter']} */\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\n/**\n * @type {Handle}\n * @param {unknown} value\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @type {Handle}\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","import {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\n\nexport const remark = unified().use(remarkParse).use(remarkStringify).freeze()\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createTimer, CtxHandler, MilkdownPlugin } from '@milkdown/ctx';\n\nexport const ConfigReady = createTimer('ConfigReady');\n\nexport const config =\n    (configure: CtxHandler): MilkdownPlugin =>\n    (pre) => {\n        pre.record(ConfigReady);\n\n        return async (ctx) => {\n            await configure(ctx);\n            ctx.done(ConfigReady);\n        };\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport {\n    createThemeManager,\n    Emotion,\n    emotionConfigCtx,\n    emotionCtx,\n    initEmotion,\n    internalThemeKeys,\n    ThemeGlobal,\n    ThemeManager,\n    themeManagerCtx,\n    ThemeSliceKey,\n} from '@milkdown/design-system';\nimport { Plugin, PluginKey } from '@milkdown/prose';\n\nimport { ConfigReady } from './config';\nimport { InitReady, prosePluginsCtx } from './init';\n\nexport const themeTimerCtx = createSlice([] as Timer[], 'themeTimer');\nexport const ThemeEnvironmentReady = createTimer('ThemeEnvironmentReady');\nexport const ThemeReady = createTimer('ThemeReady');\n\nconst key = new PluginKey('MILKDOWN_THEME_RESET');\n\nexport const themeEnvironment: MilkdownPlugin = (pre) => {\n    const themeManager = createThemeManager();\n\n    pre.inject(emotionConfigCtx)\n        .inject(emotionCtx)\n        .inject(themeManagerCtx, themeManager)\n        .inject(themeTimerCtx, [ConfigReady])\n        .record(ThemeReady)\n        .record(ThemeEnvironmentReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(themeTimerCtx);\n        const emotion = initEmotion(ctx.get(emotionConfigCtx));\n\n        internalThemeKeys.forEach((key) => {\n            themeManager.inject(key as ThemeSliceKey);\n        });\n\n        ctx.set(emotionCtx, emotion);\n\n        ctx.done(ThemeEnvironmentReady);\n\n        await ctx.wait(InitReady);\n        ctx.update(prosePluginsCtx, (xs) =>\n            xs.concat(\n                new Plugin({\n                    key,\n                    view: () => {\n                        themeManager.runExecutor();\n                        return {\n                            destroy: () => {\n                                emotion.flush();\n                            },\n                        };\n                    },\n                }),\n            ),\n        );\n    };\n};\n\nexport type CreateThemePack = (emotion: Emotion, manager: ThemeManager) => void;\nexport type ThemePlugin = MilkdownPlugin & {\n    override: (overrideFn: CreateThemePack) => ThemePlugin;\n};\n\nexport const themeFactory = (createThemePack?: CreateThemePack): ThemePlugin => {\n    let overrideFn: CreateThemePack | null = null;\n    const theme: ThemePlugin = () => async (ctx) => {\n        await ctx.wait(ThemeEnvironmentReady);\n        const emotion = ctx.get(emotionCtx);\n        const themeManager = ctx.get(themeManagerCtx);\n\n        themeManager.setExecutor(() => {\n            createThemePack?.(emotion, themeManager);\n            overrideFn?.(emotion, themeManager);\n\n            internalThemeKeys.forEach((key) => {\n                if (!themeManager.has(key as ThemeSliceKey)) {\n                    console.warn('Theme key not found: ', key.sliceName);\n                }\n            });\n\n            themeManager.get(ThemeGlobal, undefined);\n        });\n\n        ctx.done(ThemeReady);\n    };\n    theme.override = (fn) => {\n        overrideFn = fn;\n        return theme;\n    };\n    return theme;\n};\n\nexport * from '@milkdown/design-system';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Slice, Timer } from '@milkdown/ctx';\nimport { InputRule, MarkViewFactory, NodeViewFactory, Plugin, ViewFactory } from '@milkdown/prose';\nimport { remark, RemarkParser, RemarkPlugin } from '@milkdown/transformer';\n\nimport type { Editor } from '../editor';\nimport { ThemeReady } from './theme';\n\nexport const InitReady = createTimer('InitReady');\n\nexport const initTimerCtx = createSlice([] as Timer[], 'initTimer');\nexport const editorCtx = createSlice({} as Editor, 'editor');\n\nexport const inputRulesCtx = createSlice([] as InputRule[], 'inputRules');\nexport const prosePluginsCtx = createSlice([] as Plugin[], 'prosePlugins');\nexport const remarkPluginsCtx = createSlice([] as RemarkPlugin[], 'remarkPlugins');\n\ntype View = [nodeId: string, view: ViewFactory | NodeViewFactory | MarkViewFactory];\nexport const viewCtx = createSlice([] as View[], 'nodeView');\n\nexport const remarkCtx: Slice<RemarkParser> = createSlice(remark(), 'remark');\n\nexport const init =\n    (editor: Editor): MilkdownPlugin =>\n    (pre) => {\n        pre.inject(editorCtx, editor)\n            .inject(prosePluginsCtx)\n            .inject(remarkPluginsCtx)\n            .inject(inputRulesCtx)\n            .inject(viewCtx)\n            .inject(remarkCtx, remark())\n            .inject(initTimerCtx, [ThemeReady])\n            .record(InitReady);\n\n        return async (ctx) => {\n            await ctx.waitTimers(initTimerCtx);\n\n            ctx.done(InitReady);\n        };\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { MarkSpec, NodeSpec } from '@milkdown/prose';\nimport { Schema } from '@milkdown/prose';\nimport type {\n    MarkParserSpec,\n    MarkSerializerSpec,\n    NodeParserSpec,\n    NodeSerializerSpec,\n    RemarkParser,\n} from '@milkdown/transformer';\n\nimport { InitReady, remarkCtx, remarkPluginsCtx } from '.';\n\nexport const SchemaReady = createTimer('schemaReady');\n\nexport const schemaCtx = createSlice({} as Schema, 'schema');\nexport const schemaTimerCtx = createSlice([] as Timer[], 'schemaTimer');\n\nexport type NodeSchema = {\n    readonly toMarkdown: NodeSerializerSpec;\n    readonly parseMarkdown: NodeParserSpec;\n    readonly priority?: number;\n} & Readonly<NodeSpec>;\n\nexport const nodesCtx = createSlice([] as Array<[string, NodeSchema]>, 'nodes');\n\nexport type MarkSchema = {\n    readonly toMarkdown: MarkSerializerSpec;\n    readonly parseMarkdown: MarkParserSpec;\n} & Readonly<MarkSpec>;\nexport const marksCtx = createSlice([] as Array<[string, MarkSchema]>, 'marks');\n\nconst extendPriority = <T extends NodeSchema | MarkSchema>(x: T): T => {\n    return {\n        ...x,\n        parseDOM: x.parseDOM?.map((rule) => ({ priority: x.priority, ...rule })),\n    };\n};\n\nexport const schema: MilkdownPlugin = (pre) => {\n    pre.inject(schemaCtx).inject(nodesCtx).inject(marksCtx).inject(schemaTimerCtx, [InitReady]).record(SchemaReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(schemaTimerCtx);\n\n        const remark = ctx.get(remarkCtx);\n        const remarkPlugins = ctx.get(remarkPluginsCtx);\n\n        const processor = remarkPlugins.reduce((acc: RemarkParser, plug) => acc.use(plug), remark);\n        ctx.set(remarkCtx, processor);\n\n        const nodes = Object.fromEntries(ctx.get(nodesCtx).map(([key, x]) => [key, extendPriority(x)]));\n        const marks = Object.fromEntries(ctx.get(marksCtx).map(([key, x]) => [key, extendPriority(x)]));\n\n        ctx.set(\n            schemaCtx,\n            new Schema({\n                nodes,\n                marks,\n            }),\n        );\n\n        ctx.done(SchemaReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { Node as ProsemirrorNode } from '@milkdown/prose';\nimport { createParser, InnerParserSpecMap, ParserSpecWithType } from '@milkdown/transformer';\n\nimport { marksCtx, nodesCtx } from '.';\nimport { remarkCtx } from './init';\nimport { schemaCtx, SchemaReady } from './schema';\n\nexport type Parser = (text: string) => ProsemirrorNode | null;\n\nexport const parserCtx = createSlice((() => null) as Parser, 'parser');\nexport const parserTimerCtx = createSlice([] as Timer[], 'parserTimer');\n\nexport const ParserReady = createTimer('ParserReady');\n\nexport const parser: MilkdownPlugin = (pre) => {\n    pre.inject(parserCtx).inject(parserTimerCtx, [SchemaReady]).record(ParserReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(parserTimerCtx);\n        const nodes = ctx.get(nodesCtx);\n        const marks = ctx.get(marksCtx);\n        const remark = ctx.get(remarkCtx);\n        const schema = ctx.get(schemaCtx);\n\n        const children = [\n            ...nodes.map(([id, v]) => ({ id, ...v })).map((node) => ({ ...node, is: 'node' as const })),\n            ...marks.map(([id, v]) => ({ id, ...v })).map((mark) => ({ ...mark, is: 'mark' as const })),\n        ];\n        const spec: InnerParserSpecMap = Object.fromEntries(\n            children.map(({ id, parseMarkdown, is }) => [id, { ...parseMarkdown, is, key: id } as ParserSpecWithType]),\n        );\n\n        ctx.set(parserCtx, createParser(schema, spec, remark));\n        ctx.done(ParserReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport type { Node as ProsemirrorNode } from '@milkdown/prose';\nimport { createSerializer } from '@milkdown/transformer';\n\nimport { remarkCtx } from './init';\nimport { marksCtx, nodesCtx, schemaCtx, SchemaReady } from './schema';\n\nexport const serializerCtx = createSlice<(node: ProsemirrorNode) => string, 'serializer'>(() => '', 'serializer');\nexport const serializerTimerCtx = createSlice([] as Timer[], 'serializerTimer');\n\nexport const SerializerReady = createTimer('SerializerReady');\n\nexport const serializer: MilkdownPlugin = (pre) => {\n    pre.inject(serializerCtx).inject(serializerTimerCtx, [SchemaReady]).record(SerializerReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(serializerTimerCtx);\n        const nodes = ctx.get(nodesCtx);\n        const marks = ctx.get(marksCtx);\n        const remark = ctx.get(remarkCtx);\n        const schema = ctx.get(schemaCtx);\n\n        const children = [...nodes, ...marks];\n        const spec = Object.fromEntries(children.map(([id, child]) => [id, child.toMarkdown]));\n\n        ctx.set(serializerCtx, createSerializer(schema, spec, remark));\n        ctx.done(SerializerReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport { docTypeError } from '@milkdown/exception';\nimport {\n    baseKeymap,\n    customInputRules as createInputRules,\n    DOMParser,\n    EditorState,\n    keymap as createKeymap,\n    Node,\n    Plugin,\n    PluginKey,\n    Schema,\n} from '@milkdown/prose';\nimport { JSONRecord } from '@milkdown/transformer';\n\nimport { CommandsReady } from '.';\nimport { inputRulesCtx, prosePluginsCtx } from './init';\nimport { Parser, parserCtx, ParserReady } from './parser';\nimport { schemaCtx } from './schema';\nimport { SerializerReady } from './serializer';\n\ntype DefaultValue = string | { type: 'html'; dom: HTMLElement } | { type: 'json'; value: JSONRecord };\ntype StateOptions = Parameters<typeof EditorState.create>[0];\ntype StateOptionsOverride = (prev: StateOptions) => StateOptions;\n\nexport const defaultValueCtx = createSlice('' as DefaultValue, 'defaultValue');\nexport const editorStateCtx = createSlice({} as EditorState, 'editorState');\nexport const editorStateOptionsCtx = createSlice<StateOptionsOverride>((x) => x, 'stateOptions');\nexport const editorStateTimerCtx = createSlice([] as Timer[], 'editorStateTimer');\n\nexport const EditorStateReady = createTimer('EditorStateReady');\n\nconst key = new PluginKey('MILKDOWN_PLUGIN_STATE_TRACKER');\n\nconst getDoc = (defaultValue: DefaultValue, parser: Parser, schema: Schema) => {\n    if (typeof defaultValue === 'string') {\n        return parser(defaultValue);\n    }\n\n    if (defaultValue.type === 'html') {\n        return DOMParser.fromSchema(schema).parse(defaultValue.dom);\n    }\n\n    if (defaultValue.type === 'json') {\n        return Node.fromJSON(schema, defaultValue.value);\n    }\n\n    throw docTypeError(defaultValue);\n};\n\nexport const editorState: MilkdownPlugin = (pre) => {\n    pre.inject(defaultValueCtx)\n        .inject(editorStateCtx)\n        .inject(editorStateOptionsCtx)\n        .inject(editorStateTimerCtx, [ParserReady, SerializerReady, CommandsReady])\n        .record(EditorStateReady);\n\n    return async (ctx) => {\n        await ctx.waitTimers(editorStateTimerCtx);\n\n        const schema = ctx.get(schemaCtx);\n        const parser = ctx.get(parserCtx);\n        const rules = ctx.get(inputRulesCtx);\n        const optionsOverride = ctx.get(editorStateOptionsCtx);\n        const prosePlugins = ctx.get(prosePluginsCtx);\n        const defaultValue = ctx.get(defaultValueCtx);\n        const doc = getDoc(defaultValue, parser, schema);\n\n        const plugins = [\n            ...prosePlugins,\n            new Plugin({\n                key,\n                state: {\n                    init: () => {\n                        // do nothing\n                    },\n                    apply: (_tr, _value, _oldState, newState) => {\n                        ctx.set(editorStateCtx, newState);\n                    },\n                },\n            }),\n            createInputRules({ rules }),\n            createKeymap(baseKeymap),\n        ];\n\n        ctx.set(prosePluginsCtx, plugins);\n\n        const options = optionsOverride({\n            schema,\n            doc,\n            plugins,\n        });\n\n        const state = EditorState.create(options);\n        ctx.set(editorStateCtx, state);\n        ctx.done(EditorStateReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createSlice, createTimer, MilkdownPlugin, Timer } from '@milkdown/ctx';\nimport { EditorView, Plugin, PluginKey, ViewFactory } from '@milkdown/prose';\n\nimport { editorStateCtx, EditorStateReady } from './editor-state';\nimport { InitReady, prosePluginsCtx, viewCtx } from './init';\n\ntype EditorOptions = Omit<ConstructorParameters<typeof EditorView>[1], 'state'>;\n\ntype RootType = Node | undefined | null | string;\n\nexport const editorViewCtx = createSlice({} as EditorView, 'editorView');\nexport const editorViewOptionsCtx = createSlice({} as EditorOptions, 'editorViewOptions');\nexport const rootCtx = createSlice(null as RootType, 'root');\nexport const editorViewTimerCtx = createSlice([] as Timer[], 'editorViewTimer');\n\nexport const EditorViewReady = createTimer('EditorViewReady');\n\nconst createViewContainer = (root: Node) => {\n    const container = document.createElement('div');\n    container.className = 'milkdown';\n    root.appendChild(container);\n\n    return container;\n};\n\nconst prepareViewDom = (dom: Element) => {\n    dom.classList.add('editor');\n    dom.setAttribute('role', 'textbox');\n};\n\nconst key = new PluginKey('MILKDOWN_VIEW_CLEAR');\n\nexport const editorView: MilkdownPlugin = (pre) => {\n    pre.inject(rootCtx, document.body)\n        .inject(editorViewCtx)\n        .inject(editorViewOptionsCtx)\n        .inject(editorViewTimerCtx, [EditorStateReady])\n        .record(EditorViewReady);\n\n    return async (ctx) => {\n        await ctx.wait(InitReady);\n\n        const root = ctx.get(rootCtx) || document.body;\n        const el = typeof root === 'string' ? document.querySelector(root) : root;\n\n        ctx.update(prosePluginsCtx, (xs) => [\n            new Plugin({\n                key,\n                view: (editorView) => {\n                    const container = el ? createViewContainer(el) : undefined;\n\n                    const handleDOM = () => {\n                        if (container && el) {\n                            const editor = editorView.dom;\n                            el.replaceChild(container, editor);\n                            container.appendChild(editor);\n                        }\n                    };\n                    handleDOM();\n                    return {\n                        destroy: () => {\n                            if (container?.parentNode) {\n                                container?.parentNode.replaceChild(editorView.dom, container);\n                            }\n                            container?.remove();\n                        },\n                    };\n                },\n            }),\n            ...xs,\n        ]);\n\n        await ctx.waitTimers(editorViewTimerCtx);\n\n        const state = ctx.get(editorStateCtx);\n        const options = ctx.get(editorViewOptionsCtx);\n        const nodeViews = Object.fromEntries(ctx.get(viewCtx) as [string, ViewFactory][]);\n        const view = new EditorView(el as Node, {\n            state,\n            nodeViews,\n            ...options,\n        });\n        prepareViewDom(view.dom);\n        ctx.set(editorViewCtx, view);\n        ctx.done(EditorViewReady);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createContainer, createSlice, createTimer, Ctx, MilkdownPlugin, Slice, Timer } from '@milkdown/ctx';\nimport { callCommandBeforeEditorView } from '@milkdown/exception';\nimport type { Command } from '@milkdown/prose';\n\nimport { editorViewCtx, EditorViewReady } from './editor-view';\nimport { SchemaReady } from './schema';\n\nexport type Cmd<T = undefined> = (payload?: T) => Command;\nexport type CmdKey<T = undefined> = Slice<Cmd<T>>;\n\ntype InferParams<T> = T extends CmdKey<infer U> ? U : never;\n\nexport class CommandManager {\n    #container = createContainer();\n    #ctx: Ctx | null = null;\n\n    setCtx = (ctx: Ctx) => {\n        this.#ctx = ctx;\n    };\n\n    /**\n     * Create a command with provided key and command function.\n     *\n     * @param meta - The key of the command that needs to be created.\n     * @param value - The implementation of the command function.\n     */\n    create<T>(meta: CmdKey<T>, value: Cmd<T>) {\n        return meta(this.#container.sliceMap, value);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get<T extends CmdKey<any>>(slice: string): Cmd<InferParams<T>>;\n    get<T>(slice: CmdKey<T>): Cmd<T>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(slice: string | CmdKey<any>): Cmd<any>;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(slice: string | CmdKey<any>): Cmd<any> {\n        return this.#container.getSlice(slice).get();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call<T extends CmdKey<any>>(slice: string, payload?: InferParams<T>): boolean;\n    call<T>(slice: CmdKey<T>, payload?: T): boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(slice: string | CmdKey<any>, payload?: any): boolean;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(slice: string | CmdKey<any>, payload?: any): boolean {\n        if (this.#ctx == null) {\n            throw callCommandBeforeEditorView();\n        }\n        const cmd = this.get(slice);\n        const command = cmd(payload);\n        const view = this.#ctx.get(editorViewCtx);\n        return command(view.state, view.dispatch, view);\n    }\n}\n\nexport type CmdTuple<T = unknown> = [key: CmdKey<T>, value: Cmd<T>];\n\nexport const createCmd = <T>(key: CmdKey<T>, value: Cmd<T>): CmdTuple => [key, value] as CmdTuple;\nexport const createCmdKey = <T = undefined>(key = 'cmdKey'): CmdKey<T> =>\n    createSlice((() => () => false) as Cmd<T>, key);\n\nexport const commandsCtx = createSlice({} as CommandManager, 'commands');\n\nexport const commandsTimerCtx = createSlice([] as Timer[], 'commandsTimer');\nexport const CommandsReady = createTimer('CommandsReady');\n\nexport const commands: MilkdownPlugin = (pre) => {\n    const commandManager = new CommandManager();\n    pre.inject(commandsCtx, commandManager).inject(commandsTimerCtx, [SchemaReady]).record(CommandsReady);\n    return async (ctx) => {\n        await ctx.waitTimers(commandsTimerCtx);\n\n        ctx.done(CommandsReady);\n        await ctx.wait(EditorViewReady);\n        commandManager.setCtx(ctx);\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createClock, createContainer, Ctx, CtxHandler, MilkdownPlugin, Pre } from '@milkdown/ctx';\n\nimport {\n    commands,\n    config,\n    editorState,\n    editorView,\n    init,\n    parser,\n    schema,\n    serializer,\n    themeEnvironment,\n} from '../internal-plugin';\n\n/**\n * Get the milkdown editor constructor\n */\nexport class Editor {\n    /**\n     * Create a new editor instance.\n     *\n     * @returns The new editor instance been created.\n     */\n    static make() {\n        return new Editor();\n    }\n\n    readonly #container = createContainer();\n    readonly #clock = createClock();\n\n    readonly #plugins: Set<CtxHandler> = new Set();\n    readonly #configureList: CtxHandler[] = [];\n\n    readonly #ctx = new Ctx(this.#container, this.#clock);\n    readonly #pre = new Pre(this.#container, this.#clock);\n\n    readonly #loadInternal = () => {\n        const internalPlugins = [\n            themeEnvironment,\n            schema,\n            parser,\n            serializer,\n            commands,\n            editorState,\n            editorView,\n            init(this),\n        ];\n        const configPlugin = config(async (x) => {\n            await Promise.all(this.#configureList.map((fn) => fn(x)));\n        });\n        this.use(internalPlugins.concat(configPlugin));\n    };\n\n    /**\n     * Get the ctx of the editor.\n     *\n     * @returns The ctx of the editor.\n     */\n    get ctx() {\n        return this.#ctx;\n    }\n\n    /**\n     * Use one plugin or a list of plugins for current editor.\n     *\n     * @example\n     * ```\n     * Editor.make()\n     *   .use(plugin)\n     *   .use([pluginA, pluginB])\n     * ```\n     *\n     * @param plugins - A list of plugins, or one plugin.\n     * @returns Editor instance.\n     */\n    readonly use = (plugins: MilkdownPlugin | MilkdownPlugin[]) => {\n        [plugins].flat().forEach((plugin) => {\n            this.#plugins.add(plugin(this.#pre));\n        });\n        return this;\n    };\n\n    /**\n     * Config the context for current editor.\n     *\n     * @param configure - The function that configure current editor, can be async, with context as parameter.\n     * @returns Editor instance.\n     */\n    readonly config = (configure: CtxHandler) => {\n        this.#configureList.push(configure);\n        return this;\n    };\n\n    /**\n     * Create the editor UI.\n     *\n     * @example\n     * ```\n     * Editor.make().use(nord).use(commonmark).create()\n     * ```\n     *\n     * @returns A promise object, will be resolved as editor instance after create finish.\n     */\n    readonly create = async () => {\n        this.#loadInternal();\n        await Promise.all([...this.#plugins].map((loader) => loader(this.#ctx)));\n        return this;\n    };\n\n    /**\n     * Get the context value in a running editor on demand and return the action result.\n     *\n     * @example\n     * ```\n     * import { Editor, editorViewCtx, serializerCtx } from '@milkdown/core';\n     * async function playWithEditor() {\n     *     const editor = await Editor.make().use(commonmark).create();\n     *\n     *     const getMarkdown = () =>\n     *         editor.action((ctx) => {\n     *             const editorView = ctx.get(editorViewCtx);\n     *             const serializer = ctx.get(serializerCtx);\n     *             return serializer(editorView.state.doc);\n     *         });\n     *\n     *     // get markdown string:\n     *     getMarkdown();\n     * }\n     * ```\n     *\n     * @param action - The function that get editor context and return the action result.\n     * @returns The action result.\n     */\n    readonly action = <T>(action: (ctx: Ctx) => T) => action(this.#ctx);\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { contextNotFound } from '@milkdown/exception';\n\nimport { $Slice, Slice } from './slice';\n\nexport type Container = {\n    readonly getSlice: <T, N extends string = string>(slice: Slice<T, N> | N) => $Slice<T, N>;\n    readonly sliceMap: Map<symbol, $Slice>;\n};\n\nexport const createContainer = (): Container => {\n    const sliceMap: Map<symbol, $Slice> = new Map();\n\n    const getSlice = <T, N extends string = string>(slice: Slice<T, N> | N): $Slice<T, N> => {\n        const context =\n            typeof slice === 'string' ? [...sliceMap.values()].find((x) => x.name === slice) : sliceMap.get(slice.id);\n\n        if (!context) {\n            const name = typeof slice === 'string' ? slice : slice.sliceName;\n            throw contextNotFound(name);\n        }\n        return context as $Slice<T, N>;\n    };\n\n    return { getSlice, sliceMap };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport const shallowClone = <T>(x: T): T => {\n    if (Array.isArray(x)) {\n        return [...(x as unknown[])] as unknown as T;\n    }\n    if (typeof x === 'object') {\n        return { ...x };\n    }\n    return x;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ctxCallOutOfScope } from '@milkdown/exception';\n\nimport { shallowClone } from './shallow-clone';\n\nexport type $Slice<T = unknown, N extends string = string> = {\n    readonly id: symbol;\n    readonly name: N;\n    readonly set: (value: T) => void;\n    readonly get: () => T;\n    readonly update: (updater: (prev: T) => T) => void;\n};\n\nexport type SliceMap = Map<symbol, $Slice>;\n\nexport type Slice<T, N extends string = string> = {\n    readonly id: symbol;\n    readonly sliceName: N;\n    readonly _typeInfo: () => T;\n    (container: SliceMap, resetValue?: T): $Slice<T>;\n};\n\nexport const createSlice = <T, N extends string = string>(value: T, name: N): Slice<T, N> => {\n    const id = Symbol('Context');\n\n    const factory = (container: SliceMap, resetValue = shallowClone(value)) => {\n        let inner = resetValue;\n\n        const context: $Slice<T> = {\n            name,\n            id,\n            set: (next) => {\n                inner = next;\n            },\n            get: () => inner,\n            update: (updater) => {\n                inner = updater(inner);\n            },\n        };\n        container.set(id, context as $Slice);\n        return context;\n    };\n    factory.sliceName = name;\n    factory.id = id;\n    factory._typeInfo = (): T => {\n        throw ctxCallOutOfScope();\n    };\n\n    return factory;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { $Slice, Container, Slice } from '../context';\nimport type { Clock, Timer } from '../timing';\n\n/**\n * The ctx object that can be accessed in plugin and action.\n */\nexport class Ctx {\n    #container: Container;\n    #clock: Clock;\n\n    constructor(container: Container, clock: Clock) {\n        this.#container = container;\n        this.#clock = clock;\n    }\n\n    /**\n     * Get the slice instance.\n     *\n     * @param slice - The slice or slice name that needs to be used.\n     * @returns The slice instance.\n     */\n    readonly use = <T, N extends string = string>(slice: Slice<T, N> | N): $Slice<T, N> =>\n        this.#container.getSlice(slice);\n\n    /**\n     * Get the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @returns The slice value.\n     */\n    readonly get = <T, N extends string>(slice: Slice<T, N>) => this.use(slice).get();\n\n    /**\n     * Set the slice value.\n     *\n     * @param slice - The slice needs to be used.\n     * @param value - The default value.\n     * @returns\n     */\n    readonly set = <T, N extends string>(slice: Slice<T, N>, value: T) => this.use(slice).set(value);\n\n    /**\n     * Update the slice by its current value.\n     *\n     * @example\n     * ```\n     * update(NumberSlice, x => x + 1);\n     * ```\n     *\n     * @param slice - The slice needs to be used.\n     * @param updater - The update function, gets current value as parameter and returns new value.\n     * @returns\n     */\n    readonly update = <T, N extends string>(slice: Slice<T, N>, updater: (prev: T) => T) =>\n        this.use(slice).update(updater);\n\n    /**\n     * Get the timer instance.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns The timer instance.\n     */\n    readonly timing = (timer: Timer) => this.#clock.get(timer);\n\n    /**\n     * Wait for a timer to finish.\n     *\n     * @param timer - The timer needs to be used.\n     * @returns A promise that will be resolved when timer finish.\n     */\n    readonly wait = (timer: Timer) => this.timing(timer)();\n\n    /**\n     * Finish a timer\n     *\n     * @param timer - The timer needs to be finished.\n     * @returns\n     */\n    readonly done = (timer: Timer) => this.timing(timer).done();\n\n    /**\n     * Wait for a list of timers in target slice to be all finished.\n     *\n     * @param slice - The slice that holds a list of timer.\n     * @returns A promise that will be resolved when all timers finish.\n     */\n    readonly waitTimers = async (slice: Slice<Timer[]>) => {\n        await Promise.all(this.get(slice).map((x) => this.wait(x)));\n        return;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Container, Slice } from '../context';\nimport type { Clock, Timer } from '../timing';\n\nexport class Pre {\n    #container: Container;\n    #clock: Clock;\n\n    constructor(container: Container, clock: Clock) {\n        this.#container = container;\n        this.#clock = clock;\n    }\n\n    /**\n     * Inject a context into current editor.\n     *\n     * @param ctx - The context needs to be injected.\n     * @param defaultValue - The default value of this context.\n     * @returns Pre.\n     */\n    readonly inject = <T>(ctx: Slice<T>, defaultValue?: T) => {\n        ctx(this.#container.sliceMap, defaultValue);\n        return this;\n    };\n\n    /**\n     * Start to record for a timer.\n     *\n     * @param timer - The timer needs to be recorded.\n     * @returns Pre.\n     */\n    readonly record = (timer: Timer) => {\n        timer(this.#clock.store);\n        return this;\n    };\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { timerNotFound } from '@milkdown/exception';\n\nimport { Timing } from './timing';\n\nexport type ClockMap = Map<symbol, Timing>;\n\nexport type Timer = {\n    (store: ClockMap): Timing;\n    id: symbol;\n};\n\nexport type Clock = {\n    store: ClockMap;\n    get: (timer: Timer) => Timing;\n};\n\nexport const createClock = (): Clock => {\n    const store: ClockMap = new Map();\n    const get = (timer: Timer) => {\n        const meta = store.get(timer.id);\n        if (!meta) throw timerNotFound();\n        return meta;\n    };\n\n    return {\n        store,\n        get,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ClockMap, Timer } from './clock';\n\nexport type Timing = {\n    (): Promise<void>;\n    done: () => void;\n};\n\nexport const createTimer = (name: string, timeout = 3000): Timer => {\n    const id = Symbol('Timer');\n\n    const timer = (store: ClockMap) => {\n        let isResolved = false;\n        let listener: EventListener;\n\n        const data = Symbol(name);\n\n        const timing: Timing = () =>\n            isResolved\n                ? Promise.resolve(undefined)\n                : new Promise((resolve, reject) => {\n                      listener = (e: Event) => {\n                          if (!(e instanceof CustomEvent)) {\n                              return;\n                          }\n                          if (e.detail.id === data) {\n                              isResolved = true;\n                              resolve();\n                          }\n                      };\n                      setTimeout(() => {\n                          reject(`Timing ${name} timeout.`);\n                          removeEventListener(name, listener);\n                      }, timeout);\n                      addEventListener(name, listener);\n                  });\n        timing.done = () => {\n            const event = new CustomEvent(name, { detail: { id: data } });\n            dispatchEvent(event);\n            removeEventListener(name, listener);\n        };\n\n        store.set(id, timing);\n\n        return timing;\n    };\n    timer.id = id;\n\n    return timer;\n};\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = /* #__PURE__ */memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|counters?|url|(((repeating-)?(linear|radial))|conic)-gradient)\\(|(no-)?(open|close)-quote/;\n  var contentValues = ['normal', 'none', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        throw new Error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nfunction handleInterpolation(mergedProps, registered, interpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n  return cached !== undefined ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i]) + \";\";\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with @emotion/babel-plugin.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*(;|$)/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//g;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i]);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar registerStyles = function registerStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n};\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  registerStyles(cache, serialized, isStringTag);\n  var className = cache.key + \"-\" + serialized.name;\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles, registerStyles };\n","import createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport createEmotion, { Emotion, Options } from '@emotion/css/create-instance';\nimport { createSlice } from '@milkdown/ctx';\n\nexport type { Emotion, Options } from '@emotion/css/create-instance';\n\nexport const initEmotion = (options?: Options): Emotion => createEmotion(options);\n\nexport const emotionConfigCtx = createSlice<Options, 'EmotionConfig'>({ key: 'milkdown' }, 'EmotionConfig');\nexport const emotionCtx = createSlice<Emotion, 'Emotion'>({} as Emotion, 'Emotion');\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { createContainer, createSlice, Ctx, MilkdownPlugin, Pre, Slice } from '@milkdown/ctx';\n\nimport { emotionCtx } from './emotion';\n\nexport type ThemeSlice<Ret = unknown, T = undefined> = (payload: T) => Ret | undefined;\nexport type ThemeSliceKey<Ret = unknown, T = undefined, K extends string = string> = Slice<ThemeSlice<Ret, T>, K>;\n\nexport const createThemeSliceKey = <Ret, T = undefined, K extends string = string>(key: K): ThemeSliceKey<Ret, T, K> =>\n    createSlice((() => null as unknown as Ret) as ThemeSlice<Ret, T>, key);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetRet<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<infer Ret, any, any> ? Ret : unknown;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetPayload<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, infer T, any> ? T : undefined;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype GetKey<Key extends ThemeSliceKey> = Key extends ThemeSliceKey<any, any, infer T> ? T : undefined;\n\nexport class ThemeManager {\n    #container = createContainer();\n    #cache: Map<string, ThemeSlice> = new Map();\n    #flushListener: Set<() => void> = new Set();\n    #executor: () => void = () => {\n        /* noop */\n    };\n\n    inject<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T>): void {\n        key(this.#container.sliceMap);\n    }\n\n    has(key: ThemeSliceKey | string): boolean {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        if (this.#cache.has(name)) {\n            return true;\n        }\n\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(null as never) != null;\n    }\n\n    set<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), themeSlice: ThemeSlice<Ret, Payload>): void;\n    set<Ret = unknown, T = undefined>(key: ThemeSliceKey<Ret, T> | string, themeSlice: ThemeSlice<Ret, T>): void;\n    set(key: ThemeSliceKey | string, themeSlice: ThemeSlice): void {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        this.#cache.set(name, themeSlice as ThemeSlice);\n    }\n\n    get<\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Key extends ThemeSliceKey<any, any, any>,\n        Ret extends GetRet<Key> = GetRet<Key>,\n        Payload extends GetPayload<Key> = GetPayload<Key>,\n        K extends GetKey<Key> = GetKey<Key>,\n    >(key: Key | (K & string), payload: Payload): Ret {\n        const name = typeof key === 'string' ? key : key.sliceName;\n        const lazyGet = this.#cache.get(name);\n        if (lazyGet) {\n            const meta = this.#container.getSlice(key);\n            meta.set(lazyGet);\n            this.#cache.delete(key as string);\n        }\n        const meta = this.#container.getSlice(key);\n\n        return meta.get()(payload) as Ret;\n    }\n\n    onFlush(fn: () => void, callWhenRegister = true): void {\n        if (!this.#flushListener.has(fn)) {\n            this.#flushListener.add(fn);\n        }\n        if (callWhenRegister) {\n            fn();\n        }\n    }\n\n    async switch(ctx: Ctx, theme: MilkdownPlugin) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        await theme(ctx as unknown as Pre)(ctx);\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    flush(ctx: Ctx) {\n        const emotion = ctx.get(emotionCtx);\n        emotion.flush();\n        this.runExecutor();\n        this.#flushListener.forEach((f) => f());\n    }\n\n    setExecutor(executor: () => void): void {\n        executor();\n        this.#executor = executor;\n    }\n\n    runExecutor(): void {\n        this.#executor();\n    }\n}\n\nexport const themeManagerCtx = createSlice(new ThemeManager(), 'themeManager');\n\nexport const createThemeManager = () => new ThemeManager();\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeBorder = createThemeSliceKey<string, 'left' | 'right' | 'top' | 'bottom' | undefined, 'border'>(\n    'border',\n);\nexport type ThemeBorderType = typeof ThemeBorder;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose';\n\nimport { createThemeSliceKey } from '../manager';\n\ntype ThemeOptions = {\n    onSelectLanguage: (language: string) => void;\n    editable: () => boolean;\n    onFocus: () => void;\n    onBlur: () => void;\n    languageList: string[];\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n    onDestroy: () => void;\n};\nexport const ThemeCodeFence = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'code-fence'>('code-fence');\nexport type ThemeCodeFenceType = typeof ThemeCodeFence;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Color } from '../types';\n\nexport const ThemeColor = createThemeSliceKey<string, [key: Color, opacity?: number]>('color');\nexport type ThemeColorType = typeof ThemeColor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Font } from '../types';\n\nexport const ThemeFont = createThemeSliceKey<string, Font, 'font'>('font');\nexport type ThemeFontType = typeof ThemeFont;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeGlobal = createThemeSliceKey<void, undefined, 'global'>('global');\nexport type ThemeGlobalType = typeof ThemeGlobal;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Icon, IconValue } from '../types';\n\nexport const ThemeIcon = createThemeSliceKey<IconValue, Icon, 'icon'>('icon');\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose';\n\nimport { createThemeSliceKey } from '../manager';\n\ntype ThemeOptions = {\n    isBlock: boolean;\n    placeholder: string;\n    onError?: (img: HTMLImageElement) => void;\n    onLoad?: (img: HTMLImageElement) => void;\n};\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\n\nexport const ThemeImage = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'image'>('image');\nexport type ThemeImageType = typeof ThemeImage;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView, Node } from '@milkdown/prose';\n\nimport { createThemeSliceKey } from '../manager';\n\ntype InnerEditorRenderer = {\n    dom: HTMLElement;\n    preview: HTMLElement;\n    editor: HTMLElement;\n    onUpdate: (node: Node, isInit: boolean) => void;\n    onFocus: (node: Node) => void;\n    onBlur: (node: Node) => void;\n    onDestroy: () => void;\n    stopEvent: (event: Event) => boolean;\n};\ntype InnerEditorOptions = {\n    view: EditorView;\n    getPos: () => number;\n    render: (content: string) => void;\n};\nexport const ThemeInnerEditor = createThemeSliceKey<InnerEditorRenderer, InnerEditorOptions, 'inner-editor'>(\n    'inner-editor',\n);\nexport type ThemeInnerEditorType = typeof ThemeInnerEditor;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose';\n\nimport { createThemeSliceKey } from '../manager';\n\ntype InputChipRenderer = {\n    dom: HTMLElement;\n    update: (value: string) => void;\n    init: (editorView: EditorView) => void;\n    show: (editorView: EditorView) => void;\n    hide: () => void;\n    destroy: () => void;\n};\n\ntype InputChipOptions = {\n    width?: string;\n    isBindMode?: boolean;\n    buttonText?: string;\n    placeholder?: string;\n    calculatePosition?: (editorView: EditorView, dom: HTMLElement) => [top: number, left: number];\n    onUpdate: (value: string) => void;\n};\n\nexport const ThemeInputChip = createThemeSliceKey<InputChipRenderer, InputChipOptions, 'input-chip'>('input-chip');\nexport type ThemeInputChipType = typeof ThemeInputChip;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeScrollbar = createThemeSliceKey<\n    string,\n    [direction?: 'x' | 'y', type?: 'normal' | 'thin'] | undefined,\n    'scrollbar'\n>('scrollbar');\nexport type ThemeScrollbarType = typeof ThemeScrollbar;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\n\nexport const ThemeShadow = createThemeSliceKey<string, undefined, 'shadow'>('shadow');\nexport type ThemeShadowType = typeof ThemeShadow;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createThemeSliceKey } from '../manager';\nimport { Size } from '../types';\n\nexport const ThemeSize = createThemeSliceKey<string, Size, 'size'>('size');\nexport type ThemeSizeType = typeof ThemeSize;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node } from '@milkdown/prose';\n\nimport { createThemeSliceKey } from '../manager';\n\ntype ThemeRenderer = {\n    dom: HTMLElement;\n    contentDOM: HTMLElement;\n    onUpdate: (node: Node) => void;\n};\ntype ThemeOptions = {\n    editable: () => boolean;\n    onChange: (selected: boolean) => void;\n};\nexport const ThemeTaskListItem = createThemeSliceKey<ThemeRenderer, ThemeOptions, 'task-list-item'>('task-list-item');\nexport type ThemeTaskListItemType = typeof ThemeTaskListItem;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeBorder } from './border';\nimport { ThemeCodeFence } from './code-fence';\nimport { ThemeColor } from './color';\nimport { ThemeFont } from './font';\nimport { ThemeGlobal } from './global';\nimport { ThemeIcon } from './icon';\nimport { ThemeImage } from './image';\nimport { ThemeInnerEditor } from './inner-editor';\nimport { ThemeInputChip } from './input-chip';\nimport { ThemeScrollbar } from './scrollbar';\nimport { ThemeShadow } from './shadow';\nimport { ThemeSize } from './size';\nimport { ThemeTaskListItem } from './task-list-item';\n\nexport const internalThemeKeys = [\n    /** Props */\n    ThemeColor,\n    ThemeSize,\n    ThemeFont,\n    ThemeScrollbar,\n    ThemeShadow,\n    ThemeBorder,\n    ThemeIcon,\n    ThemeGlobal,\n\n    /** Renderer */\n    ThemeCodeFence,\n    ThemeImage,\n    ThemeInnerEditor,\n    ThemeTaskListItem,\n    ThemeInputChip,\n] as const;\n\nexport * from './border';\nexport * from './code-fence';\nexport * from './color';\nexport * from './font';\nexport * from './global';\nexport * from './icon';\nexport * from './image';\nexport * from './inner-editor';\nexport * from './input-chip';\nexport * from './scrollbar';\nexport * from './shadow';\nexport * from './size';\nexport * from './task-list-item';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { ThemeColor } from './keys';\nimport type { ThemeManager } from './manager';\nimport type { Color } from './types';\n\ntype RGB = [number, number, number];\nexport const hex2rgb = (hex: string): RGB | null => {\n    const rgbShorthandRegex = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const rgbRegex = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n    const parse16 = (x: string) => parseInt(x, 16);\n\n    const fullHex = hex.slice(1).replace(rgbShorthandRegex, (_, r, g, b) => {\n        return r + r + g + g + b + b;\n    });\n\n    const [ok, r = '0', g = '0', b = '0'] = fullHex.match(rgbRegex) || [];\n\n    return ok ? ([r, g, b].map(parse16) as RGB) : null;\n};\n\nexport const getPalette =\n    (manager: ThemeManager) =>\n    (color: Color, opacity = 1) =>\n        manager.get(ThemeColor, [color, opacity]);\n","/* Copyright 2021, Milkdown by Mirone. */\n\nconst functionReplacer = (_: string, value: unknown) => (typeof value === 'function' ? '[Function]' : value);\n\nconst stringify = (x: unknown): string => JSON.stringify(x, functionReplacer);\n\nexport const docTypeError = (type: unknown) => new Error(`Doc type error, unsupported type: ${stringify(type)}`);\n\nexport const contextNotFound = (name: string) => new Error(`Context \"${name}\" not found, do you forget to inject it?`);\n\nexport const timerNotFound = () => new Error('Timer not found, do you forget to record it?');\n\nexport const ctxCallOutOfScope = () => new Error('Should not call a context out of the plugin.');\n\nexport const createNodeInParserFail = (...args: unknown[]) => {\n    const message = args.reduce((msg, arg) => {\n        if (!arg) {\n            return msg;\n        }\n        const serialize = (x: unknown): string => {\n            if (Array.isArray(x)) {\n                return (x as unknown[]).map((y) => serialize(y)).join(', ');\n            }\n            if ((x as { toJSON(): Record<string, unknown> }).toJSON) {\n                return stringify((x as { toJSON(): Record<string, unknown> }).toJSON());\n            }\n\n            if ((x as { spec: string }).spec) {\n                return stringify((x as { spec: string }).spec);\n            }\n\n            return (x as { toString(): string }).toString();\n        };\n        return `${msg}, ${serialize(arg)}`;\n    }, 'Create prosemirror node from remark failed in parser') as string;\n\n    return new Error(message);\n};\n\nexport const stackOverFlow = () => new Error('Stack over flow, cannot pop on an empty stack.');\n\nexport const parserMatchError = (node: unknown) =>\n    new Error(`Cannot match target parser for node: ${stringify(node)}.`);\n\nexport const serializerMatchError = (node: unknown) =>\n    new Error(`Cannot match target serializer for node: ${stringify(node)}.`);\n\nexport const getAtomFromSchemaFail = (type: 'mark' | 'node', name: string) =>\n    new Error(`Cannot get ${type}: ${name} from schema.`);\n\nexport const expectDomTypeError = (node: unknown) => new Error(`Expect to be a dom, but get: ${stringify(node)}.`);\n\nexport const callCommandBeforeEditorView = () =>\n    new Error(\n        `You're trying to call a command before editor view initialized, make sure to get commandManager from ctx after editor view has been initialized`,\n    );\n\nexport const themeMustInstalled = () =>\n    new Error(\n        `It seems that no theme found in editor, please make sure you have use theme in front of all plugins.\nIf you prefer to use an empty theme, you can use \\`themeFactory({})\\`.`,\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { editorViewOptionsCtx, parserCtx, schemaCtx, serializerCtx } from '@milkdown/core';\nimport { Node, Plugin, PluginKey, Slice } from '@milkdown/prose';\nimport { createPlugin } from '@milkdown/utils';\n\ntype R = Record<string, unknown>;\nconst isPureText = (content: R | R[] | undefined | null): boolean => {\n    if (!content) return false;\n    if (Array.isArray(content)) {\n        if (content.length > 1) return false;\n        return isPureText(content[0]);\n    }\n\n    const child = content['content'];\n    if (child) {\n        return isPureText(child as R[]);\n    }\n\n    return content['type'] === 'text';\n};\n\nexport const key = new PluginKey('MILKDOWN_PLUGIN_CLIPBOARD');\n\nexport const clipboardPlugin = createPlugin(() => {\n    return {\n        prosePlugins: (_, ctx) => {\n            const schema = ctx.get(schemaCtx);\n\n            // Set editable props for https://github.com/Saul-Mirone/milkdown/issues/190\n            ctx.update(editorViewOptionsCtx, (prev) => ({\n                ...prev,\n                editable: prev.editable ?? (() => true),\n            }));\n\n            const plugin = new Plugin({\n                key,\n                props: {\n                    handlePaste: (view, event) => {\n                        const parser = ctx.get(parserCtx);\n                        const editable = view.props.editable?.(view.state);\n                        const { clipboardData } = event;\n                        if (!editable || !clipboardData) {\n                            return false;\n                        }\n\n                        const currentNode = view.state.selection.$from.node();\n                        if (currentNode.type.spec.code) {\n                            return false;\n                        }\n\n                        const text = clipboardData.getData('text/plain');\n                        const html = clipboardData.getData('text/html');\n                        if (html.length > 0 || text.length === 0) {\n                            return false;\n                        }\n\n                        const slice = parser(text);\n                        if (!slice || typeof slice === 'string') return false;\n\n                        const contentSlice = view.state.selection.content();\n                        view.dispatch(\n                            view.state.tr.replaceSelection(\n                                new Slice(slice.content, contentSlice.openStart, contentSlice.openEnd),\n                            ),\n                        );\n\n                        return true;\n                    },\n                    clipboardTextSerializer: (slice) => {\n                        const serializer = ctx.get(serializerCtx);\n                        const isText = isPureText(slice.content.toJSON());\n                        if (isText) {\n                            return (slice.content as unknown as Node).textBetween(0, slice.content.size, '\\n\\n');\n                        }\n                        const doc = schema.topNodeType.createAndFill(undefined, slice.content);\n                        if (!doc) return '';\n                        const value = serializer(doc);\n                        return value;\n                    },\n                },\n            });\n\n            return [plugin];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { clipboardPlugin } from './clipboard';\n\nexport { clipboardPlugin } from './clipboard';\n\nexport const clipboard = clipboardPlugin();\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { history as prosemirrorHistory, keymap as createKeymap, redo, undo } from '@milkdown/prose';\nimport { createPlugin } from '@milkdown/utils';\n\nexport const Undo = createCmdKey('Undo');\nexport const Redo = createCmdKey('Redo');\n\nexport const history = createPlugin(() => ({\n    commands: () => [createCmd(Undo, () => undo), createCmd(Redo, () => redo)],\n    prosePlugins: () => [\n        prosemirrorHistory(),\n        createKeymap({\n            'Mod-z': undo,\n            'Mod-y': redo,\n            'Shift-Mod-z': redo,\n        }),\n    ],\n}))();\n","// @ts-nocheck\nclike.displayName = 'clike'\nclike.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nc.displayName = 'c'\nc.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function c(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\ncpp.displayName = 'cpp'\ncpp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCpp from './cpp.js'\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\n\n/** @type {import('../core.js').Syntax} */\nexport default function arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","// @ts-nocheck\nbash.displayName = 'bash'\nbash.aliases = ['shell']\n\n/** @type {import('../core.js').Syntax} */\nexport default function bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        }, // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        }, // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['cs', 'dotnet']\n\n/** @type {import('../core.js').Syntax} */\nexport default function csharp(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","// @ts-nocheck\nmarkup.displayName = 'markup'\nmarkup.aliases = ['atom', 'html', 'mathml', 'rss', 'ssml', 'svg', 'xml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","// @ts-nocheck\ncss.displayName = 'css'\ncss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","// @ts-nocheck\ndiff.displayName = 'diff'\ndiff.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\ngo.displayName = 'go'\ngo.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function go(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","// @ts-nocheck\nini.displayName = 'ini'\nini.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njava.displayName = 'java'\njava.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function java(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nregex.displayName = 'regex'\nregex.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\n\n/** @type {import('../core.js').Syntax} */\nexport default function javascript(Prism) {\n  Prism.register(refractorClike)\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' + // constant\n          (/NaN|Infinity/.source +\n            '|' + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","// @ts-nocheck\njson.displayName = 'json'\njson.aliases = ['webmanifest']\n\n/** @type {import('../core.js').Syntax} */\nexport default function json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function kotlin(Prism) {\n  Prism.register(refractorClike)\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nless.displayName = 'less'\nless.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function less(Prism) {\n  Prism.register(refractorCss)\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","// @ts-nocheck\nlua.displayName = 'lua'\nlua.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","// @ts-nocheck\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","// @ts-nocheck\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\n\n/** @type {import('../core.js').Syntax} */\nexport default function yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\n\n/** @type {import('../core.js').Syntax} */\nexport default function markdown(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorC from './c.js'\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\n\n/** @type {import('../core.js').Syntax} */\nexport default function objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","// @ts-nocheck\nperl.displayName = 'perl'\nperl.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        }, // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        }, // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        }, // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source, // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source, // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }, // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n        /[&*$@%]\\^[A-Z_]/, // ${...}\n        /[&*$@%]#?(?=\\{)/, // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/, // $1\n        /[&*$@%]\\d+/, // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkup from './markup.js'\nmarkupTemplating.displayName = 'markup-templating'\nmarkupTemplating.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function markupTemplating(Prism) {\n  Prism.register(refractorMarkup)\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorMarkupTemplating from './markup-templating.js'\nphp.displayName = 'php'\nphp.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","// @ts-nocheck\npython.displayName = 'python'\npython.aliases = ['py']\n\n/** @type {import('../core.js').Syntax} */\nexport default function python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","// @ts-nocheck\nr.displayName = 'r'\nr.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","// @ts-nocheck\nimport refractorClike from './clike.js'\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\n\n/** @type {import('../core.js').Syntax} */\nexport default function ruby(Prism) {\n  Prism.register(refractorClike)\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","// @ts-nocheck\nrust.displayName = 'rust'\nrust.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nsass.displayName = 'sass'\nsass.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sass(Prism) {\n  Prism.register(refractorCss)\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","// @ts-nocheck\nimport refractorCss from './css.js'\nscss.displayName = 'scss'\nscss.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function scss(Prism) {\n  Prism.register(refractorCss)\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","// @ts-nocheck\nsql.displayName = 'sql'\nsql.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","// @ts-nocheck\nswift.displayName = 'swift'\nswift.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","// @ts-nocheck\nimport refractorJavascript from './javascript.js'\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\n\n/** @type {import('../core.js').Syntax} */\nexport default function typescript(Prism) {\n  Prism.register(refractorJavascript)\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","// @ts-nocheck\nbasic.displayName = 'basic'\nbasic.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","// @ts-nocheck\nimport refractorBasic from './basic.js'\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Object.<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array.<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array.<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: HChild[]): Root\n     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element\n     *   (selector: string, ...children: HChild[]): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {HChild[]} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array.<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array.<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array.<string>} values\n * @returns {Object.<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {string[]} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {number[]|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      indent = options.position.indent\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","/**\n * @typedef _Token A hidden Prism token\n * @property {string} type\n * @property {string} content\n * @property {string} alias\n * @property {number} length\n *\n * @typedef _Env A hidden Prism environment\n * @property {string} type\n * @property {string} tag\n * @property {Text|RefractorElement|Array<Text|RefractorElement>} content\n * @property {Array<string>} classes\n * @property {Record<string, string>} attributes\n * @property {string} language\n *\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement|Text>}} RefractorElement\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement|Text>}} RefractorRoot\n *\n * @typedef {import('prismjs').Languages} Languages\n * @typedef {import('prismjs').Grammar} Grammar Whatever this is, Prism handles it.\n * @typedef {((prism: unknown) => void) & {displayName: string, aliases?: string[]}} Syntax A refractor syntax function\n *\n * @typedef Refractor Virtual syntax highlighting\n * @property {highlight} highlight\n * @property {alias} alias\n * @property {register} register\n * @property {registered} registered\n * @property {listLanguages} listLanguages\n * @property {Languages} languages\n */\n\n/* eslint-disable no-undef */\n// Don’t allow Prism to run on page load in browser or to start messaging from\n// workers.\n/* c8 ignore next 15 */\n/** @type {typeof globalThis} */\nconst ctx =\n  typeof globalThis === 'object'\n    ? globalThis\n    : // @ts-expect-error\n    typeof self === 'object'\n    ? // @ts-expect-error\n      self\n    : // @ts-expect-error\n    typeof window === 'object'\n    ? // @ts-expect-error\n      window\n    : typeof global === 'object'\n    ? global\n    : {}\n/* eslint-enable no-undef */\n\nconst restore = capture()\n\n/* c8 ignore next 5 */\nctx.Prism = ctx.Prism || {}\nctx.Prism.manual = true\nctx.Prism.disableWorkerMessageHandler = true\n\n/* eslint-disable import/first */\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nimport {h} from 'hastscript'\nimport {parseEntities} from 'parse-entities'\n// @ts-expect-error: untyped.\nimport Prism from 'prismjs/components/prism-core.js'\n\n/* eslint-enable import/first */\n\nrestore()\n\nconst own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n/** @type {Refractor} */\n// @ts-expect-error: TS is wrong.\nexport const refractor = new Refractor()\n\n// Create.\nrefractor.highlight = highlight\nrefractor.register = register\nrefractor.alias = alias\nrefractor.registered = registered\nrefractor.listLanguages = listLanguages\n\n// @ts-expect-error Overwrite Prism.\nrefractor.util.encode = encode\n// @ts-expect-error Overwrite Prism.\nrefractor.Token.stringify = stringify\n\n/**\n * Highlight `value` (code) as `language` (programming language).\n *\n * @param {string} value\n *   Code to highlight.\n * @param {string|Grammar} language\n *   Programming language name, alias, or grammar.\n * @returns {RefractorRoot}\n *   Node representing highlighted code.\n */\nfunction highlight(value, language) {\n  if (typeof value !== 'string') {\n    throw new TypeError('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  /** @type {Grammar} */\n  let grammar\n  /** @type {string|undefined} */\n  let name\n\n  // `name` is a grammar object.\n  if (language && typeof language === 'object') {\n    grammar = language\n  } else {\n    name = language\n\n    if (typeof name !== 'string') {\n      throw new TypeError('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refractor.languages, name)) {\n      grammar = refractor.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return {\n    type: 'root',\n    children: Prism.highlight.call(refractor, value, grammar, name)\n  }\n}\n\n/**\n * Register a syntax.\n *\n * @param {Syntax} syntax\n *   Language function made for refractor, as in, the files in\n *   `refractor/lang/*.js`.\n * @returns {void}\n */\nfunction register(syntax) {\n  // @ts-expect-error: runtime.\n  if (typeof syntax !== 'function' || !syntax.displayName) {\n    throw new Error('Expected `function` for `syntax`, got `' + syntax + '`')\n  }\n\n  // Do not duplicate registrations.\n  // @ts-expect-error: TypeScript is wrong.\n  if (!own.call(refractor.languages, syntax.displayName)) {\n    // @ts-expect-error: TypeScript is wrong.\n    syntax(refractor)\n  }\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {Record<string, string|Array<string>>|string} language\n * @param {string|Array<string>} [alias]\n * @returns {void}\n */\nfunction alias(language, alias) {\n  const languages = refractor.languages\n  /** @type {Record<string, string|Array<string>>} */\n  let map = {}\n\n  if (typeof language === 'string') {\n    if (alias) {\n      map[language] = alias\n    }\n  } else {\n    map = language\n  }\n\n  /** @type {string} */\n  let key\n\n  for (key in map) {\n    if (own.call(map, key)) {\n      const value = map[key]\n      const list = typeof value === 'string' ? [value] : value\n      let index = -1\n\n      while (++index < list.length) {\n        languages[list[index]] = languages[key]\n      }\n    }\n  }\n}\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n * @returns {boolean}\n */\nfunction registered(aliasOrLanguage) {\n  if (typeof aliasOrLanguage !== 'string') {\n    throw new TypeError(\n      'Expected `string` for `aliasOrLanguage`, got `' + aliasOrLanguage + '`'\n    )\n  }\n\n  return own.call(refractor.languages, aliasOrLanguage)\n}\n\n/**\n * List all registered languages (names and aliases).\n *\n * @returns {Array<string>}\n */\nfunction listLanguages() {\n  const languages = refractor.languages\n  /** @type {Array<string>} */\n  const list = []\n  /** @type {string} */\n  let language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\n/**\n * @param {string|_Token|Array<string|_Token>} value\n * @param {string} language\n * @returns {Text|RefractorElement|Array<Text|RefractorElement>}\n */\nfunction stringify(value, language) {\n  if (typeof value === 'string') {\n    return {type: 'text', value}\n  }\n\n  if (Array.isArray(value)) {\n    /** @type {Array<Text|RefractorElement>} */\n    const result = []\n    let index = -1\n\n    while (++index < value.length) {\n      if (\n        value[index] !== '' &&\n        value[index] !== null &&\n        value[index] !== undefined\n      ) {\n        // @ts-expect-error Assume no sub-arrays.\n        result.push(stringify(value[index], language))\n      }\n    }\n\n    return result\n  }\n\n  /** @type {_Env} */\n  const env = {\n    type: value.type,\n    content: stringify(value.content, language),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language\n  }\n\n  if (value.alias) {\n    env.classes.push(\n      ...(typeof value.alias === 'string' ? [value.alias] : value.alias)\n    )\n  }\n\n  // @ts-expect-error Prism.\n  refractor.hooks.run('wrap', env)\n\n  // @ts-expect-error Hush, it’s fine.\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\n/**\n * @template {unknown} T\n * @param {T} tokens\n * @returns {T}\n */\nfunction encode(tokens) {\n  return tokens\n}\n\n/**\n * @param {Record<string, string>} attrs\n * @returns {Record<string, string>}\n */\nfunction attributes(attrs) {\n  /** @type {string} */\n  let key\n\n  for (key in attrs) {\n    if (own.call(attrs, key)) {\n      attrs[key] = parseEntities(attrs[key])\n    }\n  }\n\n  return attrs\n}\n\n/**\n * @returns {() => void}\n */\nfunction capture() {\n  /** @type {boolean|undefined} */\n  let defined = 'Prism' in ctx\n  /* c8 ignore next */\n  let current = defined ? ctx.Prism : undefined\n\n  return restore\n\n  /**\n   * @returns {void}\n   */\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      // @ts-expect-error: hush.\n      ctx.Prism = current\n      /* c8 ignore next 4 */\n    } else {\n      // @ts-expect-error: hush.\n      delete ctx.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */\nimport clike from '../lang/clike.js'\nimport c from '../lang/c.js'\nimport cpp from '../lang/cpp.js'\nimport arduino from '../lang/arduino.js'\nimport bash from '../lang/bash.js'\nimport csharp from '../lang/csharp.js'\nimport markup from '../lang/markup.js'\nimport css from '../lang/css.js'\nimport diff from '../lang/diff.js'\nimport go from '../lang/go.js'\nimport ini from '../lang/ini.js'\nimport java from '../lang/java.js'\nimport regex from '../lang/regex.js'\nimport javascript from '../lang/javascript.js'\nimport json from '../lang/json.js'\nimport kotlin from '../lang/kotlin.js'\nimport less from '../lang/less.js'\nimport lua from '../lang/lua.js'\nimport makefile from '../lang/makefile.js'\nimport yaml from '../lang/yaml.js'\nimport markdown from '../lang/markdown.js'\nimport objectivec from '../lang/objectivec.js'\nimport perl from '../lang/perl.js'\nimport markupTemplating from '../lang/markup-templating.js'\nimport php from '../lang/php.js'\nimport python from '../lang/python.js'\nimport r from '../lang/r.js'\nimport ruby from '../lang/ruby.js'\nimport rust from '../lang/rust.js'\nimport sass from '../lang/sass.js'\nimport scss from '../lang/scss.js'\nimport sql from '../lang/sql.js'\nimport swift from '../lang/swift.js'\nimport typescript from '../lang/typescript.js'\nimport basic from '../lang/basic.js'\nimport vbnet from '../lang/vbnet.js'\nimport {refractor} from './core.js'\n\nrefractor.register(clike)\nrefractor.register(c)\nrefractor.register(cpp)\nrefractor.register(arduino)\nrefractor.register(bash)\nrefractor.register(csharp)\nrefractor.register(markup)\nrefractor.register(css)\nrefractor.register(diff)\nrefractor.register(go)\nrefractor.register(ini)\nrefractor.register(java)\nrefractor.register(regex)\nrefractor.register(javascript)\nrefractor.register(json)\nrefractor.register(kotlin)\nrefractor.register(less)\nrefractor.register(lua)\nrefractor.register(makefile)\nrefractor.register(yaml)\nrefractor.register(markdown)\nrefractor.register(objectivec)\nrefractor.register(perl)\nrefractor.register(markupTemplating)\nrefractor.register(php)\nrefractor.register(python)\nrefractor.register(r)\nrefractor.register(ruby)\nrefractor.register(rust)\nrefractor.register(sass)\nrefractor.register(scss)\nrefractor.register(sql)\nrefractor.register(swift)\nrefractor.register(typescript)\nrefractor.register(basic)\nrefractor.register(vbnet)\n\nexport {refractor} from './core.js'\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Decoration, DecorationSet, findChildren, Node } from '@milkdown/prose';\nimport type { RefractorElement, Text } from 'refractor/lib/common';\nimport type { Refractor } from 'refractor/lib/core';\n\nexport type FlattedNode = {\n    text: string;\n    className: string[];\n};\n\ntype RefractorNode = RefractorElement | Text;\n\nconst flatNodes = (nodes: RefractorNode[], className: string[] = []) =>\n    nodes.flatMap((node): FlattedNode[] =>\n        node.type === 'element'\n            ? flatNodes(node.children, [...className, ...((node.properties?.['className'] as string[]) || [])])\n            : [{ text: node.value, className }],\n    );\n\nexport function getDecorations(doc: Node, name: string, refractor: Refractor) {\n    const { highlight, listLanguages } = refractor;\n    const allLanguages = listLanguages();\n    const decorations: Decoration[] = [];\n\n    findChildren((node) => node.type.name === name)(doc).forEach((block) => {\n        let from = block.pos + 1;\n        const { language } = block.node.attrs;\n        if (!language || !allLanguages.includes(language)) {\n            console.warn('Unsupported language detected, this language has not been supported by prism: ', language);\n            return;\n        }\n        const nodes = highlight(block.node.textContent, language);\n\n        flatNodes(nodes.children).forEach((node) => {\n            const to = from + node.text.length;\n\n            if (node.className.length) {\n                const decoration = Decoration.inline(from, to, {\n                    class: node.className.join(' '),\n                });\n\n                decorations.push(decoration);\n            }\n\n            from = to;\n        });\n    });\n\n    return DecorationSet.create(doc, decorations);\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { findChildren, Plugin, PluginKey } from '@milkdown/prose';\nimport { refractor } from 'refractor/lib/common';\n\nimport type { Options } from '.';\nimport { getDecorations } from './get-decorations';\n\nexport const key = 'MILKDOWN_PLUGIN_PRISM';\n\nexport function Prism(options: Options): Plugin {\n    const { nodeName: name, configureRefractor } = options;\n    return new Plugin({\n        key: new PluginKey(key),\n        state: {\n            init: (_, { doc }) => {\n                configureRefractor(refractor);\n                return getDecorations(doc, name, refractor);\n            },\n            apply: (transaction, decorationSet, oldState, state) => {\n                const isNodeName = state.selection.$head.parent.type.name === name;\n                const isPreviousNodeName = oldState.selection.$head.parent.type.name === name;\n                const oldNode = findChildren((node) => node.type.name === name)(oldState.doc);\n                const newNode = findChildren((node) => node.type.name === name)(state.doc);\n                const codeBlockChanged =\n                    transaction.docChanged &&\n                    (isNodeName ||\n                        isPreviousNodeName ||\n                        oldNode.length !== newNode.length ||\n                        oldNode[0]?.node.attrs['language'] !== newNode[0]?.node.attrs['language'] ||\n                        transaction.steps.some((step) => {\n                            const s = step as unknown as { from: number; to: number };\n                            return (\n                                s.from !== undefined &&\n                                s.to !== undefined &&\n                                oldNode.some((node) => {\n                                    return node.pos >= s.from && node.pos + node.node.nodeSize <= s.to;\n                                })\n                            );\n                        }));\n\n                if (codeBlockChanged) {\n                    return getDecorations(transaction.doc, name, refractor);\n                }\n\n                return decorationSet.map(transaction.mapping, transaction.doc);\n            },\n        },\n        props: {\n            decorations(state) {\n                return this.getState(state);\n            },\n        },\n    });\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { $prose } from '@milkdown/utils';\nimport type { Refractor } from 'refractor/lib/core';\n\nimport { Prism } from './prism';\n\nexport type Options = {\n    nodeName: string;\n    configureRefractor: (refractor: Refractor) => void;\n};\n\nexport const prismPlugin = (options: Partial<Options> = {}) => {\n    const overrideOptions: Options = {\n        nodeName: 'fence',\n        configureRefractor: () => {\n            // doNothing\n        },\n        ...options,\n    };\n\n    return $prose(() => {\n        return Prism(overrideOptions);\n    });\n};\n\nexport const prism = prismPlugin();\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorState, findParentNode, MarkType, Node, NodeType, TextSelection } from '@milkdown/prose';\n\nexport type Position = {\n    start: number;\n    end: number;\n};\n\nexport const hasMark = (editorState: EditorState, type?: MarkType): boolean => {\n    if (!type) {\n        return false;\n    }\n    const { from, to } = editorState.selection;\n\n    return editorState.doc.rangeHasMark(from, from === to ? to + 1 : to, type);\n};\n\nexport const isTextSelection = (editorState: EditorState): boolean => {\n    const { selection } = editorState;\n    if (selection instanceof TextSelection) {\n        const text = editorState.doc.textBetween(selection.from, selection.to);\n\n        if (!text) return false;\n\n        return true;\n    }\n    return false;\n};\n\nexport const isInCodeFence = (editorState: EditorState): boolean =>\n    Boolean(findParentNode((node) => !!node.type.spec.code)(editorState.selection));\n\nexport const isTextAndNotHasMark = (editorState: EditorState, mark?: MarkType): boolean =>\n    !isTextSelection(editorState) || isInCodeFence(editorState) || hasMark(editorState, mark);\n\nexport const equalNodeType = (nodeType: NodeType, node: Node) => {\n    return (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) || node.type === nodeType;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, Ctx, ThemeIcon, themeManagerCtx } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport type { MarkType } from '@milkdown/prose';\n\nimport type { ButtonItem } from '../item';\nimport { hasMark, isTextAndNotHasMark } from './prosemirror';\n\nexport const createToggleIcon = (\n    ctx: Ctx,\n    iconName: Icon,\n    key: string,\n    mark: MarkType | undefined,\n    disableForMark: MarkType | undefined,\n): ButtonItem => ({\n    $: ctx.get(themeManagerCtx).get(ThemeIcon, iconName)?.dom as HTMLElement,\n    command: () => ctx.get(commandsCtx).call(key),\n    active: (view) => hasMark(view.state, mark),\n    disable: (view) => isTextAndNotHasMark(view.state, disableForMark),\n    enable: (view) => !!mark && !!view.state.schema.marks[mark.name],\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, Ctx, ThemeIcon, themeManagerCtx } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport { EditorView, Schema } from '@milkdown/prose';\n\nimport { createToggleIcon } from './utility';\n\nexport type Pred = (view: EditorView) => boolean;\nexport type Updater = (view: EditorView, $: HTMLElement) => void;\nexport type Event2Command = (e: Event) => void;\n\nexport type OnClick = (ctx: Ctx) => void;\n\nexport type Item = {\n    icon: Icon | ((ctx: Ctx) => HTMLElement);\n\n    onClick: string | ((ctx: Ctx) => () => void);\n\n    isHidden: (ctx: Ctx) => Pred;\n\n    isActive: (ctx: Ctx) => Pred;\n};\n\nexport type ButtonItem = {\n    $: HTMLElement;\n    command: () => void;\n    active: Pred;\n    disable?: Pred;\n    enable: Pred;\n};\n\nconst Buttonize = ({ icon, onClick, isHidden, isActive }: Item, ctx: Ctx): ButtonItem => ({\n    $: typeof icon === 'function' ? icon(ctx) : (ctx.get(themeManagerCtx).get(ThemeIcon, icon)?.dom as HTMLElement),\n    command: typeof onClick === 'string' ? () => ctx.get(commandsCtx).call(onClick) : onClick(ctx),\n    disable: isHidden(ctx),\n    active: isActive(ctx),\n    enable: (view: EditorView) => !isHidden(ctx)(view),\n});\n\nexport enum ButtonAction {\n    ToggleBold,\n    ToggleItalic,\n    ToggleStrike,\n    ToggleCode,\n    ToggleLink,\n}\n\nexport type ButtonMap = Record<ButtonAction, ButtonItem>;\n\nexport type TooltipOptions = {\n    bottom: boolean;\n    items: Array<Item> | undefined;\n};\n\nexport const buttonMap = (schema: Schema, ctx: Ctx, items: Array<Item> | undefined): ButtonMap => {\n    const { marks } = schema;\n    const ButtonItems = Array<ButtonItem>();\n    if (typeof items !== 'undefined') {\n        (items as Array<Item>).forEach((item) => {\n            ButtonItems.push(Buttonize(item, ctx));\n        });\n    }\n    return {\n        [ButtonAction.ToggleBold]: createToggleIcon(ctx, 'bold', 'ToggleBold', marks['strong'], marks['code_inline']),\n        [ButtonAction.ToggleItalic]: createToggleIcon(ctx, 'italic', 'ToggleItalic', marks['em'], marks['code_inline']),\n        [ButtonAction.ToggleStrike]: createToggleIcon(\n            ctx,\n            'strikeThrough',\n            'ToggleStrikeThrough',\n            marks['strike_through'],\n            marks['code_inline'],\n        ),\n        [ButtonAction.ToggleCode]: createToggleIcon(\n            ctx,\n            'code',\n            'ToggleInlineCode',\n            marks['code_inline'],\n            marks['link'],\n        ),\n        [ButtonAction.ToggleLink]: createToggleIcon(ctx, 'link', 'ToggleLink', marks['link'], marks['code_inline']),\n        ...ButtonItems,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose';\nimport type { Utils } from '@milkdown/utils';\n\nimport type { ButtonMap } from '../item';\nimport { injectStyle } from './style';\n\ntype Tooltip = {\n    dom: HTMLDivElement;\n    render: (editorView: EditorView) => void;\n};\n\nexport const createTooltip = (buttonMap: ButtonMap, utils: Utils, className: string): Tooltip => {\n    const div = document.createElement('div');\n    utils.themeManager.onFlush(() => {\n        const style = utils.getStyle((emotion) => injectStyle(utils.themeManager, emotion)) || '';\n        if (style) {\n            div.classList.add(style);\n        }\n    });\n\n    div.classList.add(utils.getClassName({}, className));\n\n    return {\n        dom: div,\n        render: (editorView: EditorView) => {\n            Object.values(buttonMap)\n                .filter((item) => item.enable(editorView) && item.$ != null)\n                .forEach(({ $ }) => div.appendChild($));\n\n            editorView.dom.parentNode?.appendChild(div);\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, Emotion, ThemeBorder, ThemeColor, ThemeManager, ThemeShadow, ThemeSize } from '@milkdown/core';\n\nexport const injectStyle = (themeManager: ThemeManager, { css }: Emotion) => {\n    const palette = (color: Color, opacity = 1) => themeManager.get(ThemeColor, [color, opacity]);\n    const lineWidth = themeManager.get(ThemeSize, 'lineWidth');\n    return css`\n        display: inline-flex;\n        cursor: pointer;\n        justify-content: space-evenly;\n        position: absolute;\n        border-radius: ${themeManager.get(ThemeSize, 'radius')};\n        z-index: 2;\n\n        ${themeManager.get(ThemeBorder, undefined)}\n        ${themeManager.get(ThemeShadow, undefined)}\n\n        overflow: hidden;\n        background: ${palette('surface')};\n\n        .icon {\n            position: relative;\n            color: ${palette('solid', 0.87)};\n\n            width: 2em;\n            line-height: 2em;\n            text-align: center;\n            transition: all 0.4s ease-in-out;\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n            &.active {\n                color: ${palette('primary')};\n            }\n            &:not(:last-child)::after {\n                content: '';\n                position: absolute;\n                top: 0;\n                right: calc(-0.5 * ${lineWidth});\n                width: ${lineWidth};\n                bottom: 0;\n                background: ${palette('line')};\n            }\n        }\n        &.hide,\n        .hide {\n            display: none;\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose';\n\nimport { ButtonMap } from '../item';\nimport { noActive } from './no-active';\n\nexport const filterButton = (buttonMap: ButtonMap, view: EditorView) => {\n    Object.values(buttonMap)\n        .filter((item) => item.enable(view) && item.$ != null)\n        .forEach((item) => {\n            const disable = item.disable?.(view);\n            if (disable) {\n                item.$.classList.add('hide');\n                return;\n            }\n\n            item.$.classList.remove('hide');\n\n            const active = item.active(view);\n            if (active) {\n                item.$.classList.add('active');\n                return;\n            }\n            item.$.classList.remove('active');\n        });\n\n    return noActive(buttonMap, view);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { EditorView } from '@milkdown/prose';\n\nimport { ButtonMap } from '../item';\n\nexport const noActive = (buttonMap: ButtonMap, view: EditorView) => {\n    return Object.values(buttonMap)\n        .filter((item) => item.enable(view) && item.$ != null)\n        .every(({ $ }) => $.classList.contains('hide'));\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from '@milkdown/prose';\nimport type { Utils } from '@milkdown/utils';\n\nimport type { ButtonMap } from '../item';\nimport { calcButtonPos } from './calc-button-pos';\nimport { createTooltip } from './create-tooltip';\nimport { filterButton } from './filter-button';\n\nexport const createButtonManager = (\n    buttonMap: ButtonMap,\n    utils: Utils,\n    bottom: boolean,\n    containerClassName: string,\n) => {\n    const { dom: buttons, render } = createTooltip(buttonMap, utils, containerClassName);\n\n    const onClick = (e: Event) => {\n        const target = Object.values(buttonMap).find(({ $ }) => e.target instanceof Element && $.contains(e.target));\n        if (!target) return;\n\n        e.stopPropagation();\n        e.preventDefault();\n        target.command();\n    };\n\n    const hide = () => {\n        buttons.classList.add('hide');\n    };\n\n    buttons.addEventListener('mousedown', onClick);\n\n    return {\n        destroy: () => {\n            buttons.removeEventListener('mousedown', onClick);\n            buttons.remove();\n        },\n        hide,\n        update: (editorView: EditorView) => {\n            const noActive = filterButton(buttonMap, editorView);\n            if (noActive) {\n                hide();\n                return;\n            }\n            calcButtonPos(buttons, editorView, bottom);\n        },\n        render,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { calculateTextPosition, EditorView } from '@milkdown/prose';\n\nexport const calcButtonPos = (buttons: HTMLElement, view: EditorView, isBottom: boolean) => {\n    buttons.classList.remove('hide');\n    calculateTextPosition(view, buttons, (start, end, target, parent) => {\n        const $editor = buttons.parentElement;\n        if (!$editor) {\n            throw new Error();\n        }\n        const selectionWidth = end.left - start.left;\n        let left = start.left - parent.left - (target.width - selectionWidth) / 2;\n        let top = start.top - parent.top - target.height - 14 + $editor.scrollTop;\n\n        if (left < 0) left = 0;\n\n        if (start.top - parent.top < target.height || (isBottom && parent.bottom - start.bottom > target.height)) {\n            top = start.bottom - parent.top + 14 + $editor.scrollTop;\n        }\n        return [top, left];\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorState, EditorView } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport { createButtonManager } from './button-manager';\nimport type { ButtonMap } from './item';\n\nexport const createPlugin = (buttonMap: ButtonMap, utils: Utils, bottom: boolean, containerClassName: string) => {\n    let buttonManager = createButtonManager(buttonMap, utils, bottom, containerClassName);\n    let shouldHide = false;\n\n    const hide = () => {\n        buttonManager.hide();\n    };\n\n    const update = (view: EditorView, prevState?: EditorState) => {\n        const { state } = view;\n\n        if (!view.editable || shouldHide) {\n            hide();\n            return;\n        }\n\n        const isEqualSelection = prevState?.doc.eq(state.doc) && prevState.selection.eq(state.selection);\n        if (isEqualSelection) return;\n\n        buttonManager.update(view);\n    };\n\n    return {\n        recreate: (editorView: EditorView) => {\n            buttonManager = createButtonManager(buttonMap, utils, bottom, containerClassName);\n            buttonManager.render(editorView);\n            update(editorView);\n        },\n        update,\n        destroy: () => {\n            buttonManager.destroy();\n        },\n        render: (editorView: EditorView) => {\n            buttonManager.render(editorView);\n            update(editorView);\n        },\n        setHide: (isTyping: boolean) => {\n            shouldHide = isTyping;\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { schemaCtx } from '@milkdown/core';\nimport { Plugin, PluginKey } from '@milkdown/prose';\nimport { AtomList, createPlugin as create } from '@milkdown/utils';\n\nimport { buttonMap, TooltipOptions } from './item';\nimport { createPlugin } from './selection-marks-tooltip';\n\nexport const key = new PluginKey('MILKDOWN_PLUGIN_TOOLTIP');\n\nexport const tooltipPlugin = create<string, TooltipOptions>((utils, options) => {\n    return {\n        id: 'tooltip',\n        prosePlugins: (_, ctx) => {\n            const schema = ctx.get(schemaCtx);\n            const manager = createPlugin(\n                buttonMap(schema, ctx, options?.items),\n                utils,\n                options?.bottom ?? false,\n                'tooltip',\n            );\n            const plugin = new Plugin({\n                key,\n                props: {\n                    handleKeyDown: () => {\n                        manager.setHide(true);\n                        return false;\n                    },\n                    handleClick: (view) => {\n                        manager.setHide(false);\n                        manager.update(view);\n                        return false;\n                    },\n                    handleDOMEvents: {\n                        mousedown: () => {\n                            manager.setHide(false);\n                            return false;\n                        },\n                    },\n                },\n                view: (editorView) => {\n                    manager.recreate(editorView);\n                    return {\n                        update: manager.update,\n                        destroy: manager.destroy,\n                    };\n                },\n            });\n            return [plugin];\n        },\n    };\n});\n\nexport const tooltip = AtomList.create([tooltipPlugin()]);\n","import _typeof from \"./typeof.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport inherits from \"./inherits.js\";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, void 0, groups);\n  };\n\n  var _super = RegExp.prototype,\n      _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n\n    return _groups.set(_this, groups || _groups.get(re)), setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      return groups[name] = result[g[name]], groups;\n    }, Object.create(null));\n  }\n\n  return inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    return result && (result.groups = buildGroups(result, this)), result;\n  }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (\"string\" == typeof substitution) {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    }\n\n    if (\"function\" == typeof substitution) {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        return \"object\" != _typeof(args[args.length - 1]) && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args);\n      });\n    }\n\n    return _super[Symbol.replace].call(this, str, substitution);\n  }, _wrapRegExp.apply(this, arguments);\n}","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {CONTINUE|SKIP|EXIT} Action Union of the action types\n * @typedef {number} Index Move to the sibling at index next (after node itself is completely traversed). Useful if mutating the tree, such as removing the node the visitor is currently on, or any of its previous siblings (or next siblings, in case of reverse) Results less than 0 or greater than or equal to children.length stop traversing the parent\n * @typedef {[(Action|null|undefined|void)?, (Index|null|undefined)?]} ActionTuple List with one or two values, the first an action, the second an index.\n * @typedef {null|undefined|Action|Index|ActionTuple|void} VisitorResult Any value that can be returned from a visitor\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {Array.<Parent>} ancestors Ancestors of node\n * @returns {VisitorResult}\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-ignore no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      var is = convert(test)\n      var step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        var value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string} */\n        var name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          var result = []\n          /** @type {ActionTuple} */\n          var subresult\n          /** @type {number} */\n          var offset\n          /** @type {Array.<Parent>} */\n          var grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          if (node.children && result[0] !== SKIP) {\n            // @ts-ignore looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-ignore looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-ignore looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Invoked when a node (matching test, if given) is found.\n * Visitors are free to transform node.\n * They can also transform the parent of node (the last of ancestors).\n * Replacing node itself, if `SKIP` is not returned, still causes its descendants to be visited.\n * If adding or removing previous siblings (or next siblings, in case of reverse) of node,\n * visitor should return a new index (number) to specify the sibling to traverse after node is traversed.\n * Adding or removing next siblings of node (or previous siblings, in case of reverse)\n * is handled as expected without needing to return a new index.\n * Removing the children property of an ancestor still results in them being traversed.\n *\n * @template {Node} V\n * @callback Visitor\n * @param {V} node Found node\n * @param {number|null} index Position of `node` in `parent`\n * @param {Parent|null} parent Parent of `node`\n * @returns {VisitorResult}\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\nexport const visit =\n  /**\n   * @type {(\n   *   (<T extends Node>(tree: Node, test: T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|import('unist-util-is').TestFunctionPredicate<T>>, visitor: Visitor<T>, reverse?: boolean) => void) &\n   *   ((tree: Node, test: Test, visitor: Visitor<Node>, reverse?: boolean) => void) &\n   *   ((tree: Node, visitor: Visitor<Node>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * Visit children of tree which pass a test\n     *\n     * @param {Node} tree Abstract syntax tree to walk\n     * @param {Test} test test Test node\n     * @param {Visitor<Node>} visitor Function to run for each node\n     * @param {boolean} [reverse] Fisit the tree in reverse, defaults to false\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        var parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Link} Link\n */\n\nimport {visit, SKIP} from 'unist-util-visit'\nimport {definitions} from 'mdast-util-definitions'\n\n/**\n * Plugin to transform references and definitions into normal links and images.\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkInlineLinks() {\n  return (tree) => {\n    const definition = definitions(tree)\n\n    visit(tree, (node, index, parent) => {\n      if (\n        node.type === 'definition' &&\n        parent !== null &&\n        typeof index === 'number'\n      ) {\n        parent.children.splice(index, 1)\n        return [SKIP, index]\n      }\n\n      if (node.type === 'imageReference' || node.type === 'linkReference') {\n        const def = definition(node.identifier)\n\n        if (def && parent !== null && typeof index === 'number') {\n          /** @type {Image|Link} */\n          const replacement =\n            node.type === 'imageReference'\n              ? {type: 'image', url: def.url, title: def.title, alt: node.alt}\n              : {\n                  type: 'link',\n                  url: def.url,\n                  title: def.title,\n                  children: node.children\n                }\n\n          parent.children[index] = replacement\n          return [SKIP, index]\n        }\n      }\n    })\n  }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nexport const SupportedKeys = {\n    HardBreak: 'HardBreak',\n    Blockquote: 'Blockquote',\n    BulletList: 'BulletList',\n    OrderedList: 'OrderedList',\n    CodeFence: 'CodeFence',\n    H1: 'H1',\n    H2: 'H2',\n    H3: 'H3',\n    H4: 'H4',\n    H5: 'H5',\n    H6: 'H6',\n    Text: 'Text',\n    CodeInline: 'CodeInline',\n    Em: 'Em',\n    Bold: 'Bold',\n    NextListItem: 'NextListItem',\n    SinkListItem: 'SinkListItem',\n    LiftListItem: 'LiftListItem',\n} as const;\n\nexport type SupportedKeys = typeof SupportedKeys;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { markRule, toggleMark } from '@milkdown/prose';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['CodeInline'];\nconst id = 'code_inline';\n\nexport const ToggleInlineCode = createCmdKey('ToggleInlineCode');\n\nexport const codeInline = createMark<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            priority: 100,\n            code: true,\n            inclusive: false,\n            parseDOM: [{ tag: 'code' }],\n            toDOM: (mark) => ['code', { class: utils.getClassName(mark.attrs, 'code-inline') }],\n            parseMarkdown: {\n                match: (node) => node.type === 'inlineCode',\n                runner: (state, node, markType) => {\n                    state.openMark(markType);\n                    state.addText(node['value'] as string);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark, node) => {\n                    state.withMark(mark, 'inlineCode', node.text || '');\n                },\n            },\n        }),\n        inputRules: (markType) => [markRule(/(?:^|[^`])(`([^`]+)`)$/, markType)],\n        commands: (markType) => [createCmd(ToggleInlineCode, () => toggleMark(markType))],\n        shortcuts: {\n            [SupportedKeys.CodeInline]: createShortcut(ToggleInlineCode, 'Mod-e'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { markRule, toggleMark } from '@milkdown/prose';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Em'];\n\nconst id = 'em';\n\nexport const ToggleItalic = createCmdKey('ToggleItalic');\n\nexport const em = createMark<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        parseDOM: [\n            { tag: 'i' },\n            { tag: 'em' },\n            { style: 'font-style', getAttrs: (value) => (value === 'italic') as false },\n        ],\n        toDOM: (mark) => ['em', { class: utils.getClassName(mark.attrs, id) }],\n        parseMarkdown: {\n            match: (node) => node.type === 'emphasis',\n            runner: (state, node, markType) => {\n                state.openMark(markType);\n                state.next(node.children);\n                state.closeMark(markType);\n            },\n        },\n        toMarkdown: {\n            match: (mark) => mark.type.name === id,\n            runner: (state, mark) => {\n                state.withMark(mark, 'emphasis');\n            },\n        },\n    }),\n    inputRules: (markType) => [\n        markRule(/(?:^|[^_])(_([^_]+)_)$/, markType),\n        markRule(/(?:^|[^*])(\\*([^*]+)\\*)$/, markType),\n    ],\n    commands: (markType) => [createCmd(ToggleItalic, () => toggleMark(markType))],\n    shortcuts: {\n        [SupportedKeys.Em]: createShortcut(ToggleItalic, 'Mod-i'),\n    },\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, createCmd, createCmdKey, schemaCtx, ThemeInputChipType } from '@milkdown/core';\nimport {\n    EditorView,\n    InputRule,\n    Node as ProseNode,\n    Plugin,\n    PluginKey,\n    TextSelection,\n    toggleMark,\n} from '@milkdown/prose';\nimport { createMark } from '@milkdown/utils';\n\nconst key = new PluginKey('MILKDOWN_PLUGIN_LINK_INPUT');\n\nexport const ToggleLink = createCmdKey<string>('ToggleLink');\nexport const ModifyLink = createCmdKey<string>('ModifyLink');\nconst id = 'link';\nexport type LinkOptions = {\n    input: {\n        placeholder: string;\n        buttonText?: string;\n    };\n};\nexport const link = createMark<string, LinkOptions>((utils, options) => {\n    return {\n        id,\n        schema: () => ({\n            attrs: {\n                href: {},\n                title: { default: null },\n            },\n            inclusive: false,\n            parseDOM: [\n                {\n                    tag: 'a[href]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw new Error();\n                        }\n                        return { href: dom.getAttribute('href'), title: dom.getAttribute('title') };\n                    },\n                },\n            ],\n            toDOM: (mark) => ['a', { ...mark.attrs, class: utils.getClassName(mark.attrs, id) }],\n            parseMarkdown: {\n                match: (node) => node.type === 'link',\n                runner: (state, node, markType) => {\n                    const url = node['url'] as string;\n                    const title = node['title'] as string;\n                    state.openMark(markType, { href: url, title });\n                    state.next(node.children);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark) => {\n                    state.withMark(mark, 'link', undefined, {\n                        title: mark.attrs['title'],\n                        url: mark.attrs['href'],\n                    });\n                },\n            },\n        }),\n        commands: (markType) => [\n            createCmd(ToggleLink, (href = '') => toggleMark(markType, { href })),\n            createCmd(ModifyLink, (href = '') => (state, dispatch) => {\n                if (!dispatch) return false;\n\n                const { marks } = state.schema;\n\n                let node: ProseNode | undefined;\n                let pos = -1;\n                const { selection } = state;\n                state.doc.nodesBetween(selection.from, selection.to, (n, p) => {\n                    if (marks.link.isInSet(n.marks)) {\n                        node = n;\n                        pos = p;\n                        return false;\n                    }\n                    return;\n                });\n                if (!node) return false;\n\n                const mark = node.marks.find(({ type }) => type === markType);\n                if (!mark) return false;\n\n                const start = pos;\n                const end = pos + node.nodeSize;\n                const { tr } = state;\n                const linkMark = marks.link.create({ ...mark.attrs, href });\n                dispatch(\n                    tr\n                        .removeMark(start, end, mark)\n                        .addMark(start, end, linkMark)\n                        .setSelection(new TextSelection(tr.selection.$anchor))\n                        .scrollIntoView(),\n                );\n\n                return true;\n            }),\n        ],\n        inputRules: (markType, ctx) => [\n            new InputRule(/\\[(?<text>.*?)]\\((?<href>.*?)(?=“|\\))\"?(?<title>[^\"]+)?\"?\\)/, (state, match, start, end) => {\n                const [okay, text = '', href, title] = match;\n                const { tr } = state;\n                if (okay) {\n                    const content = text || 'link';\n                    tr.replaceWith(start, end, ctx.get(schemaCtx).text(content)).addMark(\n                        start,\n                        content.length + start,\n                        markType.create({ title, href }),\n                    );\n                }\n\n                return tr;\n            }),\n        ],\n        prosePlugins: (type, ctx) => {\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                            placeholder: options?.input?.placeholder ?? 'Input Web Link',\n                            buttonText: options?.input?.buttonText,\n                            onUpdate: (value) => {\n                                ctx.get(commandsCtx).call(ModifyLink, value);\n                            },\n                        });\n                        if (!inputChipRenderer) return {};\n                        const shouldDisplay = (view: EditorView) => {\n                            const { selection, doc } = view.state;\n                            const { from, to } = selection;\n\n                            return (\n                                view.hasFocus() &&\n                                selection.empty &&\n                                selection instanceof TextSelection &&\n                                doc.rangeHasMark(from, from === to ? to + 1 : to, type)\n                            );\n                        };\n                        const getCurrentLink = (view: EditorView) => {\n                            const { selection } = view.state;\n                            let node: ProseNode | undefined;\n                            const { from, to } = selection;\n                            view.state.doc.nodesBetween(from, from === to ? to + 1 : to, (n) => {\n                                if (type.isInSet(n.marks)) {\n                                    node = n;\n                                    return false;\n                                }\n                                return;\n                            });\n                            if (!node) return;\n\n                            const mark = node.marks.find((m) => m.type === type);\n                            if (!mark) return;\n\n                            const value = mark.attrs['href'];\n                            return value;\n                        };\n                        const renderByView = (view: EditorView) => {\n                            if (!view.editable) {\n                                return;\n                            }\n                            const display = shouldDisplay(view);\n                            if (display) {\n                                inputChipRenderer.show(view);\n                                inputChipRenderer.update(getCurrentLink(view));\n                            } else {\n                                inputChipRenderer.hide();\n                            }\n                        };\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                renderByView(view);\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { markRule, toggleMark } from '@milkdown/prose';\nimport { createMark, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Bold'];\nconst id = 'strong';\nexport const ToggleBold = createCmdKey('ToggleBold');\nexport const strong = createMark<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            parseDOM: [\n                { tag: 'b' },\n                { tag: 'strong' },\n                { style: 'font-style', getAttrs: (value) => (value === 'bold') as false },\n            ],\n            toDOM: (mark) => ['strong', { class: utils.getClassName(mark.attrs, id) }],\n            parseMarkdown: {\n                match: (node) => node.type === 'strong',\n                runner: (state, node, markType) => {\n                    state.openMark(markType);\n                    state.next(node.children);\n                    state.closeMark(markType);\n                },\n            },\n            toMarkdown: {\n                match: (mark) => mark.type.name === id,\n                runner: (state, mark) => {\n                    state.withMark(mark, 'strong');\n                },\n            },\n        }),\n        inputRules: (markType) => [\n            markRule(/(?:__)([^_]+)(?:__)$/, markType),\n            markRule(/(?:\\*\\*)([^*]+)(?:\\*\\*)$/, markType),\n        ],\n        commands: (markType) => [createCmd(ToggleBold, () => toggleMark(markType))],\n        shortcuts: {\n            [SupportedKeys.Bold]: createShortcut(ToggleBold, 'Mod-b'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { codeInline } from './code-inline';\nimport { em } from './em';\nimport { link } from './link';\nimport { strong } from './strong';\n\nexport const marks = [codeInline(), em(), strong(), link()];\n\nexport * from './code-inline';\nexport * from './em';\nexport * from './link';\nexport * from './strong';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { wrapIn, wrappingInputRule } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Blockquote'];\n\nconst id = 'blockquote';\n\nexport const WrapInBlockquote = createCmdKey('WrapInBlockquote');\n\nexport const blockquote = createNode<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            content: 'block+',\n            group: 'block',\n            defining: true,\n            parseDOM: [{ tag: 'blockquote' }],\n            toDOM: (node) => ['blockquote', { class: utils.getClassName(node.attrs, id) }, 0],\n            parseMarkdown: {\n                match: ({ type }) => type === id,\n                runner: (state, node, type) => {\n                    state.openNode(type).next(node.children).closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.openNode('blockquote').next(node.content).closeNode();\n                },\n            },\n        }),\n        inputRules: (nodeType) => [wrappingInputRule(/^\\s*>\\s$/, nodeType)],\n        commands: (nodeType) => [createCmd(WrapInBlockquote, () => wrapIn(nodeType))],\n        shortcuts: {\n            [SupportedKeys.Blockquote]: createShortcut(WrapInBlockquote, 'Mod-Shift-b'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { wrapIn, wrappingInputRule } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['BulletList'];\n\nexport const WrapInBulletList = createCmdKey('WrapInBulletList');\n\nexport const bulletList = createNode<Keys>((utils) => {\n    const id = 'bullet_list';\n    return {\n        id,\n        schema: () => ({\n            content: 'listItem+',\n            group: 'block',\n            parseDOM: [{ tag: 'ul' }],\n            toDOM: (node) => {\n                return ['ul', { class: utils.getClassName(node.attrs, 'bullet-list') }, 0];\n            },\n            parseMarkdown: {\n                match: ({ type, ordered }) => type === 'list' && !ordered,\n                runner: (state, node, type) => {\n                    state.openNode(type).next(node.children).closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.openNode('list', undefined, { ordered: false }).next(node.content).closeNode();\n                },\n            },\n        }),\n        inputRules: (nodeType) => [wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)],\n        commands: (nodeType) => [createCmd(WrapInBulletList, () => wrapIn(nodeType))],\n        shortcuts: {\n            [SupportedKeys.BulletList]: createShortcut(WrapInBulletList, 'Mod-Alt-8'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, editorViewCtx, ThemeCodeFenceType } from '@milkdown/core';\nimport { Fragment, setBlockType, textblockTypeInputRule } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['CodeFence'];\n\nconst languageOptions = [\n    '',\n    'javascript',\n    'typescript',\n    'bash',\n    'sql',\n    'json',\n    'html',\n    'css',\n    'c',\n    'cpp',\n    'java',\n    'ruby',\n    'python',\n    'go',\n    'rust',\n    'markdown',\n];\n\nexport const backtickInputRegex = /^```(?<language>[a-z]*)?[\\s\\n]$/;\nexport const tildeInputRegex = /^~~~(?<language>[a-z]*)?[\\s\\n]$/;\n\nexport const TurnIntoCodeFence = createCmdKey('TurnIntoCodeFence');\n\nconst id = 'fence';\nexport const codeFence = createNode<Keys, { languageList?: string[] }>((utils, options) => {\n    const languageList = options?.languageList || languageOptions;\n\n    return {\n        id,\n        schema: (ctx) => ({\n            content: 'text*',\n            group: 'block',\n            marks: '',\n            defining: true,\n            code: true,\n            attrs: {\n                language: {\n                    default: '',\n                },\n                fold: {\n                    default: true,\n                },\n            },\n            parseDOM: [\n                {\n                    tag: 'div.code-fence-container',\n                    preserveWhitespace: 'full',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw new Error('Parse DOM error.');\n                        }\n                        return { language: dom.querySelector('pre')?.dataset['language'] };\n                    },\n                    getContent: (dom, schema) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw new Error('Parse DOM error.');\n                        }\n                        const textNode = schema.text(dom.querySelector('pre')?.textContent ?? '');\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        return Fragment.from<any>(textNode);\n                    },\n                },\n                {\n                    tag: 'pre',\n                    preserveWhitespace: 'full',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw new Error('Parse DOM error.');\n                        }\n                        return { language: dom.dataset['language'] };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                const select = document.createElement('select');\n                languageList.forEach((lang) => {\n                    const option = document.createElement('option');\n                    option.value = lang;\n                    option.innerText = !lang ? '--' : lang;\n                    if (lang === node.attrs['language']) {\n                        option.selected = true;\n                    }\n                    select.appendChild(option);\n                });\n                select.onchange = (e) => {\n                    const target = e.target;\n                    if (!(target instanceof HTMLSelectElement)) {\n                        return;\n                    }\n                    const view = ctx.get(editorViewCtx);\n                    if (!view.editable) {\n                        target.value = node.attrs['language'];\n                        return;\n                    }\n\n                    const { top, left } = target.getBoundingClientRect();\n                    const result = view.posAtCoords({ top, left });\n                    if (!result) return;\n\n                    const { tr } = view.state;\n\n                    view.dispatch(\n                        tr.setNodeMarkup(result.inside, undefined, {\n                            ...node.attrs,\n                            language: target.value,\n                        }),\n                    );\n                };\n                return [\n                    'div',\n                    {\n                        class: 'code-fence-container',\n                    },\n                    select,\n                    [\n                        'pre',\n                        {\n                            'data-language': node.attrs['language'],\n                            class: utils.getClassName(node.attrs, 'code-fence'),\n                        },\n                        ['code', { spellCheck: 'false' }, 0],\n                    ],\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === 'code',\n                runner: (state, node, type) => {\n                    const language = node['lang'] as string;\n                    const value = node['value'] as string;\n                    state.openNode(type, { language });\n                    if (value) {\n                        state.addText(value);\n                    }\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.addNode('code', undefined, node.content.firstChild?.text || '', {\n                        lang: node.attrs['language'],\n                    });\n                },\n            },\n        }),\n        inputRules: (nodeType) => [\n            textblockTypeInputRule(backtickInputRegex, nodeType, (match) => {\n                const [ok, language] = match;\n                if (!ok) return;\n                return { language };\n            }),\n            textblockTypeInputRule(tildeInputRegex, nodeType, (match) => {\n                const [ok, language] = match;\n                if (!ok) return;\n                return { language };\n            }),\n        ],\n        commands: (nodeType) => [createCmd(TurnIntoCodeFence, () => setBlockType(nodeType))],\n        shortcuts: {\n            [SupportedKeys.CodeFence]: createShortcut(TurnIntoCodeFence, 'Mod-Alt-c'),\n        },\n        view: () => (node, view, getPos) => {\n            let currNode = node;\n\n            const onSelectLanguage = (language: string) => {\n                const { tr } = view.state;\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        fold: true,\n                        language,\n                    }),\n                );\n            };\n            const onBlur = () => {\n                const { tr } = view.state;\n\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        ...currNode.attrs,\n                        fold: true,\n                    }),\n                );\n            };\n            const onFocus = () => {\n                const { tr } = view.state;\n\n                view.dispatch(\n                    tr.setNodeMarkup(getPos(), undefined, {\n                        ...currNode.attrs,\n                        fold: false,\n                    }),\n                );\n            };\n\n            const renderer = utils.themeManager.get<ThemeCodeFenceType>('code-fence', {\n                onBlur,\n                onFocus,\n                onSelectLanguage,\n                editable: () => view.editable,\n                languageList,\n            });\n            if (!renderer) return {};\n\n            const { dom, contentDOM, onUpdate, onDestroy } = renderer;\n            onUpdate(currNode);\n\n            return {\n                dom,\n                contentDOM,\n                update: (updatedNode) => {\n                    if (updatedNode.type.name !== id) return false;\n                    currNode = updatedNode;\n                    onUpdate(currNode);\n\n                    return true;\n                },\n                destroy: onDestroy,\n            };\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNode } from '@milkdown/utils';\n\nexport const doc = createNode(() => {\n    return {\n        id: 'doc',\n        schema: () => ({\n            content: 'block+',\n            parseMarkdown: {\n                match: ({ type }) => type === 'root',\n                runner: (state, node, type) => {\n                    state.injectRoot(node, type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'doc',\n                runner: (state, node) => {\n                    state.openNode('root');\n                    state.next(node.content);\n                },\n            },\n        }),\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { AddMarkStep, Plugin, PluginKey, ReplaceStep } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['HardBreak'];\n\nexport const InsertHardbreak = createCmdKey('InsertHardbreak');\n\nexport const hardbreak = createNode<Keys>((utils) => {\n    return {\n        id: 'hardbreak',\n        schema: () => ({\n            inline: true,\n            group: 'inline',\n            selectable: false,\n            parseDOM: [{ tag: 'br' }],\n            toDOM: (node) => ['br', { class: utils.getClassName(node.attrs, 'hardbreak') }],\n            parseMarkdown: {\n                match: ({ type }) => type === 'break',\n                runner: (state, _, type) => {\n                    state.addNode(type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'hardbreak',\n                runner: (state) => {\n                    state.addNode('break');\n                },\n            },\n        }),\n        commands: (type) => [\n            createCmd(InsertHardbreak, () => (state, dispatch) => {\n                dispatch?.(state.tr.setMeta('hardbreak', true).replaceSelectionWith(type.create()).scrollIntoView());\n                return true;\n            }),\n        ],\n        shortcuts: {\n            [SupportedKeys.HardBreak]: createShortcut(InsertHardbreak, 'Shift-Enter'),\n        },\n        prosePlugins: (type) => [\n            new Plugin({\n                key: new PluginKey('MILKDOWN_PLUGIN_HARDBREAK_MARKS'),\n                appendTransaction: (trs, _oldState, newState) => {\n                    if (!trs.length) return;\n                    const [tr] = trs;\n                    if (!tr) return;\n\n                    const [step] = tr.steps;\n\n                    const isInsertHr = tr.getMeta('hardbreak');\n                    if (isInsertHr) {\n                        if (!(step instanceof ReplaceStep)) {\n                            return;\n                        }\n                        const { from } = step as unknown as { from: number };\n                        return newState.tr.setNodeMarkup(from, type, undefined, []);\n                    }\n\n                    const isAddMarkStep = step instanceof AddMarkStep;\n                    if (isAddMarkStep) {\n                        let _tr = newState.tr;\n                        const { from, to } = step as unknown as { from: number; to: number };\n                        newState.doc.nodesBetween(from, to, (node, pos) => {\n                            if (node.type === type) {\n                                _tr = _tr.setNodeMarkup(pos, type, undefined, []);\n                            }\n                        });\n\n                        return _tr;\n                    }\n\n                    return;\n                },\n            }),\n        ],\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, editorViewCtx } from '@milkdown/core';\nimport {\n    EditorState,\n    Node,\n    Plugin,\n    PluginKey,\n    setBlockType,\n    textblockTypeInputRule,\n    Transaction,\n} from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\nconst headingIndex = Array(6)\n    .fill(0)\n    .map((_, i) => i + 1);\n\ntype Keys =\n    | SupportedKeys['H1']\n    | SupportedKeys['H2']\n    | SupportedKeys['H3']\n    | SupportedKeys['H4']\n    | SupportedKeys['H5']\n    | SupportedKeys['H6'];\n\nexport const TurnIntoHeading = createCmdKey<number>('TurnIntoHeading');\n\nexport const headingPluginKey = new PluginKey('MILKDOWN_PLUGIN_ID');\n\nexport const heading = createNode<Keys>((utils) => {\n    const id = 'heading';\n\n    return {\n        id,\n        schema: () => ({\n            content: 'inline*',\n            group: 'block',\n            defining: true,\n            attrs: {\n                id: {\n                    default: '',\n                },\n                level: {\n                    default: 1,\n                },\n            },\n            parseDOM: headingIndex.map((x) => ({\n                tag: `h${x}`,\n                getAttrs: (node) => {\n                    if (!(node instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return { level: x, id: node.id };\n                },\n            })),\n            toDOM: (node) => {\n                return [\n                    `h${node.attrs['level']}`,\n                    {\n                        id: node.attrs['id'] || node.textContent.split(' ').join('-').toLocaleLowerCase(),\n                        class: utils.getClassName(node.attrs, `heading h${node.attrs['level']}`),\n                    },\n                    0,\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === id,\n                runner: (state, node, type) => {\n                    const depth = node['depth'] as number;\n                    state.openNode(type, { level: depth });\n                    state.next(node.children);\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.openNode('heading', undefined, { depth: node.attrs['level'] });\n                    state.next(node.content);\n                    state.closeNode();\n                },\n            },\n        }),\n        inputRules: (type) =>\n            headingIndex.map((x) =>\n                textblockTypeInputRule(new RegExp(`^(#{1,${x}})\\\\s$`), type, () => ({\n                    level: x,\n                })),\n            ),\n        commands: (type) => [createCmd(TurnIntoHeading, (level = 1) => setBlockType(type, { level }))],\n        shortcuts: {\n            [SupportedKeys.H1]: createShortcut(TurnIntoHeading, 'Mod-Alt-1', 1),\n            [SupportedKeys.H2]: createShortcut(TurnIntoHeading, 'Mod-Alt-2', 2),\n            [SupportedKeys.H3]: createShortcut(TurnIntoHeading, 'Mod-Alt-3', 3),\n            [SupportedKeys.H4]: createShortcut(TurnIntoHeading, 'Mod-Alt-4', 4),\n            [SupportedKeys.H5]: createShortcut(TurnIntoHeading, 'Mod-Alt-5', 5),\n            [SupportedKeys.H6]: createShortcut(TurnIntoHeading, 'Mod-Alt-6', 6),\n        },\n        prosePlugins: (type, ctx) => {\n            let lock = false;\n            const createId = (node: Node) => {\n                return node.textContent\n                    .replace(/[\\p{P}\\p{S}]/gu, '')\n                    .replace(/\\s/g, '')\n                    .trim();\n            };\n            const walkThrough = (state: EditorState, callback: (tr: Transaction) => void) => {\n                const tr = state.tr;\n                state.doc.descendants((node, pos) => {\n                    if (node.type === type && !lock) {\n                        if (node.textContent.trim().length === 0) {\n                            return;\n                        }\n                        const attrs = node.attrs;\n                        const id = createId(node);\n\n                        if (attrs['id'] !== id) {\n                            tr.setMeta(headingPluginKey, true).setNodeMarkup(pos, undefined, {\n                                ...attrs,\n                                id,\n                            });\n                        }\n                    }\n                });\n                callback(tr);\n            };\n            return [\n                new Plugin({\n                    key: headingPluginKey,\n                    props: {\n                        handleDOMEvents: {\n                            compositionstart: () => {\n                                lock = true;\n                                return false;\n                            },\n                            compositionend: () => {\n                                lock = false;\n                                const view = ctx.get(editorViewCtx);\n                                setTimeout(() => {\n                                    walkThrough(view.state, (tr) => view.dispatch(tr));\n                                }, 0);\n                                return false;\n                            },\n                        },\n                    },\n                    appendTransaction: (transactions, _, nextState) => {\n                        let tr: Transaction | null = null;\n\n                        if (\n                            transactions.every((transaction) => !transaction.getMeta(headingPluginKey)) &&\n                            transactions.some((transaction) => transaction.docChanged)\n                        ) {\n                            walkThrough(nextState, (t) => {\n                                tr = t;\n                            });\n                        }\n\n                        return tr;\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey, schemaCtx } from '@milkdown/core';\nimport { InputRule, Selection } from '@milkdown/prose';\nimport { createNode } from '@milkdown/utils';\n\nconst id = 'hr';\nexport const InsertHr = createCmdKey<string>('InsertHr');\nexport const hr = createNode((utils) => {\n    return {\n        id,\n        schema: () => ({\n            group: 'block',\n            parseDOM: [{ tag: 'hr' }],\n            toDOM: (node) => ['hr', { class: utils.getClassName(node.attrs, id) }],\n            parseMarkdown: {\n                match: ({ type }) => type === 'thematicBreak',\n                runner: (state, _, type) => {\n                    state.addNode(type);\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state) => {\n                    state.addNode('thematicBreak');\n                },\n            },\n        }),\n        inputRules: (type) => [\n            new InputRule(/^(?:---|___\\s|\\*\\*\\*\\s)$/, (state, match, start, end) => {\n                const { tr } = state;\n\n                if (match[0]) {\n                    tr.replaceWith(start - 1, end, type.create());\n                }\n\n                return tr;\n            }),\n        ],\n        commands: (type, ctx) => [\n            createCmd(InsertHr, () => (state, dispatch) => {\n                if (!dispatch) return true;\n                const { tr, selection } = state;\n                const from = selection.from;\n                const node = type.create();\n                if (!node) {\n                    return true;\n                }\n                const _tr = tr.replaceSelectionWith(node).insert(from, ctx.get(schemaCtx).node('paragraph'));\n                const sel = Selection.findFrom(_tr.doc.resolve(from), 1, true);\n                if (!sel) {\n                    return true;\n                }\n                dispatch(_tr.setSelection(sel).scrollIntoView());\n                return true;\n            }),\n        ],\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, createCmd, createCmdKey, ThemeImageType, ThemeInputChipType } from '@milkdown/core';\nimport { EditorView, findSelectedNodeOfType, InputRule, Plugin, PluginKey } from '@milkdown/prose';\nimport { createNode } from '@milkdown/utils';\n\nexport const ModifyImage = createCmdKey<string>('ModifyImage');\nexport const InsertImage = createCmdKey<string>('InsertImage');\nconst id = 'image';\nexport type ImageOptions = {\n    isBlock: boolean;\n    placeholder: string;\n    input: {\n        placeholder: string;\n        buttonText?: string;\n    };\n};\nconst key = new PluginKey('MILKDOWN_PLUGIN_IMAGE_INPUT');\n\nexport const image = createNode<string, ImageOptions>((utils, options) => {\n    return {\n        id: 'image',\n        schema: () => ({\n            inline: true,\n            group: 'inline',\n            selectable: true,\n            draggable: true,\n            marks: '',\n            atom: true,\n            defining: true,\n            isolating: true,\n            attrs: {\n                src: { default: '' },\n                alt: { default: null },\n                title: { default: null },\n            },\n            parseDOM: [\n                {\n                    tag: 'img[src]',\n                    getAttrs: (dom) => {\n                        if (!(dom instanceof HTMLElement)) {\n                            throw new Error();\n                        }\n                        return {\n                            src: dom.getAttribute('src') || '',\n                            alt: dom.getAttribute('alt'),\n                            title: dom.getAttribute('title') || dom.getAttribute('alt'),\n                            width: dom.getAttribute('width'),\n                        };\n                    },\n                },\n            ],\n            toDOM: (node) => {\n                return [\n                    'img',\n                    {\n                        ...node.attrs,\n                        class: utils.getClassName(node.attrs, id),\n                    },\n                ];\n            },\n            parseMarkdown: {\n                match: ({ type }) => type === id,\n                runner: (state, node, type) => {\n                    const url = node['url'] as string;\n                    const alt = node['alt'] as string;\n                    const title = node['title'] as string;\n                    state.addNode(type, {\n                        src: url,\n                        alt,\n                        title,\n                    });\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === id,\n                runner: (state, node) => {\n                    state.addNode('image', undefined, undefined, {\n                        title: node.attrs['title'],\n                        url: node.attrs['src'],\n                        alt: node.attrs['alt'],\n                    });\n                },\n            },\n        }),\n        commands: (type) => [\n            createCmd(InsertImage, (src = '') => (state, dispatch) => {\n                if (!dispatch) return true;\n                const { tr } = state;\n                const node = type.create({ src });\n                if (!node) {\n                    return true;\n                }\n                const _tr = tr.replaceSelectionWith(node);\n                dispatch(_tr.scrollIntoView());\n                return true;\n            }),\n            createCmd(ModifyImage, (src = '') => (state, dispatch) => {\n                const node = findSelectedNodeOfType(state.selection, type);\n                if (!node) return false;\n\n                const { tr } = state;\n                dispatch?.(\n                    tr.setNodeMarkup(node.pos, undefined, { ...node.node.attrs, loading: true, src }).scrollIntoView(),\n                );\n\n                return true;\n            }),\n        ],\n        inputRules: (type) => [\n            new InputRule(\n                /!\\[(?<alt>.*?)]\\((?<filename>.*?)\\s*(?=\"|\\))\"?(?<title>[^\"]+)?\"?\\)/,\n                (state, match, start, end) => {\n                    const [okay, alt, src = '', title] = match;\n                    const { tr } = state;\n                    if (okay) {\n                        tr.replaceWith(start, end, type.create({ src, alt, title }));\n                    }\n\n                    return tr;\n                },\n            ),\n        ],\n        view: () => (node) => {\n            let currNode = node;\n\n            const placeholder = options?.placeholder ?? 'Add an Image';\n            const isBlock = options?.isBlock ?? false;\n            const renderer = utils.themeManager.get<ThemeImageType>('image', {\n                placeholder,\n                isBlock,\n            });\n\n            if (!renderer) {\n                return {};\n            }\n\n            const { dom, onUpdate } = renderer;\n            onUpdate(currNode);\n\n            return {\n                dom,\n                update: (updatedNode) => {\n                    if (updatedNode.type.name !== id) return false;\n\n                    currNode = updatedNode;\n                    onUpdate(currNode);\n\n                    return true;\n                },\n                selectNode: () => {\n                    dom.classList.add('ProseMirror-selectednode');\n                },\n                deselectNode: () => {\n                    dom.classList.remove('ProseMirror-selectednode');\n                },\n            };\n        },\n        prosePlugins: (type, ctx) => {\n            return [\n                new Plugin({\n                    key,\n                    view: (editorView) => {\n                        const inputChipRenderer = utils.themeManager.get<ThemeInputChipType>('input-chip', {\n                            placeholder: options?.input?.placeholder ?? 'Input Image Link',\n                            buttonText: options?.input?.buttonText,\n                            onUpdate: (value) => {\n                                ctx.get(commandsCtx).call(ModifyImage, value);\n                            },\n                        });\n                        if (!inputChipRenderer) return {};\n                        const shouldDisplay = (view: EditorView) => {\n                            return Boolean(\n                                view.hasFocus() && type && findSelectedNodeOfType(view.state.selection, type),\n                            );\n                        };\n                        const getCurrentLink = (view: EditorView) => {\n                            const result = findSelectedNodeOfType(view.state.selection, type);\n                            if (!result) return;\n\n                            const value = result.node.attrs['src'];\n                            return value;\n                        };\n                        const renderByView = (view: EditorView) => {\n                            if (!view.editable) {\n                                return;\n                            }\n                            const display = shouldDisplay(view);\n                            if (display) {\n                                inputChipRenderer.show(view);\n                                inputChipRenderer.update(getCurrentLink(view));\n                            } else {\n                                inputChipRenderer.hide();\n                            }\n                        };\n                        inputChipRenderer.init(editorView);\n                        renderByView(editorView);\n\n                        return {\n                            update: (view, prevState) => {\n                                const isEqualSelection =\n                                    prevState?.doc.eq(view.state.doc) && prevState.selection.eq(view.state.selection);\n                                if (isEqualSelection) return;\n\n                                renderByView(view);\n                            },\n                            destroy: () => {\n                                inputChipRenderer.destroy();\n                            },\n                        };\n                    },\n                }),\n            ];\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { liftListItem, sinkListItem, splitListItem, wrappingInputRule } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['SinkListItem'] | SupportedKeys['LiftListItem'] | SupportedKeys['NextListItem'];\n\nconst id = 'list_item';\n\nexport const SplitListItem = createCmdKey('SplitListItem');\nexport const SinkListItem = createCmdKey('SinkListItem');\nexport const LiftListItem = createCmdKey('LiftListItem');\n\nexport const listItem = createNode<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        group: 'listItem',\n        content: 'paragraph block*',\n        defining: true,\n        parseDOM: [{ tag: 'li' }],\n        toDOM: (node) => ['li', { class: utils.getClassName(node.attrs, 'list-item') }, 0],\n        parseMarkdown: {\n            match: ({ type, checked }) => type === 'listItem' && checked === null,\n            runner: (state, node, type) => {\n                state.openNode(type);\n                state.next(node.children);\n                state.closeNode();\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === id,\n            runner: (state, node) => {\n                state.openNode('listItem');\n                state.next(node.content);\n                state.closeNode();\n            },\n        },\n    }),\n    inputRules: (nodeType) => [wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType)],\n    commands: (nodeType) => [\n        createCmd(SplitListItem, () => splitListItem(nodeType)),\n        createCmd(SinkListItem, () => sinkListItem(nodeType)),\n        createCmd(LiftListItem, () => liftListItem(nodeType)),\n    ],\n    shortcuts: {\n        [SupportedKeys.NextListItem]: createShortcut(SplitListItem, 'Enter'),\n        [SupportedKeys.SinkListItem]: createShortcut(SinkListItem, 'Mod-]'),\n        [SupportedKeys.LiftListItem]: createShortcut(LiftListItem, 'Mod-['),\n    },\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { wrapIn, wrappingInputRule } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['OrderedList'];\n\nexport const WrapInOrderedList = createCmdKey('WrapInOrderedList');\n\nconst id = 'ordered_list';\nexport const orderedList = createNode<Keys>((utils) => ({\n    id,\n    schema: () => ({\n        content: 'listItem+',\n        group: 'block',\n        attrs: {\n            order: {\n                default: 1,\n            },\n        },\n        parseDOM: [\n            {\n                tag: 'ol',\n                getAttrs: (dom) => {\n                    if (!(dom instanceof HTMLElement)) {\n                        throw new Error();\n                    }\n                    return { order: dom.hasAttribute('start') ? Number(dom.getAttribute('start')) : 1 };\n                },\n            },\n        ],\n        toDOM: (node) => [\n            'ol',\n            {\n                ...(node.attrs['order'] === 1 ? {} : node.attrs['order']),\n                class: utils.getClassName(node.attrs, 'ordered-list'),\n            },\n            0,\n        ],\n        parseMarkdown: {\n            match: ({ type, ordered }) => type === 'list' && !!ordered,\n            runner: (state, node, type) => {\n                state.openNode(type).next(node.children).closeNode();\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === id,\n            runner: (state, node) => {\n                state.openNode('list', undefined, { ordered: true, start: 1 });\n                state.next(node.content);\n                state.closeNode();\n            },\n        },\n    }),\n    inputRules: (nodeType) => [\n        wrappingInputRule(\n            /^(\\d+)\\.\\s$/,\n            nodeType,\n            (match) => ({ order: Number(match[1]) }),\n            (match, node) => node.childCount + node.attrs['order'] === Number(match[1]),\n        ),\n    ],\n    commands: (nodeType) => [createCmd(WrapInOrderedList, () => wrapIn(nodeType))],\n    shortcuts: {\n        [SupportedKeys.OrderedList]: createShortcut(WrapInOrderedList, 'Mod-Alt-7'),\n    },\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createCmd, createCmdKey } from '@milkdown/core';\nimport { setBlockType } from '@milkdown/prose';\nimport { createNode, createShortcut } from '@milkdown/utils';\n\nimport { SupportedKeys } from '../supported-keys';\n\ntype Keys = SupportedKeys['Text'];\n\nexport const TurnIntoText = createCmdKey('TurnIntoText');\n\nconst id = 'paragraph';\nexport const paragraph = createNode<Keys>((utils) => {\n    return {\n        id,\n        schema: () => ({\n            content: 'inline*',\n            group: 'block',\n            parseDOM: [{ tag: 'p' }],\n            toDOM: (node) => ['p', { class: utils.getClassName(node.attrs, id) }, 0],\n            parseMarkdown: {\n                match: (node) => node.type === 'paragraph',\n                runner: (state, node, type) => {\n                    state.openNode(type);\n                    if (node.children) {\n                        state.next(node.children);\n                    } else {\n                        state.addText(node['value'] as string);\n                    }\n                    state.closeNode();\n                },\n            },\n            toMarkdown: {\n                match: (node) => node.type.name === 'paragraph',\n                runner: (state, node) => {\n                    state.openNode('paragraph');\n                    state.next(node.content);\n                    state.closeNode();\n                },\n            },\n        }),\n        commands: (nodeType) => [createCmd(TurnIntoText, () => setBlockType(nodeType))],\n        shortcuts: {\n            [SupportedKeys.Text]: createShortcut(TurnIntoText, 'Mod-Alt-0'),\n        },\n    };\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createNode } from '@milkdown/utils';\n\nexport const text = createNode(() => ({\n    id: 'text',\n    schema: () => ({\n        group: 'inline',\n        parseMarkdown: {\n            match: ({ type }) => type === 'text',\n            runner: (state, node) => {\n                state.addText(node['value'] as string);\n            },\n        },\n        toMarkdown: {\n            match: (node) => node.type.name === 'text',\n            runner: (state, node) => {\n                state.addNode('text', undefined, node.text as string);\n            },\n        },\n    }),\n}));\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { blockquote } from './blockquote';\nimport { bulletList } from './bullet-list';\nimport { codeFence } from './code-fence';\nimport { doc } from './doc';\nimport { hardbreak } from './hardbreak';\nimport { heading } from './heading';\nimport { hr } from './hr';\nimport { image } from './image';\nimport { listItem } from './list-item';\nimport { orderedList } from './ordered-list';\nimport { paragraph } from './paragraph';\nimport { text } from './text';\n\nexport const nodes = [\n    doc(),\n    paragraph(),\n    hardbreak(),\n    blockquote(),\n    codeFence(),\n    bulletList(),\n    orderedList(),\n    listItem(),\n    heading(),\n    hr(),\n    image(),\n    text(),\n];\n\nexport * from './blockquote';\nexport * from './bullet-list';\nexport * from './code-fence';\nexport * from './doc';\nexport * from './hardbreak';\nexport * from './heading';\nexport * from './hr';\nexport * from './image';\nexport * from './list-item';\nexport * from './ordered-list';\nexport * from './paragraph';\nexport * from './text';\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Literal, Node, Parent } from 'unist';\n\nconst isParent = (node: Node): node is Parent => !!(node as Parent).children;\nconst isHTML = (node: Node): node is Literal<string> => node.type === 'html';\n\nfunction flatMapWithDepth(ast: Node, fn: (node: Node, index: number, parent: Node | null) => Node[]) {\n    return transform(ast, 0, null)[0];\n\n    function transform(node: Node, index: number, parent: Node | null) {\n        if (isParent(node)) {\n            const out = [];\n            for (let i = 0, n = node.children.length; i < n; i++) {\n                const nthChild = node.children[i];\n                if (nthChild) {\n                    const xs = transform(nthChild, i, node);\n                    if (xs) {\n                        for (let j = 0, m = xs.length; j < m; j++) {\n                            const item = xs[j];\n                            if (item) {\n                                out.push(item);\n                            }\n                        }\n                    }\n                }\n            }\n            node.children = out;\n        }\n\n        return fn(node, index, parent);\n    }\n}\n\nexport const filterHTMLPlugin = () => {\n    function transformer(tree: Node) {\n        flatMapWithDepth(tree, (node) => {\n            if (!isHTML(node)) {\n                return [node];\n            }\n\n            return [];\n        });\n    }\n    return transformer;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { createPlugin } from '@milkdown/utils';\nimport links from 'remark-inline-links';\n\nimport { filterHTMLPlugin } from './filter-html';\n\nexport const commonmarkPlugins = [\n    createPlugin(() => ({\n        remarkPlugins: () => [links, filterHTMLPlugin],\n    }))(),\n];\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomList } from '@milkdown/utils';\n\nimport { marks, ModifyLink, ToggleBold, ToggleInlineCode, ToggleItalic, ToggleLink } from './mark';\nimport {\n    InsertHardbreak,\n    InsertHr,\n    InsertImage,\n    LiftListItem,\n    ModifyImage,\n    nodes,\n    SinkListItem,\n    SplitListItem,\n    TurnIntoCodeFence,\n    TurnIntoHeading,\n    TurnIntoText,\n    WrapInBlockquote,\n    WrapInBulletList,\n    WrapInOrderedList,\n} from './node';\nimport { commonmarkPlugins } from './plugin';\n\nexport * from './mark';\nexport * from './node';\nexport * from './supported-keys';\n\nexport const commonmarkNodes = AtomList.create([...nodes, ...marks]);\nexport { commonmarkPlugins };\nexport const commonmark = AtomList.create([...commonmarkPlugins, ...commonmarkNodes]);\n\nexport const commands = {\n    ToggleInlineCode,\n    ToggleItalic,\n    ToggleLink,\n    ToggleBold,\n\n    ModifyLink,\n    ModifyImage,\n\n    WrapInBlockquote,\n    WrapInBulletList,\n    WrapInOrderedList,\n\n    TurnIntoCodeFence,\n    TurnIntoHeading,\n    TurnIntoText,\n\n    InsertHardbreak,\n    InsertHr,\n    InsertImage,\n\n    SplitListItem,\n    SinkListItem,\n    LiftListItem,\n} as const;\nexport type Commands = typeof commands;\n","import {Plugin} from \"prosemirror-state\"\nimport {dropPoint} from \"prosemirror-transform\"\n\n// :: (options: ?Object) → Plugin\n// Create a plugin that, when added to a ProseMirror instance,\n// causes a decoration to show up at the drop position when something\n// is dragged over the editor.\n//\n// Nodes may add a `disableDropCursor` property to their spec to\n// control the showing of a drop cursor inside them. This may be a\n// boolean or a function, which will be called with a view and a\n// position, and should return a boolean.\n//\n//   options::- These options are supported:\n//\n//     color:: ?string\n//     The color of the cursor. Defaults to `black`.\n//\n//     width:: ?number\n//     The precise width of the cursor in pixels. Defaults to 1.\n//\n//     class:: ?string\n//     A CSS class name to add to the cursor element.\nexport function dropCursor(options = {}) {\n  return new Plugin({\n    view(editorView) { return new DropCursorView(editorView, options) }\n  })\n}\n\nclass DropCursorView {\n  constructor(editorView, options) {\n    this.editorView = editorView\n    this.width = options.width || 1\n    this.color = options.color || \"black\"\n    this.class = options.class\n    this.cursorPos = null\n    this.element = null\n    this.timeout = null\n\n    this.handlers = [\"dragover\", \"dragend\", \"drop\", \"dragleave\"].map(name => {\n      let handler = e => this[name](e)\n      editorView.dom.addEventListener(name, handler)\n      return {name, handler}\n    })\n  }\n\n  destroy() {\n    this.handlers.forEach(({name, handler}) => this.editorView.dom.removeEventListener(name, handler))\n  }\n\n  update(editorView, prevState) {\n    if (this.cursorPos != null && prevState.doc != editorView.state.doc) {\n      if (this.cursorPos > editorView.state.doc.content.size) this.setCursor(null)\n      else this.updateOverlay()\n    }\n  }\n\n  setCursor(pos) {\n    if (pos == this.cursorPos) return\n    this.cursorPos = pos\n    if (pos == null) {\n      this.element.parentNode.removeChild(this.element)\n      this.element = null\n    } else {\n      this.updateOverlay()\n    }\n  }\n\n  updateOverlay() {\n    let $pos = this.editorView.state.doc.resolve(this.cursorPos), rect\n    if (!$pos.parent.inlineContent) {\n      let before = $pos.nodeBefore, after = $pos.nodeAfter\n      if (before || after) {\n        let nodeRect = this.editorView.nodeDOM(this.cursorPos - (before ?  before.nodeSize : 0)).getBoundingClientRect()\n        let top = before ? nodeRect.bottom : nodeRect.top\n        if (before && after)\n          top = (top + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2\n        rect = {left: nodeRect.left, right: nodeRect.right, top: top - this.width / 2, bottom: top + this.width / 2}\n      }\n    }\n    if (!rect) {\n      let coords = this.editorView.coordsAtPos(this.cursorPos)\n      rect = {left: coords.left - this.width / 2, right: coords.left + this.width / 2, top: coords.top, bottom: coords.bottom}\n    }\n\n    let parent = this.editorView.dom.offsetParent\n    if (!this.element) {\n      this.element = parent.appendChild(document.createElement(\"div\"))\n      if (this.class) this.element.className = this.class\n      this.element.style.cssText = \"position: absolute; z-index: 50; pointer-events: none; background-color: \" + this.color\n    }\n    let parentLeft, parentTop\n    if (!parent || parent == document.body && getComputedStyle(parent).position == \"static\") {\n      parentLeft = -pageXOffset\n      parentTop = -pageYOffset\n    } else {\n      let rect = parent.getBoundingClientRect()\n      parentLeft = rect.left - parent.scrollLeft\n      parentTop = rect.top - parent.scrollTop\n    }\n    this.element.style.left = (rect.left - parentLeft) + \"px\"\n    this.element.style.top = (rect.top - parentTop) + \"px\"\n    this.element.style.width = (rect.right - rect.left) + \"px\"\n    this.element.style.height = (rect.bottom - rect.top) + \"px\"\n  }\n\n  scheduleRemoval(timeout) {\n    clearTimeout(this.timeout)\n    this.timeout = setTimeout(() => this.setCursor(null), timeout)\n  }\n\n  dragover(event) {\n    if (!this.editorView.editable) return\n    let pos = this.editorView.posAtCoords({left: event.clientX, top: event.clientY})\n\n    let node = pos && pos.inside >= 0 && this.editorView.state.doc.nodeAt(pos.inside)\n    let disableDropCursor = node && node.type.spec.disableDropCursor\n    let disabled = typeof disableDropCursor == \"function\" ? disableDropCursor(this.editorView, pos) : disableDropCursor\n\n    if (pos && !disabled) {\n      let target = pos.pos\n      if (this.editorView.dragging && this.editorView.dragging.slice) {\n        target = dropPoint(this.editorView.state.doc, target, this.editorView.dragging.slice)\n        if (target == null) return this.setCursor(null)\n      }\n      this.setCursor(target)\n      this.scheduleRemoval(5000)\n    }\n  }\n\n  dragend() {\n    this.scheduleRemoval(20)\n  }\n\n  drop() {\n    this.scheduleRemoval(20)\n  }\n\n  dragleave(event) {\n    if (event.target == this.editorView.dom || !this.editorView.dom.contains(event.relatedTarget))\n      this.setCursor(null)\n  }\n}\n","import {Selection, NodeSelection} from \"prosemirror-state\"\nimport {Slice} from \"prosemirror-model\"\n\n// ::- Gap cursor selections are represented using this class. Its\n// `$anchor` and `$head` properties both point at the cursor position.\nexport class GapCursor extends Selection {\n  // :: (ResolvedPos)\n  // Create a gap cursor.\n  constructor($pos) {\n    super($pos, $pos)\n  }\n\n  map(doc, mapping) {\n    let $pos = doc.resolve(mapping.map(this.head))\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n\n  content() { return Slice.empty }\n\n  eq(other) {\n    return other instanceof GapCursor && other.head == this.head\n  }\n\n  toJSON() {\n    return {type: \"gapcursor\", pos: this.head}\n  }\n\n  static fromJSON(doc, json) {\n    if (typeof json.pos != \"number\") throw new RangeError(\"Invalid input for GapCursor.fromJSON\")\n    return new GapCursor(doc.resolve(json.pos))\n  }\n\n  getBookmark() { return new GapBookmark(this.anchor) }\n\n  static valid($pos) {\n    let parent = $pos.parent\n    if (parent.isTextblock || !closedBefore($pos) || !closedAfter($pos)) return false\n    let override = parent.type.spec.allowGapCursor\n    if (override != null) return override\n    let deflt = parent.contentMatchAt($pos.index()).defaultType\n    return deflt && deflt.isTextblock\n  }\n\n  static findFrom($pos, dir, mustMove) {\n    search: for (;;) {\n      if (!mustMove && GapCursor.valid($pos)) return $pos\n      let pos = $pos.pos, next = null\n      // Scan up from this position\n      for (let d = $pos.depth;; d--) {\n        let parent = $pos.node(d)\n        if (dir > 0 ? $pos.indexAfter(d) < parent.childCount : $pos.index(d) > 0) {\n          next = parent.child(dir > 0 ? $pos.indexAfter(d) : $pos.index(d) - 1)\n          break\n        } else if (d == 0) {\n          return null\n        }\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      // And then down into the next node\n      for (;;) {\n        let inside = dir > 0 ? next.firstChild : next.lastChild\n        if (!inside) {\n          if (next.isAtom && !next.isText && !NodeSelection.isSelectable(next)) {\n            $pos = $pos.doc.resolve(pos + next.nodeSize * dir)\n            mustMove = false\n            continue search\n          }\n          break\n        }\n        next = inside\n        pos += dir\n        let $cur = $pos.doc.resolve(pos)\n        if (GapCursor.valid($cur)) return $cur\n      }\n\n      return null\n    }\n  }\n}\n\nGapCursor.prototype.visible = false\n\nSelection.jsonID(\"gapcursor\", GapCursor)\n\nclass GapBookmark {\n  constructor(pos) {\n    this.pos = pos\n  }\n  map(mapping) {\n    return new GapBookmark(mapping.map(this.pos))\n  }\n  resolve(doc) {\n    let $pos = doc.resolve(this.pos)\n    return GapCursor.valid($pos) ? new GapCursor($pos) : Selection.near($pos)\n  }\n}\n\nfunction closedBefore($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.index(d), parent = $pos.node(d)\n    // At the start of this parent, look at next one\n    if (index == 0) {\n      if (parent.type.spec.isolating) return true\n      continue\n    }\n    // See if the node before (or its first ancestor) is closed\n    for (let before = parent.child(index - 1);; before = before.lastChild) {\n      if ((before.childCount == 0 && !before.inlineContent) || before.isAtom || before.type.spec.isolating) return true\n      if (before.inlineContent) return false\n    }\n  }\n  // Hit start of document\n  return true\n}\n\nfunction closedAfter($pos) {\n  for (let d = $pos.depth; d >= 0; d--) {\n    let index = $pos.indexAfter(d), parent = $pos.node(d)\n    if (index == parent.childCount) {\n      if (parent.type.spec.isolating) return true\n      continue\n    }\n    for (let after = parent.child(index);; after = after.firstChild) {\n      if ((after.childCount == 0 && !after.inlineContent) || after.isAtom || after.type.spec.isolating) return true\n      if (after.inlineContent) return false\n    }\n  }\n  return true\n}\n","import {keydownHandler} from \"prosemirror-keymap\"\nimport {TextSelection, NodeSelection, Plugin} from \"prosemirror-state\"\nimport {Fragment, Slice} from \"prosemirror-model\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\n\nimport {GapCursor} from \"./gapcursor\"\n\n// :: () → Plugin\n// Create a gap cursor plugin. When enabled, this will capture clicks\n// near and arrow-key-motion past places that don't have a normally\n// selectable position nearby, and create a gap cursor selection for\n// them. The cursor is drawn as an element with class\n// `ProseMirror-gapcursor`. You can either include\n// `style/gapcursor.css` from the package's directory or add your own\n// styles to make it visible.\nexport const gapCursor = function() {\n  return new Plugin({\n    props: {\n      decorations: drawGapCursor,\n\n      createSelectionBetween(_view, $anchor, $head) {\n        if ($anchor.pos == $head.pos && GapCursor.valid($head)) return new GapCursor($head)\n      },\n\n      handleClick,\n      handleKeyDown,\n      handleDOMEvents: {beforeinput}\n    }\n  })\n}\n\nexport {GapCursor}\n\nconst handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1)\n})\n\nfunction arrow(axis, dir) {\n  let dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\")\n  return function(state, dispatch, view) {\n    let sel = state.selection\n    let $start = dir > 0 ? sel.$to : sel.$from, mustMove = sel.empty\n    if (sel instanceof TextSelection) {\n      if (!view.endOfTextblock(dirStr) || $start.depth == 0) return false\n      mustMove = false\n      $start = state.doc.resolve(dir > 0 ? $start.after() : $start.before())\n    }\n    let $found = GapCursor.findFrom($start, dir, mustMove)\n    if (!$found) return false\n    if (dispatch) dispatch(state.tr.setSelection(new GapCursor($found)))\n    return true\n  }\n}\n\nfunction handleClick(view, pos, event) {\n  if (!view.editable) return false\n  let $pos = view.state.doc.resolve(pos)\n  if (!GapCursor.valid($pos)) return false\n  let {inside} = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (inside > -1 && NodeSelection.isSelectable(view.state.doc.nodeAt(inside))) return false\n  view.dispatch(view.state.tr.setSelection(new GapCursor($pos)))\n  return true\n}\n\n// This is a hack that, when a composition starts while a gap cursor\n// is active, quickly creates an inline context for the composition to\n// happen in, to avoid it being aborted by the DOM selection being\n// moved into a valid position.\nfunction beforeinput(view, event) {\n  if (event.inputType != \"insertCompositionText\" || !(view.state.selection instanceof GapCursor)) return false\n\n  let {$from} = view.state.selection\n  let insert = $from.parent.contentMatchAt($from.index()).findWrapping(view.state.schema.nodes.text)\n  if (!insert) return false\n\n  let frag = Fragment.empty\n  for (let i = insert.length - 1; i >= 0; i--) frag = Fragment.from(insert[i].createAndFill(null, frag))\n  let tr = view.state.tr.replace($from.pos, $from.pos, new Slice(frag, 0, 0))\n  tr.setSelection(TextSelection.near(tr.doc.resolve($from.pos + 1)))\n  view.dispatch(tr)\n  return false\n}\n\nfunction drawGapCursor(state) {\n  if (!(state.selection instanceof GapCursor)) return null\n  let node = document.createElement(\"div\")\n  node.className = \"ProseMirror-gapcursor\"\n  return DecorationSet.create(state.doc, [Decoration.widget(state.selection.head, node, {key: \"gapcursor\"})])\n}\n","// Because working with row and column-spanning cells is not quite\n// trivial, this code builds up a descriptive structure for a given\n// table node. The structures are cached with the (persistent) table\n// nodes as key, so that they only have to be recomputed when the\n// content of the table changes.\n//\n// This does mean that they have to store table-relative, not\n// document-relative positions. So code that uses them will typically\n// compute the start position of the table and offset positions passed\n// to or gotten from this structure by that amount.\n\nlet readFromCache, addToCache\n// Prefer using a weak map to cache table maps. Fall back on a\n// fixed-size cache if that's not supported.\nif (typeof WeakMap != \"undefined\") {\n  let cache = new WeakMap\n  readFromCache = key => cache.get(key)\n  addToCache = (key, value) => {\n    cache.set(key, value)\n    return value\n  }\n} else {\n  let cache = [], cacheSize = 10, cachePos = 0\n  readFromCache = key => {\n    for (let i = 0; i < cache.length; i += 2)\n      if (cache[i] == key) return cache[i + 1]\n  }\n  addToCache = (key, value) => {\n    if (cachePos == cacheSize) cachePos = 0\n    cache[cachePos++] = key\n    return cache[cachePos++] = value\n  }\n}\n\nexport class Rect {\n  constructor(left, top, right, bottom) {\n    this.left = left; this.top = top; this.right = right; this.bottom = bottom\n  }\n}\n\n// ::- A table map describes the structore of a given table. To avoid\n// recomputing them all the time, they are cached per table node. To\n// be able to do that, positions saved in the map are relative to the\n// start of the table, rather than the start of the document.\nexport class TableMap {\n  constructor(width, height, map, problems) {\n    // :: number The width of the table\n    this.width = width\n    // :: number The table's height\n    this.height = height\n    // :: [number] A width * height array with the start position of\n    // the cell covering that part of the table in each slot\n    this.map = map\n    // An optional array of problems (cell overlap or non-rectangular\n    // shape) for the table, used by the table normalizer.\n    this.problems = problems\n  }\n\n  // :: (number) → Rect\n  // Find the dimensions of the cell at the given position.\n  findCell(pos) {\n    for (let i = 0; i < this.map.length; i++) {\n      let curPos = this.map[i]\n      if (curPos != pos) continue\n      let left = i % this.width, top = (i / this.width) | 0\n      let right = left + 1, bottom = top + 1\n      for (let j = 1; right < this.width && this.map[i + j] == curPos; j++) right++\n      for (let j = 1; bottom < this.height && this.map[i + (this.width * j)] == curPos; j++) bottom++\n      return new Rect(left, top, right, bottom)\n    }\n    throw new RangeError(\"No cell with offset \" + pos + \" found\")\n  }\n\n  // :: (number) → number\n  // Find the left side of the cell at the given position.\n  colCount(pos) {\n    for (let i = 0; i < this.map.length; i++)\n      if (this.map[i] == pos) return i % this.width\n    throw new RangeError(\"No cell with offset \" + pos + \" found\")\n  }\n\n  // :: (number, string, number) → ?number\n  // Find the next cell in the given direction, starting from the cell\n  // at `pos`, if any.\n  nextCell(pos, axis, dir) {\n    let {left, right, top, bottom} = this.findCell(pos)\n    if (axis == \"horiz\") {\n      if (dir < 0 ? left == 0 : right == this.width) return null\n      return this.map[top * this.width + (dir < 0 ? left - 1 : right)]\n    } else {\n      if (dir < 0 ? top == 0 : bottom == this.height) return null\n      return this.map[left + this.width * (dir < 0 ? top - 1 : bottom)]\n    }\n  }\n\n  // :: (number, number) → Rect\n  // Get the rectangle spanning the two given cells.\n  rectBetween(a, b) {\n    let {left: leftA, right: rightA, top: topA, bottom: bottomA} = this.findCell(a)\n    let {left: leftB, right: rightB, top: topB, bottom: bottomB} = this.findCell(b)\n    return new Rect(Math.min(leftA, leftB), Math.min(topA, topB),\n                    Math.max(rightA, rightB), Math.max(bottomA, bottomB))\n  }\n\n  // :: (Rect) → [number]\n  // Return the position of all cells that have the top left corner in\n  // the given rectangle.\n  cellsInRect(rect) {\n    let result = [], seen = {}\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        let index = row * this.width + col, pos = this.map[index]\n        if (seen[pos]) continue\n        seen[pos] = true\n        if ((col != rect.left || !col || this.map[index - 1] != pos) &&\n            (row != rect.top || !row || this.map[index - this.width] != pos))\n          result.push(pos)\n      }\n    }\n    return result\n  }\n\n  // :: (number, number, Node) → number\n  // Return the position at which the cell at the given row and column\n  // starts, or would start, if a cell started there.\n  positionAt(row, col, table) {\n    for (let i = 0, rowStart = 0;; i++) {\n      let rowEnd = rowStart + table.child(i).nodeSize\n      if (i == row) {\n        let index = col + row * this.width, rowEndIndex = (row + 1) * this.width\n        // Skip past cells from previous rows (via rowspan)\n        while (index < rowEndIndex && this.map[index] < rowStart) index++\n        return index == rowEndIndex ? rowEnd - 1 : this.map[index]\n      }\n      rowStart = rowEnd\n    }\n  }\n\n  // :: (Node) → TableMap\n  // Find the table map for the given table node.\n  static get(table) {\n    return readFromCache(table) || addToCache(table, computeMap(table))\n  }\n}\n\n// Compute a table map.\nfunction computeMap(table) {\n  if (table.type.spec.tableRole != \"table\") throw new RangeError(\"Not a table node: \" + table.type.name)\n  let width = findWidth(table), height = table.childCount\n  let map = [], mapPos = 0, problems = null, colWidths = []\n  for (let i = 0, e = width * height; i < e; i++) map[i] = 0\n\n  for (let row = 0, pos = 0; row < height; row++) {\n    let rowNode = table.child(row)\n    pos++\n    for (let i = 0;; i++) {\n      while (mapPos < map.length && map[mapPos] != 0) mapPos++\n      if (i == rowNode.childCount) break\n      let cellNode = rowNode.child(i), {colspan, rowspan, colwidth} = cellNode.attrs\n      for (let h = 0; h < rowspan; h++) {\n        if (h + row >= height) {\n          (problems || (problems = [])).push({type: \"overlong_rowspan\", pos, n: rowspan - h})\n          break\n        }\n        let start = mapPos + (h * width)\n        for (let w = 0; w < colspan; w++) {\n          if (map[start + w] == 0)\n            map[start + w] = pos\n          else\n            (problems || (problems = [])).push({type: \"collision\", row, pos, n: colspan - w})\n          let colW = colwidth && colwidth[w]\n          if (colW) {\n            let widthIndex = ((start + w) % width) * 2, prev = colWidths[widthIndex]\n            if (prev == null || (prev != colW && colWidths[widthIndex + 1] == 1)) {\n              colWidths[widthIndex] = colW\n              colWidths[widthIndex + 1] = 1\n            } else if (prev == colW) {\n              colWidths[widthIndex + 1]++\n            }\n          }\n        }\n      }\n      mapPos += colspan\n      pos += cellNode.nodeSize\n    }\n    let expectedPos = (row + 1) * width, missing = 0\n    while (mapPos < expectedPos) if (map[mapPos++] == 0) missing++\n    if (missing) (problems || (problems = [])).push({type: \"missing\", row, n: missing})\n    pos++\n  }\n\n  let tableMap = new TableMap(width, height, map, problems), badWidths = false\n\n  // For columns that have defined widths, but whose widths disagree\n  // between rows, fix up the cells whose width doesn't match the\n  // computed one.\n  for (let i = 0; !badWidths && i < colWidths.length; i += 2)\n    if (colWidths[i] != null && colWidths[i + 1] < height) badWidths = true\n  if (badWidths) findBadColWidths(tableMap, colWidths, table)\n\n  return tableMap\n}\n\nfunction findWidth(table) {\n  let width = -1, hasRowSpan = false\n  for (let row = 0; row < table.childCount; row++) {\n    let rowNode = table.child(row), rowWidth = 0\n    if (hasRowSpan) for (let j = 0; j < row; j++) {\n      let prevRow = table.child(j)\n      for (let i = 0; i < prevRow.childCount; i++) {\n        let cell = prevRow.child(i)\n        if (j + cell.attrs.rowspan > row) rowWidth += cell.attrs.colspan\n      }\n    }\n    for (let i = 0; i < rowNode.childCount; i++) {\n      let cell = rowNode.child(i)\n      rowWidth += cell.attrs.colspan\n      if (cell.attrs.rowspan > 1) hasRowSpan = true\n    }\n    if (width == -1)\n      width = rowWidth\n    else if (width != rowWidth)\n      width = Math.max(width, rowWidth)\n  }\n  return width\n}\n\nfunction findBadColWidths(map, colWidths, table) {\n  if (!map.problems) map.problems = []\n  for (let i = 0, seen = {}; i < map.map.length; i++) {\n    let pos = map.map[i]\n    if (seen[pos]) continue\n    seen[pos] = true\n    let node = table.nodeAt(pos), updated = null\n    for (let j = 0; j < node.attrs.colspan; j++) {\n      let col = (i + j) % map.width, colWidth = colWidths[col * 2]\n      if (colWidth != null && (!node.attrs.colwidth || node.attrs.colwidth[j] != colWidth))\n        (updated || (updated = freshColWidth(node.attrs)))[j] = colWidth\n    }\n    if (updated) map.problems.unshift({type: \"colwidth mismatch\", pos, colwidth: updated})\n  }\n}\n\nfunction freshColWidth(attrs) {\n  if (attrs.colwidth) return attrs.colwidth.slice()\n  let result = []\n  for (let i = 0; i < attrs.colspan; i++) result.push(0)\n  return result\n}\n","// Helper for creating a schema that supports tables.\n\nfunction getCellAttrs(dom, extraAttrs) {\n  let widthAttr = dom.getAttribute(\"data-colwidth\")\n  let widths = widthAttr && /^\\d+(,\\d+)*$/.test(widthAttr) ? widthAttr.split(\",\").map(s => Number(s)) : null\n  let colspan = Number(dom.getAttribute(\"colspan\") || 1)\n  let result = {\n    colspan,\n    rowspan: Number(dom.getAttribute(\"rowspan\") || 1),\n    colwidth: widths && widths.length == colspan ? widths : null\n  }\n  for (let prop in extraAttrs) {\n    let getter = extraAttrs[prop].getFromDOM\n    let value = getter && getter(dom)\n    if (value != null) result[prop] = value\n  }\n  return result\n}\n\nfunction setCellAttrs(node, extraAttrs) {\n  let attrs = {}\n  if (node.attrs.colspan != 1) attrs.colspan = node.attrs.colspan\n  if (node.attrs.rowspan != 1) attrs.rowspan = node.attrs.rowspan\n  if (node.attrs.colwidth)\n    attrs[\"data-colwidth\"] = node.attrs.colwidth.join(\",\")\n  for (let prop in extraAttrs) {\n    let setter = extraAttrs[prop].setDOMAttr\n    if (setter) setter(node.attrs[prop], attrs)\n  }\n  return attrs\n}\n\n// :: (Object) → Object\n//\n// This function creates a set of [node\n// specs](http://prosemirror.net/docs/ref/#model.SchemaSpec.nodes) for\n// `table`, `table_row`, and `table_cell` nodes types as used by this\n// module. The result can then be added to the set of nodes when\n// creating a a schema.\n//\n//   options::- The following options are understood:\n//\n//     tableGroup:: ?string\n//     A group name (something like `\"block\"`) to add to the table\n//     node type.\n//\n//     cellContent:: string\n//     The content expression for table cells.\n//\n//     cellAttributes:: ?Object\n//     Additional attributes to add to cells. Maps attribute names to\n//     objects with the following properties:\n//\n//       default:: any\n//       The attribute's default value.\n//\n//       getFromDOM:: ?(dom.Node) → any\n//       A function to read the attribute's value from a DOM node.\n//\n//       setDOMAttr:: ?(value: any, attrs: Object)\n//       A function to add the attribute's value to an attribute\n//       object that's used to render the cell's DOM.\nexport function tableNodes(options) {\n  let extraAttrs = options.cellAttributes || {}\n  let cellAttrs = {\n    colspan: {default: 1},\n    rowspan: {default: 1},\n    colwidth: {default: null}\n  }\n  for (let prop in extraAttrs)\n    cellAttrs[prop] = {default: extraAttrs[prop].default}\n\n  return {\n    table: {\n      content: \"table_row+\",\n      tableRole: \"table\",\n      isolating: true,\n      group: options.tableGroup,\n      parseDOM: [{tag: \"table\"}],\n      toDOM() { return [\"table\", [\"tbody\", 0]] }\n    },\n    table_row: {\n      content: \"(table_cell | table_header)*\",\n      tableRole: \"row\",\n      parseDOM: [{tag: \"tr\"}],\n      toDOM() { return [\"tr\", 0] }\n    },\n    table_cell: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"cell\",\n      isolating: true,\n      parseDOM: [{tag: \"td\", getAttrs: dom => getCellAttrs(dom, extraAttrs)}],\n      toDOM(node) { return [\"td\", setCellAttrs(node, extraAttrs), 0] }\n    },\n    table_header: {\n      content: options.cellContent,\n      attrs: cellAttrs,\n      tableRole: \"header_cell\",\n      isolating: true,\n      parseDOM: [{tag: \"th\", getAttrs: dom => getCellAttrs(dom, extraAttrs)}],\n      toDOM(node) { return [\"th\", setCellAttrs(node, extraAttrs), 0] }\n    }\n  }\n}\n\nexport function tableNodeTypes(schema) {\n  let result = schema.cached.tableNodeTypes\n  if (!result) {\n    result = schema.cached.tableNodeTypes = {}\n    for (let name in schema.nodes) {\n      let type = schema.nodes[name], role = type.spec.tableRole\n      if (role) result[role] = type\n    }\n  }\n  return result\n}\n","// Various helper function for working with tables\n\nimport {PluginKey} from \"prosemirror-state\"\n\nimport {TableMap} from \"./tablemap\"\nimport {tableNodeTypes} from \"./schema\";\n\nexport const key = new PluginKey(\"selectingCells\")\n\nexport function cellAround($pos) {\n  for (let d = $pos.depth - 1; d > 0; d--)\n    if ($pos.node(d).type.spec.tableRole == \"row\") return $pos.node(0).resolve($pos.before(d + 1))\n  return null\n}\n\nexport function cellWrapping($pos) {\n  for (let d = $pos.depth; d > 0; d--) { // Sometimes the cell can be in the same depth.\n    const role = $pos.node(d).type.spec.tableRole;\n    if (role === \"cell\" || role === 'header_cell') return $pos.node(d)\n  }\n  return null\n}\n\nexport function isInTable(state) {\n  let $head = state.selection.$head\n  for (let d = $head.depth; d > 0; d--) if ($head.node(d).type.spec.tableRole == \"row\") return true\n  return false\n}\n\nexport function selectionCell(state) {\n  let sel = state.selection\n  if (sel.$anchorCell) {\n    return sel.$anchorCell.pos > sel.$headCell.pos ? sel.$anchorCell : sel.$headCell;\n  } else if (sel.node && sel.node.type.spec.tableRole == \"cell\") {\n    return sel.$anchor\n  }\n  return cellAround(sel.$head) || cellNear(sel.$head)\n}\n\nfunction cellNear($pos) {\n  for (let after = $pos.nodeAfter, pos = $pos.pos; after; after = after.firstChild, pos++) {\n    let role = after.type.spec.tableRole\n    if (role == \"cell\" || role == \"header_cell\") return $pos.doc.resolve(pos)\n  }\n  for (let before = $pos.nodeBefore, pos = $pos.pos; before; before = before.lastChild, pos--) {\n    let role = before.type.spec.tableRole\n    if (role == \"cell\" || role == \"header_cell\") return $pos.doc.resolve(pos - before.nodeSize)\n  }\n}\n\nexport function pointsAtCell($pos) {\n  return $pos.parent.type.spec.tableRole == \"row\" && $pos.nodeAfter\n}\n\nexport function moveCellForward($pos) {\n  return $pos.node(0).resolve($pos.pos + $pos.nodeAfter.nodeSize)\n}\n\nexport function inSameTable($a, $b) {\n  return $a.depth == $b.depth && $a.pos >= $b.start(-1) && $a.pos <= $b.end(-1)\n}\n\nexport function findCell($pos) {\n  return TableMap.get($pos.node(-1)).findCell($pos.pos - $pos.start(-1))\n}\n\nexport function colCount($pos) {\n  return TableMap.get($pos.node(-1)).colCount($pos.pos - $pos.start(-1))\n}\n\nexport function nextCell($pos, axis, dir) {\n  let start = $pos.start(-1), map = TableMap.get($pos.node(-1))\n  let moved = map.nextCell($pos.pos - start, axis, dir)\n  return moved == null ? null : $pos.node(0).resolve(start + moved)\n}\n\nexport function setAttr(attrs, name, value) {\n  let result = {}\n  for (let prop in attrs) result[prop] = attrs[prop]\n  result[name] = value\n  return result\n}\n\nexport function removeColSpan(attrs, pos, n=1) {\n  let result = setAttr(attrs, \"colspan\", attrs.colspan - n)\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice()\n    result.colwidth.splice(pos, n)\n    if (!result.colwidth.some(w => w > 0)) result.colwidth = null\n  }\n  return result\n}\n\nexport function addColSpan(attrs, pos, n=1) {\n  let result = setAttr(attrs, \"colspan\", attrs.colspan + n)\n  if (result.colwidth) {\n    result.colwidth = result.colwidth.slice()\n    for (let i = 0; i < n; i++) result.colwidth.splice(pos, 0, 0)\n  }\n  return result\n}\n\nexport function columnIsHeader(map, table, col) {\n  let headerCell = tableNodeTypes(table.type.schema).header_cell\n  for (let row = 0; row < map.height; row++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false\n  return true\n}\n","// This file defines a ProseMirror selection subclass that models\n// table cell selections. The table plugin needs to be active to wire\n// in the user interaction part of table selections (so that you\n// actually get such selections when you select across cells).\n\nimport {Selection, TextSelection, NodeSelection, SelectionRange} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\nimport {Fragment, Slice} from \"prosemirror-model\"\n\n\nimport {inSameTable, pointsAtCell, setAttr, removeColSpan} from \"./util\"\nimport {TableMap} from \"./tablemap\"\n\n// ::- A [`Selection`](http://prosemirror.net/docs/ref/#state.Selection)\n// subclass that represents a cell selection spanning part of a table.\n// With the plugin enabled, these will be created when the user\n// selects across cells, and will be drawn by giving selected cells a\n// `selectedCell` CSS class.\nexport class CellSelection extends Selection {\n  // :: (ResolvedPos, ?ResolvedPos)\n  // A table selection is identified by its anchor and head cells. The\n  // positions given to this constructor should point _before_ two\n  // cells in the same table. They may be the same, to select a single\n  // cell.\n  constructor($anchorCell, $headCell = $anchorCell) {\n    let table = $anchorCell.node(-1), map = TableMap.get(table), start = $anchorCell.start(-1)\n    let rect = map.rectBetween($anchorCell.pos - start, $headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    let cells = map.cellsInRect(rect).filter(p => p != $headCell.pos - start)\n    // Make the head cell the first range, so that it counts as the\n    // primary part of the selection\n    cells.unshift($headCell.pos - start)\n    let ranges = cells.map(pos => {\n      let cell = table.nodeAt(pos), from = pos + start + 1\n      return new SelectionRange(doc.resolve(from), doc.resolve(from + cell.content.size))\n    })\n    super(ranges[0].$from, ranges[0].$to, ranges)\n    // :: ResolvedPos\n    // A resolved position pointing _in front of_ the anchor cell (the one\n    // that doesn't move when extending the selection).\n    this.$anchorCell = $anchorCell\n    // :: ResolvedPos\n    // A resolved position pointing in front of the head cell (the one\n    // moves when extending the selection).\n    this.$headCell = $headCell\n  }\n\n  map(doc, mapping) {\n    let $anchorCell = doc.resolve(mapping.map(this.$anchorCell.pos))\n    let $headCell = doc.resolve(mapping.map(this.$headCell.pos))\n    if (pointsAtCell($anchorCell) && pointsAtCell($headCell) && inSameTable($anchorCell, $headCell)) {\n      let tableChanged = this.$anchorCell.node(-1) != $anchorCell.node(-1)\n      if (tableChanged && this.isRowSelection())\n        return CellSelection.rowSelection($anchorCell, $headCell)\n      else if (tableChanged && this.isColSelection())\n        return CellSelection.colSelection($anchorCell, $headCell)\n      else\n        return new CellSelection($anchorCell, $headCell)\n    }\n    return TextSelection.between($anchorCell, $headCell)\n  }\n\n  // :: () → Slice\n  // Returns a rectangular slice of table rows containing the selected\n  // cells.\n  content() {\n    let table = this.$anchorCell.node(-1), map = TableMap.get(table), start = this.$anchorCell.start(-1)\n    let rect = map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start)\n    let seen = {}, rows = []\n    for (let row = rect.top; row < rect.bottom; row++) {\n      let rowContent = []\n      for (let index = row * map.width + rect.left, col = rect.left; col < rect.right; col++, index++) {\n        let pos = map.map[index]\n        if (!seen[pos]) {\n          seen[pos] = true\n          let cellRect = map.findCell(pos), cell = table.nodeAt(pos)\n          let extraLeft = rect.left - cellRect.left, extraRight = cellRect.right - rect.right\n          if (extraLeft > 0 || extraRight > 0) {\n            let attrs = cell.attrs\n            if (extraLeft > 0) attrs = removeColSpan(attrs, 0, extraLeft)\n            if (extraRight > 0) attrs = removeColSpan(attrs, attrs.colspan - extraRight, extraRight)\n            if (cellRect.left < rect.left) cell = cell.type.createAndFill(attrs)\n            else cell = cell.type.create(attrs, cell.content)\n          }\n          if (cellRect.top < rect.top || cellRect.bottom > rect.bottom) {\n            let attrs = setAttr(cell.attrs, \"rowspan\", Math.min(cellRect.bottom, rect.bottom) - Math.max(cellRect.top, rect.top))\n            if (cellRect.top < rect.top) cell = cell.type.createAndFill(attrs)\n            else cell = cell.type.create(attrs, cell.content)\n          }\n          rowContent.push(cell)\n        }\n      }\n      rows.push(table.child(row).copy(Fragment.from(rowContent)))\n    }\n\n    const fragment = this.isColSelection() && this.isRowSelection() ? table : rows;\n    return new Slice(Fragment.from(fragment), 1, 1)\n  }\n\n  replace(tr, content = Slice.empty) {\n    let mapFrom = tr.steps.length, ranges = this.ranges\n    for (let i = 0; i < ranges.length; i++) {\n      let {$from, $to} = ranges[i], mapping = tr.mapping.slice(mapFrom)\n      tr.replace(mapping.map($from.pos), mapping.map($to.pos), i ? Slice.empty : content)\n    }\n    let sel = Selection.findFrom(tr.doc.resolve(tr.mapping.slice(mapFrom).map(this.to)), -1)\n    if (sel) tr.setSelection(sel)\n  }\n\n  replaceWith(tr, node) {\n    this.replace(tr, new Slice(Fragment.from(node), 0, 0))\n  }\n\n  forEachCell(f) {\n    let table = this.$anchorCell.node(-1), map = TableMap.get(table), start = this.$anchorCell.start(-1)\n    let cells = map.cellsInRect(map.rectBetween(this.$anchorCell.pos - start, this.$headCell.pos - start))\n    for (let i = 0; i < cells.length; i++)\n      f(table.nodeAt(cells[i]), start + cells[i])\n  }\n\n  // :: () → bool\n  // True if this selection goes all the way from the top to the\n  // bottom of the table.\n  isColSelection() {\n    let anchorTop = this.$anchorCell.index(-1), headTop = this.$headCell.index(-1)\n    if (Math.min(anchorTop, headTop) > 0) return false\n    let anchorBot = anchorTop + this.$anchorCell.nodeAfter.attrs.rowspan,\n        headBot = headTop + this.$headCell.nodeAfter.attrs.rowspan\n    return Math.max(anchorBot, headBot) == this.$headCell.node(-1).childCount\n  }\n\n  // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n  // Returns the smallest column selection that covers the given anchor\n  // and head cell.\n  static colSelection($anchorCell, $headCell = $anchorCell) {\n    let map = TableMap.get($anchorCell.node(-1)), start = $anchorCell.start(-1)\n    let anchorRect = map.findCell($anchorCell.pos - start), headRect = map.findCell($headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    if (anchorRect.top <= headRect.top) {\n      if (anchorRect.top > 0)\n        $anchorCell = doc.resolve(start + map.map[anchorRect.left])\n      if (headRect.bottom < map.height)\n        $headCell = doc.resolve(start + map.map[map.width * (map.height - 1) + headRect.right - 1])\n    } else {\n      if (headRect.top > 0)\n        $headCell = doc.resolve(start + map.map[headRect.left])\n      if (anchorRect.bottom < map.height)\n        $anchorCell = doc.resolve(start + map.map[map.width * (map.height - 1) + anchorRect.right - 1])\n    }\n    return new CellSelection($anchorCell, $headCell)\n  }\n\n  // :: () → bool\n  // True if this selection goes all the way from the left to the\n  // right of the table.\n  isRowSelection() {\n    let map = TableMap.get(this.$anchorCell.node(-1)), start = this.$anchorCell.start(-1)\n    let anchorLeft = map.colCount(this.$anchorCell.pos - start),\n        headLeft = map.colCount(this.$headCell.pos - start)\n    if (Math.min(anchorLeft, headLeft) > 0) return false\n    let anchorRight = anchorLeft + this.$anchorCell.nodeAfter.attrs.colspan,\n        headRight = headLeft + this.$headCell.nodeAfter.attrs.colspan\n    return Math.max(anchorRight, headRight) == map.width\n  }\n\n  eq(other) {\n    return other instanceof CellSelection && other.$anchorCell.pos == this.$anchorCell.pos &&\n      other.$headCell.pos == this.$headCell.pos\n  }\n\n  // :: (ResolvedPos, ?ResolvedPos) → CellSelection\n  // Returns the smallest row selection that covers the given anchor\n  // and head cell.\n  static rowSelection($anchorCell, $headCell = $anchorCell) {\n    let map = TableMap.get($anchorCell.node(-1)), start = $anchorCell.start(-1)\n    let anchorRect = map.findCell($anchorCell.pos - start), headRect = map.findCell($headCell.pos - start)\n    let doc = $anchorCell.node(0)\n    if (anchorRect.left <= headRect.left) {\n      if (anchorRect.left > 0)\n        $anchorCell = doc.resolve(start + map.map[anchorRect.top * map.width])\n      if (headRect.right < map.width)\n        $headCell = doc.resolve(start + map.map[map.width * (headRect.top + 1) - 1])\n    } else {\n      if (headRect.left > 0)\n        $headCell = doc.resolve(start + map.map[headRect.top * map.width])\n      if (anchorRect.right < map.width)\n        $anchorCell = doc.resolve(start + map.map[map.width * (anchorRect.top + 1) - 1])\n    }\n    return new CellSelection($anchorCell, $headCell)\n  }\n\n  toJSON() {\n    return {type: \"cell\", anchor: this.$anchorCell.pos, head: this.$headCell.pos}\n  }\n\n  static fromJSON(doc, json) {\n    return new CellSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  }\n\n  // :: (Node, number, ?number) → CellSelection\n  static create(doc, anchorCell, headCell = anchorCell) {\n    return new CellSelection(doc.resolve(anchorCell), doc.resolve(headCell))\n  }\n\n  getBookmark() { return new CellBookmark(this.$anchorCell.pos, this.$headCell.pos) }\n}\n\nCellSelection.prototype.visible = false\n\nSelection.jsonID(\"cell\", CellSelection)\n\nclass CellBookmark {\n  constructor(anchor, head) {\n    this.anchor = anchor\n    this.head = head\n  }\n  map(mapping) {\n    return new CellBookmark(mapping.map(this.anchor), mapping.map(this.head))\n  }\n  resolve(doc) {\n    let $anchorCell = doc.resolve(this.anchor), $headCell = doc.resolve(this.head)\n    if ($anchorCell.parent.type.spec.tableRole == \"row\" &&\n        $headCell.parent.type.spec.tableRole == \"row\" &&\n        $anchorCell.index() < $anchorCell.parent.childCount &&\n        $headCell.index() < $headCell.parent.childCount &&\n        inSameTable($anchorCell, $headCell))\n      return new CellSelection($anchorCell, $headCell)\n    else\n      return Selection.near($headCell, 1)\n  }\n}\n\nexport function drawCellSelection(state) {\n  if (!(state.selection instanceof CellSelection)) return null\n  let cells = []\n  state.selection.forEachCell((node, pos) => {\n    cells.push(Decoration.node(pos, pos + node.nodeSize, {class: \"selectedCell\"}))\n  })\n  return DecorationSet.create(state.doc, cells)\n}\n\nfunction isCellBoundarySelection({$from, $to}) {\n  if ($from.pos == $to.pos || $from.pos < $from.pos - 6) return false // Cheap elimination\n  let afterFrom = $from.pos, beforeTo = $to.pos, depth = $from.depth\n  for (; depth >= 0; depth--, afterFrom++)\n    if ($from.after(depth + 1) < $from.end(depth)) break\n  for (let d = $to.depth; d >= 0; d--, beforeTo--)\n    if ($to.before(d + 1) > $to.start(d)) break\n  return afterFrom == beforeTo && /row|table/.test($from.node(depth).type.spec.tableRole)\n}\n\nfunction isTextSelectionAcrossCells({$from, $to}) {\n  let fromCellBoundaryNode;\n  let toCellBoundaryNode;\n\n  for (let i = $from.depth; i > 0; i--) {\n    let node = $from.node(i);\n    if (node.type.spec.tableRole === 'cell' || node.type.spec.tableRole === 'header_cell') {\n      fromCellBoundaryNode = node;\n      break;\n    }\n  }\n\n  for (let i = $to.depth; i > 0; i--) {\n    let node = $to.node(i);\n    if (node.type.spec.tableRole === 'cell' || node.type.spec.tableRole === 'header_cell') {\n      toCellBoundaryNode = node;\n      break;\n    }\n  }\n\n  return fromCellBoundaryNode !== toCellBoundaryNode && $to.parentOffset === 0\n}\n\nexport function normalizeSelection(state, tr, allowTableNodeSelection) {\n  let sel = (tr || state).selection, doc = (tr || state).doc, normalize, role\n  if (sel instanceof NodeSelection && (role = sel.node.type.spec.tableRole)) {\n    if (role == \"cell\" || role == \"header_cell\") {\n      normalize = CellSelection.create(doc, sel.from)\n    } else if (role == \"row\") {\n      let $cell = doc.resolve(sel.from + 1)\n      normalize = CellSelection.rowSelection($cell, $cell)\n    } else if (!allowTableNodeSelection) {\n      let map = TableMap.get(sel.node), start = sel.from + 1\n      let lastCell = start + map.map[map.width * map.height - 1]\n      normalize = CellSelection.create(doc, start + 1, lastCell)\n    }\n  } else if (sel instanceof TextSelection && isCellBoundarySelection(sel)) {\n    normalize = TextSelection.create(doc, sel.from)\n  } else if (sel instanceof TextSelection && isTextSelectionAcrossCells(sel)) {\n    normalize = TextSelection.create(doc, sel.$from.start(), sel.$from.end());\n  }\n  if (normalize)\n    (tr || (tr = state.tr)).setSelection(normalize)\n  return tr\n}\n","// This file defines a number of helpers for wiring up user input to\n// table-related functionality.\n\nimport {Slice, Fragment} from \"prosemirror-model\"\nimport {Selection, TextSelection} from \"prosemirror-state\"\nimport {keydownHandler} from \"prosemirror-keymap\"\n\nimport {key, nextCell, cellAround, inSameTable,\n        isInTable, selectionCell} from \"./util\"\nimport {CellSelection} from \"./cellselection\"\nimport {TableMap} from \"./tablemap\"\nimport {pastedCells, fitSlice, clipCells, insertCells} from \"./copypaste\"\nimport {tableNodeTypes} from \"./schema\"\n\nexport const handleKeyDown = keydownHandler({\n  \"ArrowLeft\": arrow(\"horiz\", -1),\n  \"ArrowRight\": arrow(\"horiz\", 1),\n  \"ArrowUp\": arrow(\"vert\", -1),\n  \"ArrowDown\": arrow(\"vert\", 1),\n\n  \"Shift-ArrowLeft\": shiftArrow(\"horiz\", -1),\n  \"Shift-ArrowRight\": shiftArrow(\"horiz\", 1),\n  \"Shift-ArrowUp\": shiftArrow(\"vert\", -1),\n  \"Shift-ArrowDown\": shiftArrow(\"vert\", 1),\n\n  \"Backspace\": deleteCellSelection,\n  \"Mod-Backspace\": deleteCellSelection,\n  \"Delete\": deleteCellSelection,\n  \"Mod-Delete\": deleteCellSelection\n})\n\nfunction maybeSetSelection(state, dispatch, selection) {\n  if (selection.eq(state.selection)) return false\n  if (dispatch) dispatch(state.tr.setSelection(selection).scrollIntoView())\n  return true\n}\n\nfunction arrow(axis, dir) {\n  return (state, dispatch, view) => {\n    let sel = state.selection\n    if (sel instanceof CellSelection) {\n      return maybeSetSelection(state, dispatch, Selection.near(sel.$headCell, dir))\n    }\n    if (axis != \"horiz\" && !sel.empty) return false\n    let end = atEndOfCell(view, axis, dir)\n    if (end == null) return false\n    if (axis == \"horiz\") {\n      return maybeSetSelection(state, dispatch, Selection.near(state.doc.resolve(sel.head + dir), dir))\n    } else {\n      let $cell = state.doc.resolve(end), $next = nextCell($cell, axis, dir), newSel\n      if ($next) newSel = Selection.near($next, 1)\n      else if (dir < 0) newSel = Selection.near(state.doc.resolve($cell.before(-1)), -1)\n      else newSel = Selection.near(state.doc.resolve($cell.after(-1)), 1)\n      return maybeSetSelection(state, dispatch, newSel)\n    }\n  }\n}\n\nfunction shiftArrow(axis, dir) {\n  return (state, dispatch, view) => {\n    let sel = state.selection\n    if (!(sel instanceof CellSelection)) {\n      let end = atEndOfCell(view, axis, dir)\n      if (end == null) return false\n      sel = new CellSelection(state.doc.resolve(end))\n    }\n    let $head = nextCell(sel.$headCell, axis, dir)\n    if (!$head) return false\n    return maybeSetSelection(state, dispatch, new CellSelection(sel.$anchorCell, $head))\n  }\n}\n\nfunction deleteCellSelection(state, dispatch) {\n  let sel = state.selection\n  if (!(sel instanceof CellSelection)) return false\n  if (dispatch) {\n    let tr = state.tr, baseContent = tableNodeTypes(state.schema).cell.createAndFill().content\n    sel.forEachCell((cell, pos) => {\n      if (!cell.content.eq(baseContent))\n        tr.replace(tr.mapping.map(pos + 1), tr.mapping.map(pos + cell.nodeSize - 1),\n                   new Slice(baseContent, 0, 0))\n    })\n    if (tr.docChanged) dispatch(tr)\n  }\n  return true\n}\n\nexport function handleTripleClick(view, pos) {\n  let doc = view.state.doc, $cell = cellAround(doc.resolve(pos))\n  if (!$cell) return false\n  view.dispatch(view.state.tr.setSelection(new CellSelection($cell)))\n  return true\n}\n\nexport function handlePaste(view, _, slice) {\n  if (!isInTable(view.state)) return false\n  let cells = pastedCells(slice), sel = view.state.selection\n  if (sel instanceof CellSelection) {\n    if (!cells) cells = {width: 1, height: 1, rows: [Fragment.from(fitSlice(tableNodeTypes(view.state.schema).cell, slice))]}\n    let table = sel.$anchorCell.node(-1), start = sel.$anchorCell.start(-1)\n    let rect = TableMap.get(table).rectBetween(sel.$anchorCell.pos - start, sel.$headCell.pos - start)\n    cells = clipCells(cells, rect.right - rect.left, rect.bottom - rect.top)\n    insertCells(view.state, view.dispatch, start, rect, cells)\n    return true\n  } else if (cells) {\n    let $cell = selectionCell(view.state), start = $cell.start(-1)\n    insertCells(view.state, view.dispatch, start, TableMap.get($cell.node(-1)).findCell($cell.pos - start), cells)\n    return true\n  } else {\n    return false\n  }\n}\n\nexport function handleMouseDown(view, startEvent) {\n  if (startEvent.ctrlKey || startEvent.metaKey) return\n\n  let startDOMCell = domInCell(view, startEvent.target), $anchor\n  if (startEvent.shiftKey && (view.state.selection instanceof CellSelection)) {\n    // Adding to an existing cell selection\n    setCellSelection(view.state.selection.$anchorCell, startEvent)\n    startEvent.preventDefault()\n  } else if (startEvent.shiftKey && startDOMCell &&\n             ($anchor = cellAround(view.state.selection.$anchor)) != null &&\n             cellUnderMouse(view, startEvent).pos != $anchor.pos) {\n    // Adding to a selection that starts in another cell (causing a\n    // cell selection to be created).\n    setCellSelection($anchor, startEvent)\n    startEvent.preventDefault()\n  } else if (!startDOMCell) {\n    // Not in a cell, let the default behavior happen.\n    return\n  }\n\n  // Create and dispatch a cell selection between the given anchor and\n  // the position under the mouse.\n  function setCellSelection($anchor, event) {\n    let $head = cellUnderMouse(view, event)\n    let starting = key.getState(view.state) == null\n    if (!$head || !inSameTable($anchor, $head)) {\n      if (starting) $head = $anchor\n      else return\n    }\n    let selection = new CellSelection($anchor, $head)\n    if (starting || !view.state.selection.eq(selection)) {\n      let tr = view.state.tr.setSelection(selection)\n      if (starting) tr.setMeta(key, $anchor.pos)\n      view.dispatch(tr)\n    }\n  }\n\n  // Stop listening to mouse motion events.\n  function stop() {\n    view.root.removeEventListener(\"mouseup\", stop)\n    view.root.removeEventListener(\"dragstart\", stop)\n    view.root.removeEventListener(\"mousemove\", move)\n    if (key.getState(view.state) != null) view.dispatch(view.state.tr.setMeta(key, -1))\n  }\n\n  function move(event) {\n    let anchor = key.getState(view.state), $anchor\n    if (anchor != null) {\n      // Continuing an existing cross-cell selection\n      $anchor = view.state.doc.resolve(anchor)\n    } else if (domInCell(view, event.target) != startDOMCell) {\n      // Moving out of the initial cell -- start a new cell selection\n      $anchor = cellUnderMouse(view, startEvent)\n      if (!$anchor) return stop()\n    }\n    if ($anchor) setCellSelection($anchor, event)\n  }\n  view.root.addEventListener(\"mouseup\", stop)\n  view.root.addEventListener(\"dragstart\", stop)\n  view.root.addEventListener(\"mousemove\", move)\n}\n\n// Check whether the cursor is at the end of a cell (so that further\n// motion would move out of the cell)\nfunction atEndOfCell(view, axis, dir) {\n  if (!(view.state.selection instanceof TextSelection)) return null\n  let {$head} = view.state.selection\n  for (let d = $head.depth - 1; d >= 0; d--) {\n    let parent = $head.node(d), index = dir < 0 ? $head.index(d) : $head.indexAfter(d)\n    if (index != (dir < 0 ? 0 : parent.childCount)) return null\n    if (parent.type.spec.tableRole == \"cell\" || parent.type.spec.tableRole == \"header_cell\") {\n      let cellPos = $head.before(d)\n      let dirStr = axis == \"vert\" ? (dir > 0 ? \"down\" : \"up\") : (dir > 0 ? \"right\" : \"left\")\n      return view.endOfTextblock(dirStr) ? cellPos : null\n    }\n  }\n  return null\n}\n\nfunction domInCell(view, dom) {\n  for (; dom && dom != view.dom; dom = dom.parentNode)\n    if (dom.nodeName == \"TD\" || dom.nodeName == \"TH\") return dom\n}\n\nfunction cellUnderMouse(view, event) {\n  let mousePos = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (!mousePos) return null\n  return mousePos ? cellAround(view.state.doc.resolve(mousePos.pos)) : null\n}\n","// This file defines helpers for normalizing tables, making sure no\n// cells overlap (which can happen, if you have the wrong col- and\n// rowspans) and that each row has the same width. Uses the problems\n// reported by `TableMap`.\n\nimport {PluginKey} from \"prosemirror-state\"\nimport {TableMap} from \"./tablemap\"\nimport {setAttr, removeColSpan} from \"./util\"\nimport {tableNodeTypes} from \"./schema\"\nimport {key} from \"./util\"\n\nexport const fixTablesKey = new PluginKey(\"fix-tables\")\n\n// Helper for iterating through the nodes in a document that changed\n// compared to the given previous document. Useful for avoiding\n// duplicate work on each transaction.\nfunction changedDescendants(old, cur, offset, f) {\n  let oldSize = old.childCount, curSize = cur.childCount\n  outer: for (let i = 0, j = 0; i < curSize; i++) {\n    let child = cur.child(i)\n    for (let scan = j, e = Math.min(oldSize, i + 3); scan < e; scan++) {\n      if (old.child(scan) == child) {\n        j = scan + 1\n        offset += child.nodeSize\n        continue outer\n      }\n    }\n    f(child, offset)\n    if (j < oldSize && old.child(j).sameMarkup(child))\n      changedDescendants(old.child(j), child, offset + 1, f)\n    else\n      child.nodesBetween(0, child.content.size, f, offset + 1)\n    offset += child.nodeSize\n  }\n}\n\n// :: (EditorState, ?EditorState) → ?Transaction\n// Inspect all tables in the given state's document and return a\n// transaction that fixes them, if necessary. If `oldState` was\n// provided, that is assumed to hold a previous, known-good state,\n// which will be used to avoid re-scanning unchanged parts of the\n// document.\nexport function fixTables(state, oldState) {\n  let tr, check = (node, pos) => {\n    if (node.type.spec.tableRole == \"table\") tr = fixTable(state, node, pos, tr)\n  }\n  if (!oldState) state.doc.descendants(check)\n  else if (oldState.doc != state.doc) changedDescendants(oldState.doc, state.doc, 0, check)\n  return tr\n}\n\n// : (EditorState, Node, number, ?Transaction) → ?Transaction\n// Fix the given table, if necessary. Will append to the transaction\n// it was given, if non-null, or create a new one if necessary.\nexport function fixTable(state, table, tablePos, tr) {\n  let map = TableMap.get(table)\n  if (!map.problems) return tr\n  if (!tr) tr = state.tr\n\n  // Track which rows we must add cells to, so that we can adjust that\n  // when fixing collisions.\n  let mustAdd = []\n  for (let i = 0; i < map.height; i++) mustAdd.push(0)\n  for (let i = 0; i < map.problems.length; i++) {\n    let prob = map.problems[i]\n    if (prob.type == \"collision\") {\n      let cell = table.nodeAt(prob.pos)\n      for (let j = 0; j < cell.attrs.rowspan; j++) mustAdd[prob.row + j] += prob.n\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, removeColSpan(cell.attrs, cell.attrs.colspan - prob.n, prob.n))\n    } else if (prob.type == \"missing\") {\n      mustAdd[prob.row] += prob.n\n    } else if (prob.type == \"overlong_rowspan\") {\n      let cell = table.nodeAt(prob.pos)\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, setAttr(cell.attrs, \"rowspan\", cell.attrs.rowspan - prob.n))\n    } else if (prob.type == \"colwidth mismatch\") {\n      let cell = table.nodeAt(prob.pos)\n      tr.setNodeMarkup(tr.mapping.map(tablePos + 1 + prob.pos), null, setAttr(cell.attrs, \"colwidth\", prob.colwidth))\n    }\n  }\n  let first, last\n  for (let i = 0; i < mustAdd.length; i++) if (mustAdd[i]) {\n    if (first == null) first = i\n    last = i\n  }\n  // Add the necessary cells, using a heuristic for whether to add the\n  // cells at the start or end of the rows (if it looks like a 'bite'\n  // was taken out of the table, add cells at the start of the row\n  // after the bite. Otherwise add them at the end).\n  for (let i = 0, pos = tablePos + 1; i < map.height; i++) {\n    let row = table.child(i)\n    let end = pos + row.nodeSize\n    let add = mustAdd[i]\n    if (add > 0) {\n      let tableNodeType = 'cell';\n      if (row.firstChild) {\n        tableNodeType = row.firstChild.type.spec.tableRole\n      }\n      let nodes = []\n      for (let j = 0; j < add; j++)\n        nodes.push(tableNodeTypes(state.schema)[tableNodeType].createAndFill())\n      let side = (i == 0 || first == i - 1) && last == i ? pos + 1 : end - 1\n      tr.insert(tr.mapping.map(side), nodes)\n    }\n    pos = end\n  }\n  return tr.setMeta(fixTablesKey, { fixTables: true })\n}\n","// This file defines a number of table-related commands.\n\nimport {TextSelection} from \"prosemirror-state\"\nimport {Fragment} from \"prosemirror-model\"\n\nimport {Rect, TableMap} from \"./tablemap\"\nimport {CellSelection} from \"./cellselection\"\nimport {\n  addColSpan,\n  cellAround,\n  cellWrapping,\n  columnIsHeader,\n  isInTable,\n  moveCellForward,\n  removeColSpan,\n  selectionCell,\n  setAttr\n} from \"./util\"\nimport {tableNodeTypes} from \"./schema\"\n\n// Helper to get the selected rectangle in a table, if any. Adds table\n// map, table node, and table start offset to the object for\n// convenience.\nexport function selectedRect(state) {\n  let sel = state.selection, $pos = selectionCell(state)\n  let table = $pos.node(-1), tableStart = $pos.start(-1), map = TableMap.get(table)\n  let rect\n  if (sel instanceof CellSelection)\n    rect = map.rectBetween(sel.$anchorCell.pos - tableStart, sel.$headCell.pos - tableStart)\n  else\n    rect = map.findCell($pos.pos - tableStart)\n  rect.tableStart = tableStart\n  rect.map = map\n  rect.table = table\n  return rect\n}\n\n// Add a column at the given position in a table.\nexport function addColumn(tr, {map, tableStart, table}, col) {\n  let refColumn = col > 0 ? -1 : 0\n  if (columnIsHeader(map, table, col + refColumn))\n    refColumn = col == 0 || col == map.width ? null : 0\n\n  for (let row = 0; row < map.height; row++) {\n    let index = row * map.width + col\n    // If this position falls inside a col-spanning cell\n    if (col > 0 && col < map.width && map.map[index - 1] == map.map[index]) {\n      let pos = map.map[index], cell = table.nodeAt(pos)\n      tr.setNodeMarkup(tr.mapping.map(tableStart + pos), null,\n                       addColSpan(cell.attrs, col - map.colCount(pos)))\n      // Skip ahead if rowspan > 1\n      row += cell.attrs.rowspan - 1\n    } else {\n      let type = refColumn == null ? tableNodeTypes(table.type.schema).cell\n          : table.nodeAt(map.map[index + refColumn]).type\n      let pos = map.positionAt(row, col, table)\n      tr.insert(tr.mapping.map(tableStart + pos), type.createAndFill())\n    }\n  }\n  return tr\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column before the column with the selection.\nexport function addColumnBefore(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addColumn(state.tr, rect, rect.left))\n  }\n  return true\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command to add a column after the column with the selection.\nexport function addColumnAfter(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addColumn(state.tr, rect, rect.right))\n  }\n  return true\n}\n\nexport function removeColumn(tr, {map, table, tableStart}, col) {\n  let mapStart = tr.mapping.maps.length\n  for (let row = 0; row < map.height;) {\n    let index = row * map.width + col, pos = map.map[index], cell = table.nodeAt(pos)\n    // If this is part of a col-spanning cell\n    if ((col > 0 && map.map[index - 1] == pos) || (col < map.width - 1 && map.map[index + 1] == pos)) {\n      tr.setNodeMarkup(tr.mapping.slice(mapStart).map(tableStart + pos), null,\n                       removeColSpan(cell.attrs, col - map.colCount(pos)))\n    } else {\n      let start = tr.mapping.slice(mapStart).map(tableStart + pos)\n      tr.delete(start, start + cell.nodeSize)\n    }\n    row += cell.attrs.rowspan\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Command function that removes the selected columns from a table.\nexport function deleteColumn(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state), tr = state.tr\n    if (rect.left == 0 && rect.right == rect.map.width) return false\n    for (let i = rect.right - 1;; i--) {\n      removeColumn(tr, rect, i)\n      if (i == rect.left) break\n      rect.table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc\n      rect.map = TableMap.get(rect.table)\n    }\n    dispatch(tr)\n  }\n  return true\n}\n\nexport function rowIsHeader(map, table, row) {\n  let headerCell = tableNodeTypes(table.type.schema).header_cell\n  for (let col = 0; col < map.width; col++)\n    if (table.nodeAt(map.map[col + row * map.width]).type != headerCell)\n      return false\n  return true\n}\n\nexport function addRow(tr, {map, tableStart, table}, row) {\n  let rowPos = tableStart\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize\n  let cells = [], refRow = row > 0 ? -1 : 0\n  if (rowIsHeader(map, table, row + refRow))\n    refRow = row == 0 || row == map.height ? null : 0\n  for (let col = 0, index = map.width * row; col < map.width; col++, index++) {\n    // Covered by a rowspan cell\n    if (row > 0 && row < map.height && map.map[index] == map.map[index - map.width]) {\n      let pos = map.map[index], attrs = table.nodeAt(pos).attrs\n      tr.setNodeMarkup(tableStart + pos, null, setAttr(attrs, \"rowspan\", attrs.rowspan + 1))\n      col += attrs.colspan - 1\n    } else {\n      let type = refRow == null ? tableNodeTypes(table.type.schema).cell\n          : table.nodeAt(map.map[index + refRow * map.width]).type\n      cells.push(type.createAndFill())\n    }\n  }\n  tr.insert(rowPos, tableNodeTypes(table.type.schema).row.create(null, cells))\n  return tr\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row before the selection.\nexport function addRowBefore(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addRow(state.tr, rect, rect.top))\n  }\n  return true\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Add a table row after the selection.\nexport function addRowAfter(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state)\n    dispatch(addRow(state.tr, rect, rect.bottom))\n  }\n  return true\n}\n\nexport function removeRow(tr, {map, table, tableStart}, row) {\n  let rowPos = 0\n  for (let i = 0; i < row; i++) rowPos += table.child(i).nodeSize\n  let nextRow = rowPos + table.child(row).nodeSize\n\n  let mapFrom = tr.mapping.maps.length\n  tr.delete(rowPos + tableStart, nextRow + tableStart)\n\n  for (let col = 0, index = row * map.width; col < map.width; col++, index++) {\n    let pos = map.map[index]\n    if (row > 0 && pos == map.map[index - map.width]) {\n      // If this cell starts in the row above, simply reduce its rowspan\n      let attrs = table.nodeAt(pos).attrs\n      tr.setNodeMarkup(tr.mapping.slice(mapFrom).map(pos + tableStart), null, setAttr(attrs, \"rowspan\", attrs.rowspan - 1))\n      col += attrs.colspan - 1\n    } else if (row < map.width && pos == map.map[index + map.width]) {\n      // Else, if it continues in the row below, it has to be moved down\n      let cell = table.nodeAt(pos)\n      let copy = cell.type.create(setAttr(cell.attrs, \"rowspan\", cell.attrs.rowspan - 1), cell.content)\n      let newPos = map.positionAt(row + 1, col, table)\n      tr.insert(tr.mapping.slice(mapFrom).map(tableStart + newPos), copy)\n      col += cell.attrs.colspan - 1\n    }\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Remove the selected rows from a table.\nexport function deleteRow(state, dispatch) {\n  if (!isInTable(state)) return false\n  if (dispatch) {\n    let rect = selectedRect(state), tr = state.tr\n    if (rect.top == 0 && rect.bottom == rect.map.height) return false\n    for (let i = rect.bottom - 1;; i--) {\n      removeRow(tr, rect, i)\n      if (i == rect.top) break\n      rect.table = rect.tableStart ? tr.doc.nodeAt(rect.tableStart - 1) : tr.doc\n      rect.map = TableMap.get(rect.table)\n    }\n    dispatch(tr)\n  }\n  return true\n}\n\nfunction isEmpty(cell) {\n  let c = cell.content\n  return c.childCount == 1 && c.firstChild.isTextblock && c.firstChild.childCount == 0\n}\n\nfunction cellsOverlapRectangle({width, height, map}, rect) {\n  let indexTop = rect.top * width + rect.left, indexLeft = indexTop\n  let indexBottom = (rect.bottom - 1) * width + rect.left, indexRight = indexTop + (rect.right - rect.left - 1)\n  for (let i = rect.top; i < rect.bottom; i++) {\n    if (rect.left > 0 && map[indexLeft] == map[indexLeft - 1] ||\n        rect.right < width && map[indexRight] == map[indexRight + 1]) return true\n    indexLeft += width; indexRight += width\n  }\n  for (let i = rect.left; i < rect.right; i++) {\n    if (rect.top > 0 && map[indexTop] == map[indexTop - width] ||\n        rect.bottom < height && map[indexBottom] == map[indexBottom + width]) return true\n    indexTop++; indexBottom++\n  }\n  return false\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Merge the selected cells into a single cell. Only available when\n// the selected cells' outline forms a rectangle.\nexport function mergeCells(state, dispatch) {\n  let sel = state.selection\n  if (!(sel instanceof CellSelection) || sel.$anchorCell.pos == sel.$headCell.pos) return false\n  let rect = selectedRect(state), {map} = rect\n  if (cellsOverlapRectangle(map, rect)) return false\n  if (dispatch) {\n    let tr = state.tr, seen = {}, content = Fragment.empty, mergedPos, mergedCell\n    for (let row = rect.top; row < rect.bottom; row++) {\n      for (let col = rect.left; col < rect.right; col++) {\n        let cellPos = map.map[row * map.width + col], cell = rect.table.nodeAt(cellPos)\n        if (seen[cellPos]) continue\n        seen[cellPos] = true\n        if (mergedPos == null) {\n          mergedPos = cellPos\n          mergedCell = cell\n        } else {\n          if (!isEmpty(cell)) content = content.append(cell.content)\n          let mapped = tr.mapping.map(cellPos + rect.tableStart)\n          tr.delete(mapped, mapped + cell.nodeSize)\n        }\n      }\n    }\n    tr.setNodeMarkup(mergedPos + rect.tableStart, null,\n                     setAttr(addColSpan(mergedCell.attrs, mergedCell.attrs.colspan, (rect.right - rect.left) - mergedCell.attrs.colspan),\n                             \"rowspan\", rect.bottom - rect.top))\n    if (content.size) {\n      let end = mergedPos + 1 + mergedCell.content.size\n      let start = isEmpty(mergedCell) ? mergedPos + 1 : end\n      tr.replaceWith(start + rect.tableStart, end + rect.tableStart, content)\n    }\n    tr.setSelection(new CellSelection(tr.doc.resolve(mergedPos + rect.tableStart)))\n    dispatch(tr)\n  }\n  return true\n}\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells. Use the first cell type for the new cells.\nexport function splitCell(state, dispatch) {\n  const nodeTypes = tableNodeTypes(state.schema);\n  return splitCellWithType(({\n    node,\n  }) => {\n    return nodeTypes[node.type.spec.tableRole]\n  })(state, dispatch)\n}\n\n// :: (getCellType: ({ row: number, col: number, node: Node}) → NodeType) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Split a selected cell, whose rowpan or colspan is greater than one,\n// into smaller cells with the cell type (th, td) returned by getType function.\nexport function splitCellWithType(getCellType) {\n  return (state, dispatch) => {\n    let sel = state.selection\n    let cellNode, cellPos\n    if (!(sel instanceof CellSelection)) {\n      cellNode = cellWrapping(sel.$from)\n      if (!cellNode) return false\n      cellPos = cellAround(sel.$from).pos\n    } else {\n      if (sel.$anchorCell.pos != sel.$headCell.pos) return false\n      cellNode = sel.$anchorCell.nodeAfter\n      cellPos = sel.$anchorCell.pos\n    }\n    if (cellNode.attrs.colspan == 1 && cellNode.attrs.rowspan == 1) {return false}\n    if (dispatch) {\n      let baseAttrs = cellNode.attrs, attrs = [], colwidth = baseAttrs.colwidth\n      if (baseAttrs.rowspan > 1) baseAttrs = setAttr(baseAttrs, \"rowspan\", 1)\n      if (baseAttrs.colspan > 1) baseAttrs = setAttr(baseAttrs, \"colspan\", 1)\n      let rect = selectedRect(state), tr = state.tr\n      for (let i = 0; i < rect.right - rect.left; i++)\n        attrs.push(colwidth ? setAttr(baseAttrs, \"colwidth\", colwidth && colwidth[i] ? [colwidth[i]] : null) : baseAttrs)\n      let lastCell;\n      for (let row = rect.top; row < rect.bottom; row++) {\n        let pos = rect.map.positionAt(row, rect.left, rect.table)\n        if (row == rect.top) pos += cellNode.nodeSize\n        for (let col = rect.left, i = 0; col < rect.right; col++, i++) {\n          if (col == rect.left && row == rect.top) continue\n          tr.insert(lastCell = tr.mapping.map(pos + rect.tableStart, 1), getCellType({ node: cellNode, row, col}).createAndFill(attrs[i]))\n        }\n      }\n      tr.setNodeMarkup(cellPos, getCellType({ node: cellNode, row: rect.top, col: rect.left}), attrs[0])\n      if (sel instanceof CellSelection)\n        tr.setSelection(new CellSelection(tr.doc.resolve(sel.$anchorCell.pos),\n                                          lastCell && tr.doc.resolve(lastCell)))\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\n// :: (string, any) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that sets the given attribute to the given value,\n// and is only available when the currently selected cell doesn't\n// already have that attribute set to that value.\nexport function setCellAttr(name, value) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    let $cell = selectionCell(state)\n    if ($cell.nodeAfter.attrs[name] === value) return false\n    if (dispatch) {\n      let tr = state.tr\n      if (state.selection instanceof CellSelection)\n        state.selection.forEachCell((node, pos) => {\n          if (node.attrs[name] !== value)\n            tr.setNodeMarkup(pos, null, setAttr(node.attrs, name, value))\n        })\n      else\n        tr.setNodeMarkup($cell.pos, null, setAttr($cell.nodeAfter.attrs, name, value))\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\nfunction deprecated_toggleHeader(type) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      let types = tableNodeTypes(state.schema)\n      let rect = selectedRect(state), tr = state.tr\n      let cells = rect.map.cellsInRect(type == \"column\" ? new Rect(rect.left, 0, rect.right, rect.map.height) :\n                                       type == \"row\" ? new Rect(0, rect.top, rect.map.width, rect.bottom) : rect)\n      let nodes = cells.map(pos => rect.table.nodeAt(pos))\n      for (let i = 0; i < cells.length; i++) // Remove headers, if any\n        if (nodes[i].type == types.header_cell)\n          tr.setNodeMarkup(rect.tableStart + cells[i], types.cell, nodes[i].attrs)\n      if (tr.steps.length == 0) for (let i = 0; i < cells.length; i++) // No headers removed, add instead\n        tr.setNodeMarkup(rect.tableStart + cells[i], types.header_cell, nodes[i].attrs)\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\nfunction isHeaderEnabledByType(type, rect, types) {\n  // Get cell positions for first row or first column\n  const cellPositions = rect.map.cellsInRect({\n    left: 0,\n    top: 0,\n    right: type == \"row\" ? rect.map.width : 1,\n    bottom: type == \"column\" ? rect.map.height : 1,\n  })\n\n  for (let i = 0; i < cellPositions.length; i++) {\n    const cell = rect.table.nodeAt(cellPositions[i])\n    if (cell && cell.type !== types.header_cell) {\n      return false\n    }\n  }\n\n  return true\n}\n\n// :: (string, ?{ useDeprecatedLogic: bool }) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles between row/column header and normal cells (Only applies to first row/column).\n// For deprecated behavior pass `useDeprecatedLogic` in options with true.\nexport function toggleHeader(type, options) {\n  options = options || { useDeprecatedLogic: false }\n\n  if (options.useDeprecatedLogic)\n    return deprecated_toggleHeader(type)\n\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    if (dispatch) {\n      let types = tableNodeTypes(state.schema)\n      let rect = selectedRect(state), tr = state.tr\n\n      let isHeaderRowEnabled = isHeaderEnabledByType(\"row\", rect, types)\n      let isHeaderColumnEnabled = isHeaderEnabledByType(\"column\", rect, types)\n\n      let isHeaderEnabled = type === \"column\" ? isHeaderRowEnabled :\n                            type === \"row\"    ? isHeaderColumnEnabled : false\n\n      let selectionStartsAt = isHeaderEnabled ? 1 : 0\n\n      let cellsRect = type == \"column\" ? new Rect(0, selectionStartsAt, 1, rect.map.height) :\n                      type == \"row\" ? new Rect(selectionStartsAt, 0, rect.map.width, 1) : rect\n\n      let newType = type == \"column\" ? isHeaderColumnEnabled ? types.cell : types.header_cell :\n                    type == \"row\" ? isHeaderRowEnabled ? types.cell : types.header_cell : types.cell\n\n      rect.map.cellsInRect(cellsRect).forEach(relativeCellPos => {\n        const cellPos = relativeCellPos + rect.tableStart\n        const cell = tr.doc.nodeAt(cellPos)\n\n        if (cell) {\n          tr.setNodeMarkup(cellPos, newType, cell.attrs)\n        }\n      })\n\n      dispatch(tr)\n    }\n    return true\n  }\n}\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected row contains header cells.\nexport let toggleHeaderRow = toggleHeader(\"row\", { useDeprecatedLogic: true })\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected column contains header cells.\nexport let toggleHeaderColumn = toggleHeader(\"column\", { useDeprecatedLogic: true })\n\n// :: (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Toggles whether the selected cells are header cells.\nexport let toggleHeaderCell = toggleHeader(\"cell\", { useDeprecatedLogic: true })\n\nfunction findNextCell($cell, dir) {\n  if (dir < 0) {\n    let before = $cell.nodeBefore\n    if (before) return $cell.pos - before.nodeSize\n    for (let row = $cell.index(-1) - 1, rowEnd = $cell.before(); row >= 0; row--) {\n      let rowNode = $cell.node(-1).child(row)\n      if (rowNode.childCount) return rowEnd - 1 - rowNode.lastChild.nodeSize\n      rowEnd -= rowNode.nodeSize\n    }\n  } else {\n    if ($cell.index() < $cell.parent.childCount - 1) return $cell.pos + $cell.nodeAfter.nodeSize\n    let table = $cell.node(-1)\n    for (let row = $cell.indexAfter(-1), rowStart = $cell.after(); row < table.childCount; row++) {\n      let rowNode = table.child(row)\n      if (rowNode.childCount) return rowStart + 1\n      rowStart += rowNode.nodeSize\n    }\n  }\n}\n\n// :: (number) → (EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command for selecting the next (direction=1) or previous\n// (direction=-1) cell in a table.\nexport function goToNextCell(direction) {\n  return function(state, dispatch) {\n    if (!isInTable(state)) return false\n    let cell = findNextCell(selectionCell(state), direction)\n    if (cell == null) return\n    if (dispatch) {\n      let $cell = state.doc.resolve(cell)\n      dispatch(state.tr.setSelection(TextSelection.between($cell, moveCellForward($cell))).scrollIntoView())\n    }\n    return true\n  }\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Deletes the table around the selection, if any.\nexport function deleteTable(state, dispatch) {\n  let $pos = state.selection.$anchor\n  for (let d = $pos.depth; d > 0; d--) {\n    let node = $pos.node(d)\n    if (node.type.spec.tableRole == \"table\") {\n      if (dispatch) dispatch(state.tr.delete($pos.before(d), $pos.after(d)).scrollIntoView())\n      return true\n    }\n  }\n  return false\n}\n","export class TableView {\n  constructor(node, cellMinWidth) {\n    this.node = node\n    this.cellMinWidth = cellMinWidth\n    this.dom = document.createElement(\"div\")\n    this.dom.className = \"tableWrapper\"\n    this.table = this.dom.appendChild(document.createElement(\"table\"))\n    this.colgroup = this.table.appendChild(document.createElement(\"colgroup\"))\n    updateColumns(node, this.colgroup, this.table, cellMinWidth)\n    this.contentDOM = this.table.appendChild(document.createElement(\"tbody\"))\n  }\n\n  update(node) {\n    if (node.type != this.node.type) return false\n    this.node = node\n    updateColumns(node, this.colgroup, this.table, this.cellMinWidth)\n    return true\n  }\n\n  ignoreMutation(record) {\n    return record.type == \"attributes\" && (record.target == this.table || this.colgroup.contains(record.target))\n  }\n}\n\nexport function updateColumns(node, colgroup, table, cellMinWidth, overrideCol, overrideValue) {\n  let totalWidth = 0, fixedWidth = true\n  let nextDOM = colgroup.firstChild, row = node.firstChild\n  for (let i = 0, col = 0; i < row.childCount; i++) {\n    let {colspan, colwidth} = row.child(i).attrs\n    for (let j = 0; j < colspan; j++, col++) {\n      let hasWidth = overrideCol == col ? overrideValue : colwidth && colwidth[j]\n      let cssWidth = hasWidth ? hasWidth + \"px\" : \"\"\n      totalWidth += hasWidth || cellMinWidth\n      if (!hasWidth) fixedWidth = false\n      if (!nextDOM) {\n        colgroup.appendChild(document.createElement(\"col\")).style.width = cssWidth\n      } else {\n        if (nextDOM.style.width != cssWidth) nextDOM.style.width = cssWidth\n        nextDOM = nextDOM.nextSibling\n      }\n    }\n  }\n\n  while (nextDOM) {\n    let after = nextDOM.nextSibling\n    nextDOM.parentNode.removeChild(nextDOM)\n    nextDOM = after\n  }\n\n  if (fixedWidth) {\n    table.style.width = totalWidth + \"px\"\n    table.style.minWidth = \"\"\n  } else {\n    table.style.width = \"\"\n    table.style.minWidth = totalWidth + \"px\"\n  }\n}\n","import {Plugin, PluginKey} from \"prosemirror-state\"\nimport {Decoration, DecorationSet} from \"prosemirror-view\"\nimport {cellAround, pointsAtCell, setAttr} from \"./util\"\nimport {TableMap} from \"./tablemap\"\nimport {TableView, updateColumns} from \"./tableview\"\nimport {tableNodeTypes} from \"./schema\"\n\nexport const key = new PluginKey(\"tableColumnResizing\")\n\nexport function columnResizing({ handleWidth = 5, cellMinWidth = 25, View = TableView, lastColumnResizable = true } = {}) {\n  let plugin = new Plugin({\n    key,\n    state: {\n      init(_, state) {\n        this.spec.props.nodeViews[tableNodeTypes(state.schema).table.name] =\n          (node, view) => new View(node, cellMinWidth, view)\n        return new ResizeState(-1, false)\n      },\n      apply(tr, prev) {\n        return prev.apply(tr)\n      }\n    },\n    props: {\n      attributes(state) {\n        let pluginState = key.getState(state)\n        return pluginState.activeHandle > -1 ? {class: \"resize-cursor\"} : null\n      },\n\n      handleDOMEvents: {\n        mousemove(view, event) { handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) },\n        mouseleave(view) { handleMouseLeave(view) },\n        mousedown(view, event) { handleMouseDown(view, event, cellMinWidth) }\n      },\n\n      decorations(state) {\n        let pluginState = key.getState(state)\n        if (pluginState.activeHandle > -1) return handleDecorations(state, pluginState.activeHandle)\n      },\n\n      nodeViews: {}\n    }\n  })\n  return plugin\n}\n\nclass ResizeState {\n  constructor(activeHandle, dragging) {\n    this.activeHandle = activeHandle\n    this.dragging = dragging\n  }\n\n  apply(tr) {\n    let state = this, action = tr.getMeta(key)\n    if (action && action.setHandle != null)\n      return new ResizeState(action.setHandle, null)\n    if (action && action.setDragging !== undefined)\n      return new ResizeState(state.activeHandle, action.setDragging)\n    if (state.activeHandle > -1 && tr.docChanged) {\n      let handle = tr.mapping.map(state.activeHandle, -1)\n      if (!pointsAtCell(tr.doc.resolve(handle))) handle = null\n      state = new ResizeState(handle, state.dragging)\n    }\n    return state\n  }\n}\n\nfunction handleMouseMove(view, event, handleWidth, cellMinWidth, lastColumnResizable) {\n  let pluginState = key.getState(view.state)\n\n  if (!pluginState.dragging) {\n    let target = domCellAround(event.target), cell = -1\n    if (target) {\n      let {left, right} = target.getBoundingClientRect()\n      if (event.clientX - left <= handleWidth)\n        cell = edgeCell(view, event, \"left\")\n      else if (right - event.clientX <= handleWidth)\n        cell = edgeCell(view, event, \"right\")\n    }\n\n    if (cell != pluginState.activeHandle) {\n      if (!lastColumnResizable && cell !== -1) {\n        let $cell = view.state.doc.resolve(cell)\n        let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n        let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n\n        if (col == map.width - 1) {\n          return\n        }\n      }\n\n      updateHandle(view, cell)\n    }\n  }\n}\n\nfunction handleMouseLeave(view) {\n  let pluginState = key.getState(view.state)\n  if (pluginState.activeHandle > -1 && !pluginState.dragging) updateHandle(view, -1)\n}\n\nfunction handleMouseDown(view, event, cellMinWidth) {\n  let pluginState = key.getState(view.state)\n  if (pluginState.activeHandle == -1 || pluginState.dragging) return false\n\n  let cell = view.state.doc.nodeAt(pluginState.activeHandle)\n  let width = currentColWidth(view, pluginState.activeHandle, cell.attrs)\n  view.dispatch(view.state.tr.setMeta(key, {setDragging: {startX: event.clientX, startWidth: width}}))\n\n  function finish(event) {\n    window.removeEventListener(\"mouseup\", finish)\n    window.removeEventListener(\"mousemove\", move)\n    let pluginState = key.getState(view.state)\n    if (pluginState.dragging) {\n      updateColumnWidth(view, pluginState.activeHandle, draggedWidth(pluginState.dragging, event, cellMinWidth))\n      view.dispatch(view.state.tr.setMeta(key, {setDragging: null}))\n    }\n  }\n  function move(event) {\n    if (!event.which) return finish(event)\n    let pluginState = key.getState(view.state)\n    let dragged = draggedWidth(pluginState.dragging, event, cellMinWidth)\n    displayColumnWidth(view, pluginState.activeHandle, dragged, cellMinWidth)\n  }\n\n  window.addEventListener(\"mouseup\", finish)\n  window.addEventListener(\"mousemove\", move)\n  event.preventDefault()\n  return true\n}\n\nfunction currentColWidth(view, cellPos, {colspan, colwidth}) {\n  let width = colwidth && colwidth[colwidth.length - 1]\n  if (width) return width\n  let dom = view.domAtPos(cellPos)\n  let node = dom.node.childNodes[dom.offset]\n  let domWidth = node.offsetWidth, parts = colspan\n  if (colwidth) for (let i = 0; i < colspan; i++) if (colwidth[i]) {\n    domWidth -= colwidth[i]\n    parts--\n  }\n  return domWidth / parts\n}\n\nfunction domCellAround(target) {\n  while (target && target.nodeName != \"TD\" && target.nodeName != \"TH\")\n    target = target.classList.contains(\"ProseMirror\") ? null : target.parentNode\n  return target\n}\n\nfunction edgeCell(view, event, side) {\n  let found = view.posAtCoords({left: event.clientX, top: event.clientY})\n  if (!found) return -1\n  let {pos} = found\n  let $cell = cellAround(view.state.doc.resolve(pos))\n  if (!$cell) return -1\n  if (side == \"right\") return $cell.pos\n  let map = TableMap.get($cell.node(-1)), start = $cell.start(-1)\n  let index = map.map.indexOf($cell.pos - start)\n  return index % map.width == 0 ? -1 : start + map.map[index - 1]\n}\n\nfunction draggedWidth(dragging, event, cellMinWidth) {\n  let offset = event.clientX - dragging.startX\n  return Math.max(cellMinWidth, dragging.startWidth + offset)\n}\n\nfunction updateHandle(view, value) {\n  view.dispatch(view.state.tr.setMeta(key, {setHandle: value}))\n}\n\nfunction updateColumnWidth(view, cell, width) {\n  let $cell = view.state.doc.resolve(cell)\n  let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n  let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n  let tr = view.state.tr\n  for (let row = 0; row < map.height; row++) {\n    let mapIndex = row * map.width + col\n    // Rowspanning cell that has already been handled\n    if (row && map.map[mapIndex] == map.map[mapIndex - map.width]) continue\n    let pos = map.map[mapIndex], {attrs} = table.nodeAt(pos)\n    let index = attrs.colspan == 1 ? 0 : col - map.colCount(pos)\n    if (attrs.colwidth && attrs.colwidth[index] == width) continue\n    let colwidth = attrs.colwidth ? attrs.colwidth.slice() : zeroes(attrs.colspan)\n    colwidth[index] = width\n    tr.setNodeMarkup(start + pos, null, setAttr(attrs, \"colwidth\", colwidth))\n  }\n  if (tr.docChanged) view.dispatch(tr)\n}\n\nfunction displayColumnWidth(view, cell, width, cellMinWidth) {\n  let $cell = view.state.doc.resolve(cell)\n  let table = $cell.node(-1), start = $cell.start(-1)\n  let col = TableMap.get(table).colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan - 1\n  let dom = view.domAtPos($cell.start(-1)).node\n  while (dom.nodeName != \"TABLE\") dom = dom.parentNode\n  updateColumns(table, dom.firstChild, dom, cellMinWidth, col, width)\n}\n\nfunction zeroes(n) {\n  let result = []\n  for (let i = 0; i < n; i++) result.push(0)\n  return result\n}\n\nfunction handleDecorations(state, cell) {\n  let decorations = []\n  let $cell = state.doc.resolve(cell)\n  let table = $cell.node(-1), map = TableMap.get(table), start = $cell.start(-1)\n  let col = map.colCount($cell.pos - start) + $cell.nodeAfter.attrs.colspan\n  for (let row = 0; row < map.height; row++) {\n    let index = col + row * map.width - 1\n    // For positions that are have either a different cell or the end\n    // of the table to their right, and either the top of the table or\n    // a different cell above them, add a decoration\n    if ((col == map.width || map.map[index] != map.map[index + 1]) &&\n        (row == 0 || map.map[index - 1] != map.map[index - 1 - map.width])) {\n      let cellPos = map.map[index]\n      let pos = start + cellPos + table.nodeAt(cellPos).nodeSize - 1\n      let dom = document.createElement(\"div\")\n      dom.className = \"column-resize-handle\"\n      decorations.push(Decoration.widget(pos, dom))\n    }\n  }\n  return DecorationSet.create(state.doc, decorations)\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { InputRule } from 'prosemirror-inputrules';\nimport { EditorState, Plugin, PluginKey, PluginSpec, TextSelection, Transaction } from 'prosemirror-state';\nimport type { EditorView } from 'prosemirror-view';\n\nfunction run(view: EditorView, from: number, to: number, text: string, rules: InputRule[], plugin: Plugin) {\n    if (view.composing) return false;\n    const state = view.state,\n        $from = state.doc.resolve(from);\n    if ($from.parent.type.spec.code) return false;\n    const textBefore =\n        $from.parent.textBetween(Math.max(0, $from.parentOffset - 500), $from.parentOffset, undefined, '\\ufffc') + text;\n    for (let i = 0; i < rules.length; i++) {\n        const match = (rules[i] as { match: RegExp }).match.exec(textBefore);\n        const tr =\n            match &&\n            match[0] &&\n            (\n                rules[i] as { handler: (state: EditorState, match: string[], from: number, to: number) => Transaction }\n            ).handler(state, match, from - (match[0].length - text.length), to);\n        if (!tr) continue;\n        view.dispatch(tr.setMeta(plugin, { transform: tr, from, to, text }));\n        return true;\n    }\n    return false;\n}\n\nexport const customInputRulesKey = new PluginKey('MILKDOWN_PLUGIN_CUSTOM_INPUTRULES');\nexport const customInputRules = ({ rules }: { rules: InputRule[] }): Plugin => {\n    const plugin: Plugin = new Plugin({\n        key: customInputRulesKey,\n        isInputRules: true,\n\n        state: {\n            init() {\n                return null;\n            },\n            apply(tr, prev) {\n                const stored = tr.getMeta(this);\n                if (stored) return stored;\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            },\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run(view, from, to, text, rules, plugin);\n            },\n            handleDOMEvents: {\n                compositionend: (view) => {\n                    setTimeout(() => {\n                        const { $cursor } = view.state.selection as TextSelection;\n                        if ($cursor) run(view, $cursor.pos, $cursor.pos, '', rules, plugin);\n                    });\n                    return false;\n                },\n            },\n            handleKeyDown(view, event) {\n                if (event.key !== 'Enter') return false;\n                const { $cursor } = view.state.selection as TextSelection;\n                if ($cursor) return run(view, $cursor.pos, $cursor.pos, '\\n', rules, plugin);\n                return false;\n            },\n        },\n    } as PluginSpec);\n    return plugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { InputRule } from 'prosemirror-inputrules';\nimport { Mark, MarkType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\n\nexport function markRule(regexp: RegExp, markType: MarkType): InputRule {\n    return new InputRule(regexp, (state, match, start, end) => {\n        const { tr } = state;\n        const matchLength = match.length;\n\n        let markStart = start;\n        let markEnd = end;\n\n        if (match[matchLength - 1]) {\n            const first = match[0] as string;\n            const last = match[matchLength - 1] as string;\n            const last1 = match[matchLength - 2] as string;\n\n            const matchStart = start + first.indexOf(last1);\n            const matchEnd = matchStart + last1.length - 1;\n            const textStart = matchStart + last1.lastIndexOf(last);\n            const textEnd = textStart + last.length;\n\n            const excludedMarks = getMarksBetween(start, end, state)\n                .filter((item) => item.mark.type.excludes(markType))\n                .filter((item) => item.end > matchStart);\n\n            if (excludedMarks.length) {\n                return null;\n            }\n\n            if (textEnd < matchEnd) {\n                tr.delete(textEnd, matchEnd);\n            }\n            if (textStart > matchStart) {\n                tr.delete(matchStart, textStart);\n            }\n            markStart = matchStart;\n            markEnd = markStart + last.length;\n        }\n        tr.addMark(markStart, markEnd, markType.create());\n        tr.removeStoredMark(markType);\n        return tr;\n    });\n}\n\nfunction getMarksBetween(start: number, end: number, state: EditorState) {\n    let marks: { start: number; end: number; mark: Mark }[] = [];\n\n    state.doc.nodesBetween(start, end, (node, pos) => {\n        marks = [\n            ...marks,\n            ...node.marks.map((mark) => ({\n                start: pos,\n                end: pos + node.nodeSize,\n                mark,\n            })),\n        ];\n    });\n\n    return marks;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { EditorView } from 'prosemirror-view';\n\ntype Point = [top: number, left: number];\n\nexport const calculateNodePosition = (\n    view: EditorView,\n    target: HTMLElement,\n    handler: (selectedRect: DOMRect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n    const state = view.state;\n    const { from } = state.selection;\n\n    const { node } = view.domAtPos(from);\n    const element = node instanceof Text ? node.parentElement : node;\n    if (!(element instanceof HTMLElement)) {\n        throw new Error();\n    }\n\n    const selectedNodeRect = element.getBoundingClientRect();\n    const targetNodeRect = target.getBoundingClientRect();\n    const parentNodeRect = target.parentElement?.getBoundingClientRect();\n    if (!parentNodeRect) {\n        throw new Error();\n    }\n\n    const [top, left] = handler(selectedNodeRect, targetNodeRect, parentNodeRect);\n\n    target.style.top = top + 'px';\n    target.style.left = left + 'px';\n};\n\ntype Rect = {\n    left: number;\n    right: number;\n    top: number;\n    bottom: number;\n};\n\nexport const calculateTextPosition = (\n    view: EditorView,\n    target: HTMLElement,\n    handler: (start: Rect, end: Rect, targetRect: DOMRect, parentRect: DOMRect) => Point,\n) => {\n    const state = view.state;\n    const { from, to } = state.selection;\n    const start = view.coordsAtPos(from);\n    const end = view.coordsAtPos(to);\n\n    const targetNodeRect = target.getBoundingClientRect();\n    const parent = target.parentElement;\n    if (!parent) {\n        throw new Error();\n    }\n    const parentNodeRect = parent.getBoundingClientRect();\n\n    const [top, left] = handler(start, end, targetNodeRect, parentNodeRect);\n\n    target.style.top = top + 'px';\n    target.style.left = left + 'px';\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { MarkType, Node as ProseNode } from 'prosemirror-model';\n\nimport type { Predicate } from './types';\n\nexport type NodeWithPos = { pos: number; node: ProseNode };\n\nexport const flatten = (node: ProseNode, descend = true): NodeWithPos[] => {\n    const result: NodeWithPos[] = [];\n    node.descendants((child, pos) => {\n        result.push({ node: child, pos });\n        if (!descend) {\n            return false;\n        }\n        return undefined;\n    });\n    return result;\n};\n\nexport const findChildren =\n    (predicate: Predicate) =>\n    (node: ProseNode, descend?: boolean): NodeWithPos[] =>\n        flatten(node, descend).filter((child) => predicate(child.node));\n\nexport const findChildrenByMark = (node: ProseNode, markType: MarkType, descend?: boolean): NodeWithPos[] =>\n    findChildren((child) => Boolean(markType.isInSet(child.marks)))(node, descend);\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node as ProseNode, NodeType, ResolvedPos } from 'prosemirror-model';\nimport { NodeSelection, Selection } from 'prosemirror-state';\n\nimport { equalNodeType } from './helper';\nimport type { Predicate } from './types';\n\nexport type ContentNodeWithPos = { pos: number; start: number; depth: number; node: ProseNode };\n\nexport const findParentNodeClosestToPos =\n    (predicate: Predicate) =>\n    ($pos: ResolvedPos): ContentNodeWithPos | undefined => {\n        for (let i = $pos.depth; i > 0; i--) {\n            const node = $pos.node(i);\n            if (predicate(node)) {\n                return {\n                    pos: i > 0 ? $pos.before(i) : 0,\n                    start: $pos.start(i),\n                    depth: i,\n                    node,\n                };\n            }\n        }\n        return;\n    };\n\nexport const findParentNode =\n    (predicate: Predicate) =>\n    (selection: Selection): ContentNodeWithPos | undefined => {\n        return findParentNodeClosestToPos(predicate)(selection.$from);\n    };\n\nexport const findSelectedNodeOfType = (selection: Selection, nodeType: NodeType): ContentNodeWithPos | undefined => {\n    if (!(selection instanceof NodeSelection)) {\n        return;\n    }\n    const { node, $from } = selection;\n    if (equalNodeType(nodeType, node)) {\n        return { node, pos: $from.pos, start: $from.start($from.depth), depth: $from.depth };\n    }\n    return undefined;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Node as ProseNode, NodeType } from 'prosemirror-model';\nimport type { Transaction } from 'prosemirror-state';\n\nexport const cloneTr = (tr: Transaction) => {\n    return Object.assign(Object.create(tr), tr).setTime(Date.now());\n};\n\nexport const equalNodeType = (nodeType: NodeType | NodeType[], node: ProseNode) => {\n    return (Array.isArray(nodeType) && nodeType.indexOf(node.type) > -1) || node.type === nodeType;\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Ctx } from '@milkdown/core';\nimport { ViewFactory } from '@milkdown/prose';\nimport React from 'react';\n\nexport const portalContext = React.createContext<(Component: React.FC) => (ctx: Ctx) => ViewFactory>(() => () => {\n    throw new Error();\n});\n\nconst getId = (portals: React.ReactPortal[]) => portals.map((x) => x.key).join(',');\nexport const Portals: React.FC<{ portals: React.ReactPortal[] }> = React.memo(\n    ({ portals }) => {\n        return <>{...portals}</>;\n    },\n    (prev, next) => {\n        return getId(prev.portals) === getId(next.portals);\n    },\n);\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx } from '@milkdown/core';\nimport { Decoration, EditorView, Mark, Node } from '@milkdown/prose';\nimport React, { ReactNode } from 'react';\n\ntype NodeContext = {\n    ctx: Ctx;\n    node: Node | Mark;\n    view: EditorView;\n    getPos: boolean | (() => number);\n    decorations: Decoration[];\n};\n\nconst nodeContext = React.createContext<NodeContext>({\n    ctx: undefined,\n    node: undefined,\n    view: undefined,\n    getPos: undefined,\n    decorations: undefined,\n} as unknown as NodeContext);\n\nexport const ReactNodeContainer: React.FC<NodeContext & { children: ReactNode }> = ({\n    ctx,\n    node,\n    view,\n    getPos,\n    decorations,\n    children,\n}) => {\n    return <nodeContext.Provider value={{ ctx, node, view, getPos, decorations }}>{children}</nodeContext.Provider>;\n};\n\nexport const useNodeCtx = () => React.useContext(nodeContext);\n\nexport const Content: React.FC<{ isInline?: boolean; dom?: HTMLElement | null }> = ({ dom, isInline }) => {\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        const { current } = containerRef;\n        if (!current || !dom) return;\n\n        current.appendChild(dom);\n    }, [dom]);\n\n    if (isInline) {\n        return <span className=\"content-dom-wrapper\" ref={containerRef} />;\n    }\n\n    return <div className=\"content-dom-wrapper\" ref={containerRef} />;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx } from '@milkdown/core';\nimport type { Decoration, EditorView, NodeView, ViewFactory } from '@milkdown/prose';\nimport { Mark, Node } from '@milkdown/prose';\nimport { customAlphabet } from 'nanoid';\nimport React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Content, ReactNodeContainer } from './ReactNode';\n\nconst nanoid = customAlphabet('abcedfghicklmn', 10);\n\nexport type RenderOptions = Partial<\n    {\n        as: string;\n    } & Pick<NodeView, 'ignoreMutation' | 'deselectNode' | 'selectNode' | 'destroy' | 'update'>\n>;\n\nexport const createReactView =\n    (addPortal: (portal: React.ReactPortal) => void, removePortalByKey: (key: string) => void) =>\n    (component: React.FC, options: RenderOptions = {}): ((ctx: Ctx) => ViewFactory) =>\n    (ctx) =>\n    (node, view, getPos, decorations) =>\n        new ReactNodeView(ctx, component, addPortal, removePortalByKey, options, node, view, getPos, decorations);\n\nexport class ReactNodeView implements NodeView {\n    dom: HTMLElement | undefined;\n    contentDOM: HTMLElement | null | undefined;\n    key: string;\n\n    get isInlineOrMark() {\n        return this.node instanceof Mark || this.node.isInline;\n    }\n\n    constructor(\n        private ctx: Ctx,\n        private component: React.FC<{ children: React.ReactNode }>,\n        private addPortal: (portal: React.ReactPortal) => void,\n        private removePortalByKey: (key: string) => void,\n        private options: RenderOptions,\n        private node: Node | Mark,\n        private view: EditorView,\n        private getPos: boolean | (() => number),\n        private decorations: Decoration[],\n    ) {\n        const elementName = options.as ? options.as : this.isInlineOrMark ? 'span' : 'div';\n        const dom = document.createElement(elementName);\n        dom.classList.add('dom-wrapper');\n\n        const contentDOM =\n            node instanceof Node && node.isLeaf\n                ? undefined\n                : document.createElement(this.isInlineOrMark ? 'span' : 'div');\n        if (contentDOM) {\n            contentDOM.classList.add('content-dom');\n            dom.appendChild(contentDOM);\n        }\n        this.dom = dom;\n        this.contentDOM = contentDOM;\n        this.key = nanoid();\n\n        this.renderPortal();\n    }\n\n    renderPortal() {\n        if (!this.dom) return;\n\n        const Component = this.component;\n        const portal = createPortal(\n            <ReactNodeContainer\n                ctx={this.ctx}\n                node={this.node}\n                view={this.view}\n                getPos={this.getPos}\n                decorations={this.decorations}\n            >\n                <Component>\n                    <Content isInline={this.isInlineOrMark} dom={this.contentDOM} />\n                </Component>\n            </ReactNodeContainer>,\n            this.dom,\n            this.key,\n        );\n        this.addPortal(portal);\n    }\n\n    destroy() {\n        this.options.destroy?.();\n        this.dom = undefined;\n        this.contentDOM = undefined;\n        this.removePortalByKey(this.key);\n    }\n\n    ignoreMutation(mutation: MutationRecord | { type: 'selection'; target: Element }) {\n        if (this.options.ignoreMutation) {\n            return this.options.ignoreMutation(mutation);\n        }\n        if (!this.contentDOM) {\n            return true;\n        }\n        return !this.contentDOM.contains(mutation.target);\n    }\n\n    update = this.options?.update;\n\n    selectNode = this.options?.selectNode;\n\n    deselectNode = this.options?.deselectNode;\n}\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Ctx, Editor, editorViewCtx, rootCtx } from '@milkdown/core';\nimport { ViewFactory } from '@milkdown/prose';\nimport React, { DependencyList, forwardRef, useImperativeHandle } from 'react';\n\nimport { portalContext, Portals } from './Portals';\nimport { createReactView, RenderOptions } from './ReactNodeView';\n\ntype GetEditor = (\n    container: HTMLDivElement,\n    renderReact: (Component: React.FC, renderOptions?: RenderOptions) => (ctx: Ctx) => ViewFactory,\n) => Editor | undefined;\n\nconst useGetEditor = (getEditor: GetEditor) => {\n    const renderReact = React.useContext(portalContext);\n    const divRef = React.useRef<HTMLDivElement>(null);\n    const editorRef = React.useRef<Editor>();\n\n    React.useEffect(() => {\n        const div = divRef.current;\n        if (!div) return;\n\n        const editor = getEditor(div, renderReact);\n\n        if (!editor) return;\n\n        editor\n            .create()\n            .then((editor) => {\n                editorRef.current = editor;\n                return;\n            })\n            .catch(console.error);\n\n        return () => {\n            const view = editorRef.current?.action((ctx) => ctx.get(editorViewCtx));\n            const root = editorRef.current?.action((ctx) => ctx.get(rootCtx)) as HTMLElement;\n\n            root?.firstChild?.remove();\n            view?.destroy();\n        };\n    }, [getEditor, renderReact]);\n\n    return { divRef, editorRef };\n};\n\ntype EditorProps = {\n    editor: GetEditor;\n};\nexport type EditorRef = {\n    get: () => Editor | undefined;\n    dom: () => HTMLDivElement | null;\n};\nexport const EditorComponent = forwardRef<EditorRef, EditorProps>(({ editor }, ref) => {\n    const refs = useGetEditor(editor);\n    useImperativeHandle(ref, () => ({\n        get: () => {\n            return refs.editorRef.current;\n        },\n        dom: () => {\n            return refs.divRef.current;\n        },\n    }));\n    return <div ref={refs.divRef} />;\n});\n\nexport const ReactEditor = forwardRef<EditorRef, EditorProps>(({ editor }, ref) => {\n    const [portals, setPortals] = React.useState<React.ReactPortal[]>([]);\n    const addPortal = React.useCallback((portal: React.ReactPortal) => {\n        setPortals((ps) => [...ps, portal]);\n    }, []);\n    const removePortalByKey = React.useCallback((key: string) => {\n        setPortals((x) => {\n            const index = x.findIndex((p) => p.key === key);\n\n            return [...x.slice(0, index), ...x.slice(index + 1)];\n        });\n    }, []);\n    const renderReact = React.useCallback(\n        (Component: React.FC, options?: RenderOptions) =>\n            createReactView(addPortal, removePortalByKey)(Component, options),\n        [addPortal, removePortalByKey],\n    );\n\n    return (\n        <portalContext.Provider value={renderReact}>\n            <Portals portals={portals} />\n            <EditorComponent ref={ref} editor={editor} />\n        </portalContext.Provider>\n    );\n});\n\nexport const useEditor = (getEditor: GetEditor, deps: DependencyList = []) => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React.useCallback<GetEditor>((...args) => getEditor(...args), deps);\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Emotion, ThemeCodeFenceType, ThemeManager } from '@milkdown/core';\nimport { getPalette, ThemeBorder, ThemeFont, ThemeIcon, ThemeScrollbar, ThemeShadow, ThemeSize } from '@milkdown/core';\nimport type { Node } from '@milkdown/prose';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const lineWidth = manager.get(ThemeSize, 'lineWidth');\n\n    return css`\n        background-color: ${palette('background')};\n        color: ${palette('neutral')};\n        font-size: 0.875em;\n        padding: 1.2em 0.4em 1.4em;\n        border-radius: ${radius};\n        font-family: ${manager.get(ThemeFont, 'typography')};\n\n        .code-fence_selector-wrapper {\n            position: relative;\n        }\n\n        .code-fence_selector {\n            width: 11.71em;\n            box-sizing: border-box;\n            border-radius: ${radius};\n            margin: 0 1.2em 1.2em;\n            cursor: pointer;\n            background-color: ${palette('surface')};\n            position: relative;\n            display: flex;\n            color: ${palette('neutral', 0.87)};\n            letter-spacing: 0.5px;\n            height: 3em;\n            align-items: center;\n\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n\n            & > .icon {\n                width: 2em;\n                height: 100%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                color: ${palette('solid', 0.87)};\n                border-left: ${lineWidth} solid ${palette('line')};\n\n                text-align: center;\n                transition: all 0.2s ease-in-out;\n                &:hover {\n                    background: ${palette('background')};\n                    color: ${palette('primary')};\n                }\n            }\n\n            > span:first-child {\n                padding-left: 1em;\n                flex: 1;\n                font-weight: 500;\n            }\n        }\n\n        .code-fence_selector-list-item {\n            list-style: none;\n            line-height: 2;\n            padding-left: 1em;\n            cursor: pointer;\n            margin: 0 !important;\n            :hover {\n                background: ${palette('secondary', 0.12)};\n                color: ${palette('primary')};\n            }\n        }\n\n        .code-fence_selector-list {\n            &[data-fold='true'] {\n                display: none;\n            }\n\n            margin: 0 !important;\n            font-weight: 500;\n            position: absolute;\n            z-index: 1;\n            top: 3em;\n            box-sizing: border-box;\n            left: 1.2em;\n            padding: 0.5em 0;\n            max-height: 16.75em;\n            width: 11.71em;\n            background-color: ${palette('surface')};\n            border-top: none;\n            overflow-y: auto;\n            display: flex;\n            flex-direction: column;\n\n            ${manager.get(ThemeScrollbar, ['y'])}\n            ${manager.get(ThemeBorder, undefined)};\n            ${manager.get(ThemeShadow, undefined)};\n        }\n    `;\n};\n\nexport const codeFence = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeCodeFenceType>('code-fence', ({ editable, onSelectLanguage, onBlur, onFocus, languageList }) => {\n        const container = document.createElement('div');\n        const selectWrapper = document.createElement('div');\n        const select = document.createElement('ul');\n        const pre = document.createElement('pre');\n        const code = document.createElement('code');\n\n        const valueWrapper = document.createElement('div');\n        valueWrapper.className = 'code-fence_selector';\n\n        const value = document.createElement('span');\n        valueWrapper.appendChild(value);\n\n        const downIcon = manager.get(ThemeIcon, 'downArrow');\n        if (editable() && downIcon) {\n            valueWrapper.appendChild(downIcon.dom);\n        }\n        code.spellcheck = false;\n        selectWrapper.className = 'code-fence_selector-wrapper';\n        selectWrapper.contentEditable = 'false';\n        selectWrapper.append(valueWrapper);\n        selectWrapper.append(select);\n        pre.append(code);\n        const codeContent = document.createElement('div');\n        code.append(codeContent);\n        codeContent.style.whiteSpace = 'inherit';\n        container.append(selectWrapper, pre);\n\n        container.classList.add('code-fence');\n\n        manager.onFlush(() => {\n            const style = getStyle(manager, emotion);\n            if (style) {\n                container.classList.add(style);\n            }\n        });\n\n        select.className = 'code-fence_selector-list';\n        select.addEventListener('mousedown', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!editable()) return;\n\n            const el = e.target;\n            if (!(el instanceof HTMLLIElement)) return;\n            const value = el.dataset['value'];\n            if (value != null) {\n                onSelectLanguage(value);\n            }\n        });\n        valueWrapper.addEventListener('mousedown', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n\n            if (!editable()) return;\n            onFocus();\n        });\n\n        const onClickOutside = () => {\n            if (!editable() || select.dataset['fold'] === 'true') return;\n\n            onBlur();\n        };\n        document.addEventListener('mousedown', onClickOutside);\n\n        languageList.forEach((lang) => {\n            const option = document.createElement('li');\n            option.className = 'code-fence_selector-list-item';\n            option.innerText = lang || '--';\n            select.appendChild(option);\n            option.setAttribute('data-value', lang);\n        });\n\n        const onUpdate = (node: Node) => {\n            container.dataset['language'] = node.attrs['language'];\n            value.innerText = node.attrs['language'] || '--';\n            select.setAttribute('data-fold', node.attrs['fold'] ? 'true' : 'false');\n        };\n\n        const onDestroy = () => {\n            container.remove();\n            document.removeEventListener('mousedown', onClickOutside);\n        };\n\n        return {\n            dom: container,\n            contentDOM: codeContent,\n            onUpdate,\n            onDestroy,\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, getPalette, Icon, ThemeIcon, ThemeImageType, ThemeManager, ThemeSize } from '@milkdown/core';\nimport type { Node } from '@milkdown/prose';\n\nexport const image = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n\n    manager.set<ThemeImageType>('image', ({ placeholder, isBlock, onError, onLoad }) => {\n        const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement;\n        const container = document.createElement('span');\n        container.classList.add('image-container');\n\n        manager.onFlush(() => {\n            const style = css`\n                display: inline-block;\n                position: relative;\n                text-align: center;\n                font-size: 0;\n                vertical-align: text-bottom;\n                line-height: 1;\n\n                ${isBlock\n                    ? `\n                width: 100%;\n                margin: 0 auto;\n                `\n                    : ''}\n\n                &.ProseMirror-selectednode::after {\n                    content: '';\n                    background: ${palette('secondary', 0.38)};\n                    position: absolute;\n                    top: 0;\n                    left: 0;\n                    right: 0;\n                    bottom: 0;\n                }\n\n                img {\n                    max-width: 100%;\n                    height: auto;\n                    object-fit: contain;\n                    margin: 0 2px;\n                }\n                .icon,\n                .placeholder {\n                    display: none;\n                }\n\n                &.system {\n                    width: 100%;\n                    padding: 0 2em;\n                    font-size: inherit;\n\n                    img {\n                        width: 0;\n                        height: 0;\n                        display: none;\n                    }\n\n                    .icon,\n                    .placeholder {\n                        display: inline;\n                    }\n\n                    box-sizing: border-box;\n                    height: 3em;\n                    background-color: ${palette('background')};\n                    border-radius: ${manager.get(ThemeSize, 'radius')};\n                    display: inline-flex;\n                    gap: 2em;\n                    justify-content: flex-start;\n                    align-items: center;\n                    .placeholder {\n                        margin: 0;\n                        line-height: 1;\n                        &::before {\n                            content: '';\n                            font-size: 0.875em;\n                            color: ${palette('neutral', 0.6)};\n                        }\n                    }\n                }\n\n                &.empty {\n                    .placeholder {\n                        &::before {\n                            content: '${placeholder}';\n                        }\n                    }\n                }\n            `;\n\n            if (style) {\n                container.classList.add(style);\n            }\n        });\n\n        const content = document.createElement('img');\n\n        container.append(content);\n        let icon = createIcon('image');\n        const $placeholder = document.createElement('span');\n        $placeholder.classList.add('placeholder');\n        container.append(icon, $placeholder);\n\n        const setIcon = (name: Icon) => {\n            const nextIcon = createIcon(name);\n            container.replaceChild(nextIcon, icon);\n            icon = nextIcon;\n        };\n\n        const loadImage = (src: string) => {\n            container.classList.add('system', 'loading');\n            setIcon('loading');\n            const img = document.createElement('img');\n            img.src = src;\n\n            img.onerror = () => {\n                onError?.(img);\n            };\n\n            img.onload = () => {\n                onLoad?.(img);\n            };\n        };\n\n        const onUpdate = (node: Node) => {\n            const { src, alt, title, loading, failed } = node.attrs;\n            content.src = src;\n            content.title = title || alt;\n            content.alt = alt;\n\n            if (src.length === 0) {\n                container.classList.add('system', 'empty');\n                setIcon('image');\n                return;\n            }\n\n            if (loading) {\n                loadImage(src);\n                return;\n            }\n\n            if (failed) {\n                container.classList.remove('loading', 'empty');\n                container.classList.add('system', 'failed');\n                setIcon('brokenImage');\n                return;\n            }\n\n            if (src.length > 0) {\n                container.classList.remove('system', 'empty', 'loading');\n                return;\n            }\n\n            container.classList.add('system', 'empty');\n            setIcon('image');\n        };\n\n        return {\n            dom: container,\n            onUpdate,\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, getPalette, ThemeFont, ThemeInnerEditorType, ThemeManager, ThemeSize } from '@milkdown/core';\nimport {\n    baseKeymap,\n    chainCommands,\n    deleteSelection,\n    EditorState,\n    EditorView,\n    history,\n    keymap,\n    Node,\n    redo,\n    StepMap,\n    TextSelection,\n    undo,\n} from '@milkdown/prose';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const code = manager.get(ThemeFont, 'code');\n\n    const codeStyle = css`\n        color: ${palette('neutral', 0.87)};\n        background-color: ${palette('background')};\n        border-radius: ${radius};\n        padding: 1em 2em;\n        font-size: 0.875em;\n        font-family: ${code};\n        overflow: hidden;\n        line-height: 1.5;\n        .ProseMirror {\n            outline: none;\n        }\n    `;\n\n    const hideCodeStyle = css`\n        display: none;\n    `;\n\n    const previewPanelStyle = css`\n        display: flex;\n        justify-content: center;\n        padding: 1em 0;\n    `;\n\n    return {\n        codeStyle,\n        hideCodeStyle,\n        previewPanelStyle,\n    };\n};\n\nconst createInnerEditor = (outerView: EditorView, getPos: () => number) => {\n    let isEditing = false;\n    let innerView: EditorView | undefined;\n\n    const openEditor = ($: HTMLElement, doc: Node) => {\n        innerView = new EditorView($, {\n            state: EditorState.create({\n                doc,\n                plugins: [\n                    history(),\n                    keymap({\n                        ...baseKeymap,\n                        Backspace: chainCommands(deleteSelection, (state) => {\n                            if (!state.selection.empty) {\n                                return false;\n                            }\n                            if (innerView && innerView.state.doc.textContent.length > 0) {\n                                return false;\n                            }\n                            const { dispatch, state: outerState } = outerView;\n                            const p = outerState.schema.nodes['paragraph'].create();\n                            const tr = outerState.tr.replaceSelectionWith(p);\n                            let start = tr.selection.from - 2;\n                            if (start < 0) {\n                                start = 0;\n                            }\n                            dispatch(tr.setSelection(TextSelection.create(tr.doc, start)));\n                            outerView.focus();\n                            return true;\n                        }),\n                        'Mod-Enter': (_, dispatch) => {\n                            if (dispatch) {\n                                const { state } = outerView;\n                                const { to } = state.selection;\n                                const tr = state.tr.replaceWith(to, to, state.schema.nodes.paragraph.createAndFill());\n                                outerView.dispatch(tr.setSelection(TextSelection.create(tr.doc, to)));\n                                outerView.focus();\n                            }\n\n                            return true;\n                        },\n                    }),\n                    keymap({\n                        'Mod-z': undo,\n                        'Mod-y': redo,\n                        'Shift-Mod-z': redo,\n                    }),\n                ],\n            }),\n            dispatchTransaction: (tr) => {\n                if (!innerView) return;\n                const { state, transactions } = innerView.state.applyTransaction(tr);\n                innerView.updateState(state);\n\n                if (!tr.getMeta('fromOutside')) {\n                    const outerTr = outerView.state.tr;\n                    const offsetMap = StepMap.offset(getPos() + 1);\n\n                    transactions.forEach((transaction) => {\n                        const { steps } = transaction;\n                        steps.forEach((step) => {\n                            const mapped = step.map(offsetMap);\n\n                            if (!mapped) {\n                                throw Error('step discarded!');\n                            }\n                            outerTr.step(mapped);\n                        });\n                    });\n                    if (outerTr.docChanged) outerView.dispatch(outerTr);\n                }\n            },\n        });\n        innerView.focus();\n        const { state } = innerView;\n        innerView.dispatch(state.tr.setSelection(TextSelection.create(state.doc, 0)));\n        isEditing = true;\n    };\n\n    const closeEditor = () => {\n        if (innerView) {\n            innerView.destroy();\n        }\n        innerView = undefined;\n        isEditing = false;\n    };\n\n    return {\n        isEditing: () => isEditing,\n        innerView: () => innerView,\n        openEditor,\n        closeEditor,\n    };\n};\n\nexport const innerEditor = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeInnerEditorType>('inner-editor', ({ view, getPos, render }) => {\n        const inner$ = createInnerEditor(view, getPos);\n        const dom = document.createElement('div');\n        dom.classList.add('math-block');\n        const editor = document.createElement('div');\n        const preview = document.createElement('div');\n\n        let codeStyle = '';\n        let hideCodeStyle = '';\n        let previewPanelStyle = '';\n\n        manager.onFlush(() => {\n            ({ codeStyle, hideCodeStyle, previewPanelStyle } = getStyle(manager, emotion));\n            if (codeStyle && hideCodeStyle) {\n                editor.classList.add(codeStyle, hideCodeStyle);\n            }\n\n            if (previewPanelStyle) {\n                preview.classList.add(previewPanelStyle);\n            }\n        });\n\n        dom.append(editor);\n\n        return {\n            dom,\n            preview,\n            editor,\n            onUpdate: (node, isInit) => {\n                if (isInit) {\n                    const value = node.attrs['value'] || node.textContent || '';\n                    editor.dataset['value'] = value;\n                    render(value);\n                    return;\n                }\n\n                const innerView = inner$.innerView();\n                if (innerView) {\n                    const state = innerView.state;\n                    const start = node.content.findDiffStart(state.doc.content);\n                    if (start != null) {\n                        const diff = node.content.findDiffEnd(state.doc.content);\n                        if (diff) {\n                            let { a: endA, b: endB } = diff;\n                            const overlap = start - Math.min(endA, endB);\n                            if (overlap > 0) {\n                                endA += overlap;\n                                endB += overlap;\n                            }\n                            innerView.dispatch(\n                                state.tr.replace(start, endB, node.slice(start, endA)).setMeta('fromOutside', true),\n                            );\n                        }\n                    }\n                }\n\n                const newVal = node.content.firstChild?.text || '';\n                editor.dataset['value'] = newVal;\n\n                render(newVal);\n            },\n            onFocus: (node) => {\n                if (!view.editable) return;\n                if (hideCodeStyle) {\n                    editor.classList.remove(hideCodeStyle);\n                }\n                inner$.openEditor(editor, node);\n                dom.classList.add('ProseMirror-selectednode');\n            },\n            onBlur: () => {\n                if (hideCodeStyle) {\n                    editor.classList.add(hideCodeStyle);\n                }\n                inner$.closeEditor();\n                dom.classList.remove('ProseMirror-selectednode');\n            },\n            onDestroy: () => {\n                preview.remove();\n                editor.remove();\n                dom.remove();\n            },\n            stopEvent: (event) => {\n                const innerView = inner$.innerView();\n                const { target } = event;\n                const isChild = target && innerView?.dom.contains(target as Element);\n                return !!(innerView && isChild);\n            },\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Emotion,\n    getPalette,\n    ThemeBorder,\n    ThemeInputChipType,\n    ThemeManager,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\nimport { calculateTextPosition, EditorView } from '@milkdown/prose';\n\nconst getStyle = (manager: ThemeManager, { css }: Emotion, options: { width: string }) => {\n    const palette = getPalette(manager);\n    return css`\n        ${manager.get(ThemeBorder, undefined)}\n        ${manager.get(ThemeShadow, undefined)}\n\n        display: inline-flex;\n        justify-content: space-between;\n        align-items: center;\n        position: absolute;\n        background: ${palette('surface')};\n        border-radius: ${manager.get(ThemeSize, 'radius')};\n        font-size: 1em;\n\n        height: 3.5em;\n        box-sizing: border-box;\n        width: ${options.width};\n        padding: 0 1em;\n        gap: 1em;\n        z-index: 2;\n\n        input,\n        button {\n            all: unset;\n        }\n\n        input {\n            flex-grow: 1;\n            caret-color: ${palette('primary')};\n            &::placeholder {\n                color: ${palette('neutral', 0.6)};\n            }\n        }\n\n        button {\n            cursor: pointer;\n            height: 2.25em;\n            color: ${palette('primary')};\n            font-size: 0.875em;\n            padding: 0 0.5em;\n            font-weight: 500;\n            letter-spacing: 1.25px;\n            &:hover {\n                background-color: ${palette('secondary', 0.12)};\n            }\n            &.disable {\n                color: ${palette('neutral', 0.38)};\n                cursor: not-allowed;\n                &:hover {\n                    background: transparent;\n                }\n            }\n            &.hide {\n                display: none;\n            }\n        }\n\n        &.hide {\n            display: none;\n        }\n    `;\n};\n\nconst calcInputPos = (view: EditorView, input: HTMLDivElement) => {\n    calculateTextPosition(view, input, (start, end, target, parent) => {\n        const $editor = view.dom.parentElement;\n        if (!$editor) {\n            throw new Error();\n        }\n\n        const selectionWidth = end.left - start.left;\n        let left = start.left - parent.left - (target.width - selectionWidth) / 2;\n        const top = start.bottom - parent.top + 14 + $editor.scrollTop;\n\n        if (left < 0) left = 0;\n\n        return [top, left];\n    });\n};\n\nexport const inputChip = (manager: ThemeManager, emotion: Emotion) => {\n    manager.set<ThemeInputChipType>(\n        'input-chip',\n        ({ isBindMode, onUpdate, buttonText, placeholder, width = '25em', calculatePosition = calcInputPos }) => {\n            let button: HTMLButtonElement | null = null;\n            let disabled = false;\n            let value = '';\n            const wrapper = document.createElement('div');\n\n            manager.onFlush(() => {\n                const style = getStyle(manager, emotion, { width });\n\n                if (style) {\n                    wrapper.classList.add(style);\n                }\n            });\n\n            wrapper.classList.add('tooltip-input');\n\n            const input = document.createElement('input');\n            if (placeholder) {\n                input.placeholder = placeholder;\n            }\n            wrapper.appendChild(input);\n\n            if (!isBindMode) {\n                button = document.createElement('button');\n                button.innerText = buttonText || 'APPLY';\n                wrapper.appendChild(button);\n            }\n            const hide = () => {\n                wrapper.classList.add('hide');\n            };\n            const show = (editorView: EditorView) => {\n                wrapper.classList.remove('hide');\n                calculatePosition(editorView, wrapper);\n            };\n\n            const onInput = (e: Event) => {\n                const { target } = e;\n                if (!(target instanceof HTMLInputElement)) {\n                    return;\n                }\n\n                value = target.value;\n\n                if (!button) {\n                    onUpdate(value);\n                    return;\n                }\n\n                if (!value) {\n                    button.classList.add('disable');\n                    disabled = true;\n                    return;\n                }\n\n                button.classList.remove('disable');\n                disabled = false;\n            };\n\n            const onClick = (e: MouseEvent) => {\n                if (disabled) return;\n                e.stopPropagation();\n                onUpdate(value);\n                hide();\n            };\n\n            const onKeydown = (e: KeyboardEvent) => {\n                if ('key' in e && e.key === 'Enter') {\n                    onUpdate(value);\n                    hide();\n                }\n            };\n\n            const destroy = () => {\n                input.removeEventListener('input', onInput);\n                input.removeEventListener('keydown', onKeydown);\n                button?.removeEventListener('mousedown', onClick);\n                wrapper.remove();\n            };\n\n            const init = (editorView: EditorView) => {\n                const $editor = editorView.dom.parentElement;\n                if (!$editor) throw new Error();\n\n                input.addEventListener('input', onInput);\n                input.addEventListener('keydown', onKeydown);\n                button?.addEventListener('mousedown', onClick);\n\n                $editor.appendChild(wrapper);\n                hide();\n            };\n\n            const update = (v: string) => {\n                value = v;\n                input.value = v;\n            };\n\n            return {\n                dom: wrapper,\n                init,\n                show,\n                hide,\n                destroy,\n                update,\n            };\n        },\n    );\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Emotion, getPalette, Icon, ThemeIcon, ThemeManager, ThemeSize, ThemeTaskListItemType } from '@milkdown/core';\n\nexport const taskListItem = (manager: ThemeManager, { css }: Emotion) => {\n    const palette = getPalette(manager);\n\n    manager.set<ThemeTaskListItemType>('task-list-item', ({ onChange, editable }) => {\n        const createIcon = (icon: Icon) => manager.get(ThemeIcon, icon)?.dom as HTMLElement;\n\n        const listItem = document.createElement('li');\n        const checkboxWrapper = document.createElement('label');\n        const checkboxStyler = document.createElement('span');\n        const checkbox = document.createElement('input');\n        const content = document.createElement('div');\n\n        let icon = createIcon('unchecked');\n        checkboxWrapper.appendChild(icon);\n        const setIcon = (name: Icon) => {\n            const nextIcon = createIcon(name);\n            checkboxWrapper.replaceChild(nextIcon, icon);\n            icon = nextIcon;\n        };\n\n        checkboxWrapper.append(checkbox, checkboxStyler);\n        listItem.append(checkboxWrapper, content);\n\n        checkboxWrapper.contentEditable = 'false';\n        checkbox.type = 'checkbox';\n        if (!editable()) {\n            checkbox.disabled = true;\n            checkboxWrapper.style.cursor = 'not-allowed';\n        }\n        checkbox.onchange = (event) => {\n            const target = event.target;\n            if (!(target instanceof HTMLInputElement)) return;\n\n            if (!editable()) {\n                checkbox.checked = !checkbox.checked;\n\n                return;\n            }\n\n            event.preventDefault();\n\n            onChange(checkbox.checked);\n        };\n        listItem.dataset['type'] = 'task-item';\n        listItem.classList.add('task-list-item');\n\n        manager.onFlush(() => {\n            const style = css`\n                list-style-type: none;\n                position: relative;\n\n                & > div {\n                    overflow: hidden;\n                    padding: 0 2px;\n                    width: 100%;\n                }\n\n                label {\n                    position: absolute;\n                    top: 0;\n                    left: -2em;\n                    display: inline-block;\n                    width: 1.5em;\n                    height: 1.5em;\n                    margin: 0.5em 0;\n                    cursor: pointer;\n                    input {\n                        visibility: hidden;\n                    }\n                }\n                label:before {\n                    position: absolute;\n                    top: 0;\n                    right: 0;\n                    bottom: 0;\n                    left: 0;\n                    border-radius: ${manager.get(ThemeSize, 'radius')};\n                }\n                label:hover:before {\n                    background: ${palette('background')};\n                }\n                &[data-checked='true'] {\n                    label {\n                        color: ${palette('primary')};\n                    }\n                }\n                &[data-checked='false'] {\n                    label {\n                        color: ${palette('solid', 0.87)};\n                    }\n                }\n                .paragraph {\n                    margin: 0.5em 0;\n                }\n            `;\n\n            if (style) {\n                listItem.classList.add(style);\n            }\n        });\n\n        return {\n            dom: listItem,\n            contentDOM: content,\n            onUpdate: (node) => {\n                listItem.dataset['checked'] = node.attrs['checked'];\n                if (node.attrs['checked']) {\n                    checkbox.setAttribute('checked', 'checked');\n                } else {\n                    checkbox.removeAttribute('checked');\n                }\n                setIcon(node.attrs['checked'] ? 'checked' : 'unchecked');\n            },\n        };\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Icon, IconValue } from '@milkdown/design-system';\n\ntype IconMeta = {\n    icon: string;\n    label: string;\n};\n\nconst iconMapping: Record<Icon, IconMeta> = {\n    h1: {\n        label: 'h1',\n        icon: 'looks_one',\n    },\n    h2: {\n        label: 'h2',\n        icon: 'looks_two',\n    },\n    h3: {\n        label: 'h3',\n        icon: 'looks_3',\n    },\n    loading: {\n        label: 'loading',\n        icon: 'hourglass_empty',\n    },\n    quote: {\n        label: 'quote',\n        icon: 'format_quote',\n    },\n    code: {\n        label: 'code',\n        icon: 'code',\n    },\n    table: {\n        label: 'table',\n        icon: 'table_chart',\n    },\n    divider: {\n        label: 'divider',\n        icon: 'horizontal_rule',\n    },\n    image: {\n        label: 'image',\n        icon: 'image',\n    },\n    brokenImage: {\n        label: 'broken image',\n        icon: 'broken_image',\n    },\n    bulletList: {\n        label: 'bullet list',\n        icon: 'format_list_bulleted',\n    },\n    orderedList: {\n        label: 'ordered list',\n        icon: 'format_list_numbered',\n    },\n    taskList: {\n        label: 'task list',\n        icon: 'checklist',\n    },\n    bold: {\n        label: 'bold',\n        icon: 'format_bold',\n    },\n    italic: {\n        label: 'italic',\n        icon: 'format_italic',\n    },\n    inlineCode: {\n        label: 'inline code',\n        icon: 'code',\n    },\n    strikeThrough: {\n        label: 'strike through',\n        icon: 'strikethrough_s',\n    },\n    link: {\n        label: 'link',\n        icon: 'link',\n    },\n    leftArrow: {\n        label: 'left arrow',\n        icon: 'chevron_left',\n    },\n    rightArrow: {\n        label: 'right arrow',\n        icon: 'chevron_right',\n    },\n    upArrow: {\n        label: 'up arrow',\n        icon: 'expand_less',\n    },\n    downArrow: {\n        label: 'down arrow',\n        icon: 'expand_more',\n    },\n    alignLeft: {\n        label: 'align left',\n        icon: 'format_align_left',\n    },\n    alignRight: {\n        label: 'align right',\n        icon: 'format_align_right',\n    },\n    alignCenter: {\n        label: 'align center',\n        icon: 'format_align_center',\n    },\n    delete: {\n        label: 'delete',\n        icon: 'delete',\n    },\n    select: {\n        label: 'select',\n        icon: 'select_all',\n    },\n    unchecked: {\n        label: 'unchecked',\n        icon: 'check_box_outline_blank',\n    },\n    checked: {\n        label: 'checked',\n        icon: 'check_box',\n    },\n    undo: {\n        label: 'undo',\n        icon: 'turn_left',\n    },\n    redo: {\n        label: 'redo',\n        icon: 'turn_right',\n    },\n    liftList: {\n        label: 'lift list',\n        icon: 'format_indent_decrease',\n    },\n    sinkList: {\n        label: 'sink list',\n        icon: 'format_indent_increase',\n    },\n};\n\nexport const getIcon = (id: Icon): IconValue | undefined => {\n    const target = iconMapping[id];\n    if (!target) {\n        return;\n    }\n    const span = document.createElement('span');\n    span.className = 'icon material-icons material-icons-outlined';\n    span.textContent = iconMapping[id].icon;\n\n    return {\n        dom: span,\n        label: target.label,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Color } from '@milkdown/design-system';\n\n/* Copyright 2021, Milkdown by Mirone. */\nexport const Nord = {\n    nord0: '#2e3440',\n    nord1: '#3b4252',\n    nord2: '#434c5e',\n    nord3: '#4c566a',\n    nord4: '#d8dee9',\n    nord5: '#e5e9f0',\n    nord6: '#eceff4',\n    nord7: '#8fbcbb',\n    nord8: '#88c0d0',\n    nord9: '#81a1c1',\n    nord10: '#5e81ac',\n    nord11: '#bf616a',\n    nord12: '#d08770',\n    nord13: '#ebcb8b',\n    nord14: '#a3be8c',\n    nord15: '#b48ead',\n};\n\nexport const lightColor: Record<Color, string> = {\n    shadow: Nord.nord1,\n    primary: Nord.nord10,\n    secondary: Nord.nord9,\n    neutral: Nord.nord0,\n    solid: Nord.nord3,\n    line: Nord.nord4,\n    background: Nord.nord6,\n    surface: '#fff',\n};\n\nexport const darkColor: Record<Color, string> = {\n    shadow: Nord.nord1,\n    primary: Nord.nord10,\n    secondary: Nord.nord9,\n    neutral: Nord.nord6,\n    solid: Nord.nord4,\n    line: Nord.nord2,\n    background: '#252932',\n    surface: Nord.nord0,\n};\n\nexport const color = {\n    lightColor,\n    darkColor,\n} as const;\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Emotion, ThemeBorder, ThemeFont, ThemeManager, ThemeScrollbar, ThemeShadow, ThemeSize } from '@milkdown/core';\nimport { getPalette } from '@milkdown/design-system';\nimport { injectProsemirrorView } from '@milkdown/theme-pack-helper';\n\nexport const getStyle = (manager: ThemeManager, emotion: Emotion) => {\n    const { injectGlobal, css } = emotion;\n    const palette = getPalette(manager);\n    const radius = manager.get(ThemeSize, 'radius');\n    const neutral = palette('neutral', 0.87);\n    const surface = palette('surface');\n    const line = palette('line');\n    const highlight = palette('secondary', 0.38);\n\n    const selection = css`\n        .ProseMirror-selectednode {\n            outline: ${manager.get(ThemeSize, 'lineWidth')} solid ${line};\n        }\n\n        li.ProseMirror-selectednode {\n            outline: none;\n        }\n\n        li.ProseMirror-selectednode::after {\n            ${manager.get(ThemeBorder, undefined)};\n        }\n\n        & ::selection {\n            background: ${highlight};\n        }\n    `;\n\n    const editorLayout = css`\n        padding: 3.125em 1.25em;\n        outline: none;\n        & > * {\n            margin: 1.875em 0;\n        }\n    `;\n\n    const paragraph = css`\n        p {\n            font-size: 1em;\n            line-height: 1.5;\n            letter-spacing: 0.5px;\n        }\n    `;\n\n    const blockquote = css`\n        blockquote {\n            padding-left: 1.875em;\n            line-height: 1.75em;\n            border-left: 4px solid ${palette('primary')};\n            margin-left: 0;\n            margin-right: 0;\n            * {\n                font-size: 1em;\n                line-height: 1.5em;\n            }\n        }\n    `;\n\n    const heading = css`\n        h1 {\n            font-size: 3em;\n            line-height: 1.167;\n        }\n        h2 {\n            font-size: 2.5em;\n            line-height: 1.2;\n        }\n        h3 {\n            font-size: 2.125em;\n            line-height: 1.05;\n        }\n        h4 {\n            font-size: 1.75em;\n            line-height: 1.14;\n        }\n        h5 {\n            font-size: 1.5em;\n            line-height: 1;\n        }\n        h6 {\n            font-size: 1.25em;\n            line-height: 1;\n        }\n        .heading {\n            margin: 40px 0;\n            font-weight: 400;\n        }\n    `;\n\n    const hr = css`\n        hr {\n            height: ${manager.get(ThemeSize, 'lineWidth')};\n            background-color: ${line};\n            border-width: 0;\n        }\n    `;\n\n    const list = css`\n        .list-item,\n        .list-item > * {\n            margin: 0.5em 0;\n        }\n\n        li {\n            &::marker {\n                color: ${palette('primary')};\n            }\n        }\n\n        .task-list-item {\n            display: flex;\n            flex-direction: row;\n            align-items: flex-start;\n            &_checkbox {\n                margin: 0.5em 0.5em 0.5em 0;\n                height: 1em;\n            }\n        }\n    `;\n\n    const code = css`\n        .code-fence {\n            pre {\n                font-family: ${manager.get(ThemeFont, 'code')};\n                margin: 0 1.2em !important;\n                white-space: pre;\n                overflow: auto;\n                ${manager.get(ThemeScrollbar, ['x'])}\n\n                background-color: ${palette('background')};\n                color: ${palette('neutral')};\n                font-size: 0.875em;\n                border-radius: ${radius};\n\n                code {\n                    line-height: 1.5;\n                    font-family: ${manager.get(ThemeFont, 'code')};\n                }\n            }\n        }\n    `;\n\n    const img = css`\n        .image {\n            display: inline-block;\n            margin: 0 auto;\n            object-fit: contain;\n            width: 100%;\n            position: relative;\n            height: auto;\n            text-align: center;\n        }\n    `;\n\n    const inline = css`\n        .code-inline {\n            background-color: ${palette('neutral')};\n            color: ${palette('background')};\n            border-radius: ${radius};\n            font-weight: 500;\n            font-family: ${code};\n            padding: 0 0.2em;\n            font-size: 1.2em;\n        }\n\n        .strong {\n            font-weight: 600;\n        }\n\n        .link,\n        a {\n            color: ${palette('secondary')};\n            cursor: pointer;\n            transition: all 0.4s ease-in-out;\n            font-weight: 500;\n            &:hover {\n                background-color: ${palette('line')};\n                box-shadow: 0 0.2em ${palette('line')}, 0 -0.2em ${palette('line')};\n            }\n        }\n\n        .strike-through {\n            text-decoration-color: ${palette('secondary')};\n        }\n    `;\n\n    const footnote = css`\n        .footnote-definition {\n            ${manager.get(ThemeBorder, undefined)};\n            border-radius: ${manager.get(ThemeSize, 'radius')};\n            background-color: ${palette('background')};\n            padding: 1em;\n            display: flex;\n            flex-direction: row;\n            & > .footnote-definition_content {\n                flex: 1;\n                width: calc(100% - 1em);\n                & > dd {\n                    margin-inline-start: 1em;\n                }\n                & > dt {\n                    color: ${palette('secondary')};\n                    font-weight: 500;\n                }\n            }\n            & > .footnote-definition_anchor {\n                width: 1em;\n            }\n        }\n    `;\n\n    const table = css`\n        /* copy from https://github.com/ProseMirror/prosemirror-tables/blob/master/style/tables.css */\n        .tableWrapper {\n            overflow-x: auto;\n            margin: 0;\n            ${manager.get(ThemeScrollbar, ['x'])}\n            width: 100%;\n            * {\n                margin: 0;\n                box-sizing: border-box;\n                font-size: 1em;\n            }\n        }\n        table {\n            border-collapse: collapse;\n            table-layout: fixed;\n            width: 100%;\n            overflow: auto;\n            border-radius: ${manager.get(ThemeSize, 'radius')};\n            p {\n                line-height: unset;\n            }\n        }\n        tr {\n            ${manager.get(ThemeBorder, 'bottom')};\n        }\n        td,\n        th {\n            padding: 0 1em;\n            vertical-align: top;\n            box-sizing: border-box;\n            position: relative;\n\n            min-width: 100px;\n            ${manager.get(ThemeBorder, undefined)};\n            text-align: left;\n            line-height: 3;\n            height: 3em;\n        }\n        th {\n            background: ${palette('background', 0.5)};\n            font-weight: 400;\n        }\n        .column-resize-handle {\n            position: absolute;\n            right: -2px;\n            top: 0;\n            bottom: 0;\n            z-index: 20;\n            pointer-events: none;\n            background: ${palette('secondary')};\n            width: ${manager.get(ThemeSize, 'lineWidth')};\n        }\n        .resize-cursor {\n            cursor: ew-resize;\n            cursor: col-resize;\n        }\n\n        .selectedCell {\n            &::after {\n                z-index: 2;\n                position: absolute;\n                content: '';\n                left: 0;\n                right: 0;\n                top: 0;\n                bottom: 0;\n                background: ${palette('secondary', 0.38)};\n                pointer-events: none;\n            }\n\n            & ::selection {\n                background: transparent;\n            }\n        }\n    `;\n\n    injectProsemirrorView(emotion);\n\n    injectGlobal`\n        .milkdown {\n            .material-icons-outlined {\n                font-size: 1.5em;\n            }\n\n            position: relative;\n            margin-left: auto;\n            margin-right: auto;\n            box-sizing: border-box;\n\n\n            color: ${neutral};\n            background: ${surface};\n            font-family: ${manager.get(ThemeFont, 'typography')};\n\n            ${manager.get(ThemeShadow, undefined)}\n            ${manager.get(ThemeScrollbar, undefined)}\n            ${selection};\n\n            .editor {\n                ${editorLayout};\n\n                ${paragraph};\n                ${heading};\n                ${blockquote};\n                ${hr};\n                ${list};\n                ${code};\n                ${img};\n\n                ${table};\n                ${footnote};\n\n                ${inline};\n            }\n        }\n    `;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion } from '@milkdown/core';\n\nexport const injectProsemirrorView = ({ injectGlobal }: Emotion) => injectGlobal`\n    /* copy from https://github.com/ProseMirror/@milkdown/prose/blob/master/style/prosemirror.css */\n    .ProseMirror {\n        position: relative;\n    }\n\n    .ProseMirror {\n        word-wrap: break-word;\n        white-space: pre-wrap;\n        white-space: break-spaces;\n        -webkit-font-variant-ligatures: none;\n        font-variant-ligatures: none;\n        font-feature-settings: 'liga' 0; /* the above doesn't seem to work in Edge */\n    }\n\n    .ProseMirror pre {\n        white-space: pre-wrap;\n    }\n\n    .ProseMirror li {\n        position: relative;\n    }\n\n    .ProseMirror-hideselection *::selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection *::-moz-selection {\n        background: transparent;\n    }\n    .ProseMirror-hideselection {\n        caret-color: transparent;\n    }\n\n    .ProseMirror-selectednode {\n        outline: 2px solid #8cf;\n    }\n\n    /* Make sure li selections wrap around markers */\n\n    li.ProseMirror-selectednode {\n        outline: none;\n    }\n\n    li.ProseMirror-selectednode:after {\n        content: '';\n        position: absolute;\n        left: -32px;\n        right: -2px;\n        top: -2px;\n        bottom: -2px;\n        border: 2px solid #8cf;\n        pointer-events: none;\n    }\n\n    /* Protect against generic img rules */\n\n    img.ProseMirror-separator {\n        display: inline !important;\n        border: none !important;\n        margin: 0 !important;\n    }\n`;\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Emotion,\n    hex2rgb,\n    ThemeBorder,\n    ThemeColor,\n    themeFactory,\n    ThemeFont,\n    ThemeGlobal,\n    ThemeIcon,\n    ThemeManager,\n    ThemeScrollbar,\n    ThemeShadow,\n    ThemeSize,\n} from '@milkdown/core';\nimport { useAllPresetRenderer } from '@milkdown/theme-pack-helper';\n\nimport { code, typography } from './font';\nimport { getIcon } from './icon';\nimport { darkColor, lightColor } from './nord';\nimport { getStyle } from './style';\n\nexport const font = {\n    typography,\n    code,\n};\n\nexport const size = {\n    radius: '4px',\n    lineWidth: '1px',\n};\n\nexport const createTheme = (isDarkMode: boolean) => (emotion: Emotion, manager: ThemeManager) => {\n    const { css } = emotion;\n    const colorSet = isDarkMode ? darkColor : lightColor;\n\n    manager.set(ThemeColor, (options) => {\n        if (!options) return;\n        const [key, opacity] = options;\n        const hex = colorSet[key];\n        const rgb = hex2rgb(hex);\n        if (!rgb) return;\n\n        return `rgba(${rgb?.join(', ')}, ${opacity || 1})`;\n    });\n\n    manager.set(ThemeSize, (key) => {\n        if (!key) return;\n        return size[key];\n    });\n\n    manager.set(ThemeFont, (key) => {\n        if (!key) return;\n        return font[key].join(', ');\n    });\n\n    manager.set(ThemeScrollbar, ([direction = 'y', type = 'normal'] = ['y', 'normal'] as never) => {\n        const main = manager.get(ThemeColor, ['secondary', 0.38]);\n        const bg = manager.get(ThemeColor, ['secondary', 0.12]);\n        const hover = manager.get(ThemeColor, ['secondary']);\n        return css`\n            scrollbar-width: thin;\n            scrollbar-color: ${main} ${bg};\n            -webkit-overflow-scrolling: touch;\n\n            &::-webkit-scrollbar {\n                ${direction === 'y' ? 'width' : 'height'}: ${type === 'thin' ? 2 : 12}px;\n                background-color: transparent;\n            }\n\n            &::-webkit-scrollbar-track {\n                border-radius: 999px;\n                background: transparent;\n                border: 4px solid transparent;\n            }\n\n            &::-webkit-scrollbar-thumb {\n                border-radius: 999px;\n                background-color: ${main};\n                border: ${type === 'thin' ? 0 : 4}px solid transparent;\n                background-clip: content-box;\n            }\n\n            &::-webkit-scrollbar-thumb:hover {\n                background-color: ${hover};\n            }\n        `;\n    });\n\n    manager.set(ThemeShadow, () => {\n        const lineWidth = manager.get(ThemeSize, 'lineWidth');\n        const getShadow = (opacity: number) => manager.get(ThemeColor, ['shadow', opacity]);\n        return css`\n            box-shadow: 0 ${lineWidth} ${lineWidth} ${getShadow(0.14)}, 0 2px ${lineWidth} ${getShadow(0.12)},\n                0 ${lineWidth} 3px ${getShadow(0.2)};\n        `;\n    });\n\n    manager.set(ThemeBorder, (direction) => {\n        const lineWidth = manager.get(ThemeSize, 'lineWidth');\n        const line = manager.get(ThemeColor, ['line']);\n        if (!direction) {\n            return css`\n                border: ${lineWidth} solid ${line};\n            `;\n        }\n        return css`\n            ${`border-${direction}`}: ${lineWidth} solid ${line};\n        `;\n    });\n\n    manager.set(ThemeIcon, (icon) => {\n        if (!icon) return;\n\n        return getIcon(icon);\n    });\n\n    manager.set(ThemeGlobal, () => {\n        getStyle(manager, emotion);\n    });\n\n    useAllPresetRenderer(manager, emotion);\n};\n\nexport const getNord = (isDarkMode = false) =>\n    themeFactory((emotion, manager) => createTheme(isDarkMode)(emotion, manager));\n\nexport const nordDark = getNord(true);\nexport const nordLight = getNord(false);\n\nconst darkMode = Boolean(window.matchMedia?.('(prefers-color-scheme: dark)').matches);\nexport const nord = getNord(darkMode);\n\nexport { color, darkColor, lightColor } from './nord';\n","/* Copyright 2021, Milkdown by Mirone. */\nexport const typography = [\n    'Roboto',\n    'HelveticaNeue-Light',\n    'Helvetica Neue Light',\n    'Helvetica Neue',\n    'Helvetica',\n    'Arial',\n    'Lucida Grande',\n    'sans-serif',\n];\n\nexport const code = ['Consolas', 'Monaco', 'Andale Mono', 'Ubuntu Mono', 'monospace'];\n","/* Copyright 2021, Milkdown by Mirone. */\n\nexport * from './code-fence';\nexport * from './image';\nexport * from './inner-editor';\nexport * from './input-chip';\nexport * from './task-list-item';\n\nimport type { Emotion, ThemeManager } from '@milkdown/core';\n\nimport { codeFence } from './code-fence';\nimport { image } from './image';\nimport { innerEditor } from './inner-editor';\nimport { inputChip } from './input-chip';\nimport { taskListItem } from './task-list-item';\n\nexport const useAllPresetRenderer = (manager: ThemeManager, emotion: Emotion) => {\n    [inputChip, image, codeFence, taskListItem, innerEditor].forEach((f) => {\n        f(manager, emotion);\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { MilkdownPlugin } from '@milkdown/core';\n\nimport { AddMetadata, Metadata } from '../types';\n\ntype PluginWithMetadata = MilkdownPlugin & Metadata;\ntype Plugin = MilkdownPlugin | PluginWithMetadata;\n\nconst hasMetadata = (x: Plugin): x is PluginWithMetadata => Object.prototype.hasOwnProperty.call(x, 'origin');\n\ntype Factory = AddMetadata;\n\nexport class AtomList<T extends Plugin = Plugin> extends Array<T> {\n    private findThenRun<U extends Factory>(target: U, callback: (index: number) => void): this {\n        const index = this.findIndex((x) => hasMetadata(x) && x.origin === target);\n        if (index < 0) return this;\n\n        callback(index);\n\n        return this;\n    }\n\n    configure<U extends Factory>(target: U, config: Parameters<U>[0]): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1, target(config) as T);\n        });\n    }\n\n    replace<U extends Factory, Next extends Plugin>(target: U, next: Next): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1, next as Plugin as T);\n        });\n    }\n\n    remove<U extends Factory>(target: U): this {\n        return this.findThenRun(target, (index) => {\n            this.splice(index, 1);\n        });\n    }\n\n    headless(): this {\n        this.filter(hasMetadata).forEach((x) => {\n            this.configure((x as PluginWithMetadata).origin as Factory, { headless: true });\n        });\n        return this;\n    }\n\n    static create<T extends Plugin = Plugin>(from: T[]): AtomList<T> {\n        return new AtomList(...from);\n    }\n}\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MilkdownPlugin, prosePluginsCtx, SchemaReady } from '@milkdown/core';\nimport { Plugin } from '@milkdown/prose';\n\nexport type $Prose = MilkdownPlugin & {\n    plugin: Plugin;\n};\n\nexport const $prose = (prose: (ctx: Ctx) => Plugin): $Prose => {\n    const plugin: MilkdownPlugin = () => async (ctx) => {\n        await ctx.wait(SchemaReady);\n        const prosePlugin = prose(ctx);\n        ctx.update(prosePluginsCtx, (ps) => [...ps, prosePlugin]);\n        (<$Prose>plugin).plugin = prosePlugin;\n    };\n\n    return <$Prose>plugin;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport {\n    Attrs,\n    CmdKey,\n    commandsCtx,\n    Ctx,\n    emotionCtx,\n    InitReady,\n    inputRulesCtx,\n    prosePluginsCtx,\n    remarkPluginsCtx,\n    themeManagerCtx,\n} from '@milkdown/core';\nimport { themeMustInstalled } from '@milkdown/exception';\nimport { keymap } from '@milkdown/prose';\n\nimport {\n    AddMetadata,\n    CommandConfig,\n    CommonOptions,\n    Factory,\n    GetPlugin,\n    Methods,\n    UnknownRecord,\n    Utils,\n    WithExtend,\n} from '../types';\n\nexport const getClassName =\n    (className: CommonOptions['className']) =>\n    (attrs: Attrs, ...defaultValue: (string | null | undefined)[]): string => {\n        const classList = className?.(attrs, ...defaultValue) ?? defaultValue;\n        return Array.isArray(classList) ? classList.filter((x) => x).join(' ') : classList;\n    };\n\nexport const createShortcut = <T>(commandKey: CmdKey<T>, defaultKey: string, args?: T) =>\n    [commandKey, defaultKey, args] as CommandConfig<unknown>;\n\nexport const getUtils = <Options extends UnknownRecord>(ctx: Ctx, options?: Options): Utils => {\n    try {\n        const themeManager = ctx.get(themeManagerCtx);\n        const emotion = ctx.get(emotionCtx);\n        if (!emotion.css) {\n            throw themeMustInstalled();\n        }\n\n        return {\n            getClassName: getClassName(options?.['className'] as undefined),\n            getStyle: (style) => (options?.['headless'] ? '' : (style(emotion) as string | undefined)),\n            themeManager,\n        };\n    } catch {\n        throw themeMustInstalled();\n    }\n};\n\nexport const applyMethods = async <Keys extends string, Type, Options extends UnknownRecord>(\n    ctx: Ctx,\n    plugin: Methods<Keys, Type>,\n    getType: () => Promise<Type>,\n    options?: Partial<CommonOptions<Keys, Options>>,\n): Promise<void> => {\n    await ctx.wait(InitReady);\n\n    if (plugin.remarkPlugins) {\n        const remarkPlugins = plugin.remarkPlugins(ctx);\n        ctx.update(remarkPluginsCtx, (ps) => [...ps, ...remarkPlugins]);\n    }\n\n    const type = await getType();\n\n    if (plugin.commands) {\n        const commands = plugin.commands(type, ctx);\n        commands.forEach(([key, command]) => {\n            ctx.get(commandsCtx).create(key, command);\n        });\n    }\n\n    if (plugin.inputRules) {\n        const inputRules = plugin.inputRules(type, ctx);\n        ctx.update(inputRulesCtx, (ir) => [...ir, ...inputRules]);\n    }\n\n    if (plugin.shortcuts) {\n        const getKey = (key: Keys, defaultValue: string): string | string[] => {\n            return options?.keymap?.[key] ?? defaultValue;\n        };\n\n        const tuples = Object.entries<CommandConfig>(plugin.shortcuts)\n            .flatMap(([id, [commandKey, defaultKey, args]]) => {\n                const runner = () => ctx.get(commandsCtx).call(commandKey, args);\n                const key = getKey(id as Keys, defaultKey);\n                if (Array.isArray(key)) {\n                    return key.map((k) => ({ key: k, runner }));\n                }\n                return { key, runner };\n            })\n            .map((x) => [x.key, x.runner] as [string, () => boolean]);\n        ctx.update(prosePluginsCtx, (ps) => ps.concat(keymap(Object.fromEntries(tuples))));\n    }\n\n    if (plugin.prosePlugins) {\n        const prosePlugins = plugin.prosePlugins(type, ctx);\n        ctx.update(prosePluginsCtx, (ps) => [...ps, ...prosePlugins]);\n    }\n};\n\nexport const addMetadata = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    x: GetPlugin<SupportedKeys, Options>,\n): AddMetadata<SupportedKeys, Options> => {\n    const fn: AddMetadata<SupportedKeys, Options> = (options) => {\n        const result = x(options) as ReturnType<AddMetadata<SupportedKeys, Options>>;\n        result.origin = fn;\n        return result;\n    };\n    return fn;\n};\n\nexport const withExtend = <SupportedKeys extends string, Options extends UnknownRecord, Type, Rest>(\n    factory: Factory<SupportedKeys, Options, Type, Rest>,\n    origin: AddMetadata<SupportedKeys, Options>,\n    creator: (factory: Factory<SupportedKeys, Options, Type, Rest>) => WithExtend<SupportedKeys, Options, Type, Rest>,\n): WithExtend<SupportedKeys, Options, Type, Rest> => {\n    type Ext = WithExtend<SupportedKeys, Options, Type, Rest>;\n    const next = origin as Ext;\n    const extend = (extendFactory: Parameters<Ext['extend']>[0]) =>\n        creator((...args) => extendFactory(factory(...args), ...args));\n\n    next.extend = extend as Ext['extend'];\n\n    return next;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MarkSchema, marksCtx, MilkdownPlugin, schemaCtx, SchemaReady, ThemeReady, viewCtx } from '@milkdown/core';\nimport { MarkType, MarkViewFactory, ViewFactory } from '@milkdown/prose';\n\nimport { Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, applyMethods, getUtils, withExtend } from './common';\n\ntype MarkRest = {\n    id: string;\n    schema: (ctx: Ctx) => MarkSchema;\n    view?: (ctx: Ctx) => MarkViewFactory;\n};\n\ntype MarkFactory<SupportedKeys extends string, Options extends UnknownRecord> = Factory<\n    SupportedKeys,\n    Options,\n    MarkType,\n    MarkRest\n>;\n\nexport const createMark = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    factory: MarkFactory<SupportedKeys, Options>,\n): WithExtend<SupportedKeys, Options, MarkType, MarkRest> =>\n    withExtend(\n        factory,\n        addMetadata(\n            (options): MilkdownPlugin =>\n                () =>\n                async (ctx) => {\n                    await ctx.wait(ThemeReady);\n                    const utils = getUtils(ctx, options);\n\n                    const plugin = factory(utils, options);\n                    plugin.view = options?.view ?? plugin.view;\n\n                    await applyMethods(\n                        ctx,\n                        plugin,\n                        async () => {\n                            const node = plugin.schema(ctx);\n                            ctx.update(marksCtx, (ns) => [...ns, [plugin.id, node] as [string, MarkSchema]]);\n\n                            await ctx.wait(SchemaReady);\n\n                            const schema = ctx.get(schemaCtx);\n                            const markType = schema.marks[plugin.id];\n                            if (!markType) {\n                                throw new Error();\n                            }\n                            return markType;\n                        },\n                        options,\n                    );\n\n                    if (plugin.view) {\n                        const view = plugin.view(ctx);\n                        ctx.update(viewCtx, (v) => [...v, [plugin.id, view] as [string, ViewFactory]]);\n                    }\n                },\n        ),\n        createMark,\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { Ctx, MilkdownPlugin, NodeSchema, nodesCtx, schemaCtx, SchemaReady, ThemeReady, viewCtx } from '@milkdown/core';\nimport { NodeType, NodeViewFactory, ViewFactory } from '@milkdown/prose';\n\nimport { Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, applyMethods, getUtils, withExtend } from './common';\n\ntype NodeRest = {\n    id: string;\n    schema: (ctx: Ctx) => NodeSchema;\n    view?: (ctx: Ctx) => NodeViewFactory;\n};\n\ntype NodeFactory<SupportedKeys extends string, Options extends UnknownRecord> = Factory<\n    SupportedKeys,\n    Options,\n    NodeType,\n    NodeRest\n>;\n\nexport const createNode = <SupportedKeys extends string = string, Options extends UnknownRecord = UnknownRecord>(\n    factory: NodeFactory<SupportedKeys, Options>,\n): WithExtend<SupportedKeys, Options, NodeType, NodeRest> =>\n    withExtend(\n        factory,\n        addMetadata(\n            (options): MilkdownPlugin =>\n                () =>\n                async (ctx) => {\n                    await ctx.wait(ThemeReady);\n                    const utils = getUtils(ctx, options);\n\n                    const plugin = factory(utils, options);\n                    plugin.view = options?.view ?? plugin.view;\n\n                    await applyMethods(\n                        ctx,\n                        plugin,\n                        async () => {\n                            const node = plugin.schema(ctx);\n                            ctx.update(nodesCtx, (ns) => [...ns, [plugin.id, node] as [string, NodeSchema]]);\n\n                            await ctx.wait(SchemaReady);\n\n                            const schema = ctx.get(schemaCtx);\n                            const nodeType = schema.nodes[plugin.id];\n                            if (!nodeType) {\n                                throw new Error();\n                            }\n                            return nodeType;\n                        },\n                        options,\n                    );\n\n                    if (plugin.view) {\n                        const view = plugin.view(ctx);\n                        ctx.update(viewCtx, (v) => [...v, [plugin.id, view] as [string, ViewFactory]]);\n                    }\n                },\n        ),\n        createNode,\n    );\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport {\n    Ctx,\n    MarkSchema,\n    marksCtx,\n    MilkdownPlugin,\n    NodeSchema,\n    nodesCtx,\n    schemaCtx,\n    SchemaReady,\n    ThemeReady,\n    viewCtx,\n} from '@milkdown/core';\nimport { MarkType, MarkViewFactory, NodeType, NodeViewFactory, ViewFactory } from '@milkdown/prose';\n\nimport { Factory, UnknownRecord, WithExtend } from '../types';\nimport { addMetadata, applyMethods, getUtils, withExtend } from './common';\n\ntype TypeMapping<NodeKeys extends string, MarkKeys extends string> = {\n    [K in NodeKeys]: NodeType;\n} & {\n    [K in MarkKeys]: MarkType;\n};\n\ntype ViewMapping<NodeKeys extends string, MarkKeys extends string> = {\n    [K in NodeKeys]: NodeViewFactory;\n} & {\n    [K in MarkKeys]: MarkViewFactory;\n};\n\ntype PluginRest<NodeKeys extends string, MarkKeys extends string> = {\n    schema?: (ctx: Ctx) => {\n        node?: Record<NodeKeys, NodeSchema>;\n        mark?: Record<MarkKeys, MarkSchema>;\n    };\n    view?: (ctx: Ctx) => Partial<ViewMapping<NodeKeys, MarkKeys>>;\n};\ntype PluginFactory<\n    SupportedKeys extends string = string,\n    Options extends UnknownRecord = UnknownRecord,\n    NodeKeys extends string = string,\n    MarkKeys extends string = string,\n> = Factory<SupportedKeys, Options, TypeMapping<NodeKeys, MarkKeys>, PluginRest<NodeKeys, MarkKeys>>;\n\nexport const createPlugin = <\n    SupportedKeys extends string = string,\n    Options extends UnknownRecord = UnknownRecord,\n    NodeKeys extends string = string,\n    MarkKeys extends string = string,\n>(\n    factory: PluginFactory<SupportedKeys, Options, NodeKeys, MarkKeys>,\n): WithExtend<SupportedKeys, Options, TypeMapping<NodeKeys, MarkKeys>, PluginRest<NodeKeys, MarkKeys>> =>\n    withExtend(\n        factory,\n        addMetadata(\n            (options): MilkdownPlugin =>\n                () =>\n                async (ctx) => {\n                    await ctx.wait(ThemeReady);\n                    const utils = getUtils(ctx, options);\n\n                    const plugin = factory(utils, options);\n\n                    await applyMethods(\n                        ctx,\n                        plugin,\n                        async () => {\n                            let node: Record<NodeKeys, NodeSchema> = {} as Record<NodeKeys, NodeSchema>;\n                            let mark: Record<MarkKeys, MarkSchema> = {} as Record<MarkKeys, MarkSchema>;\n                            if (plugin.schema) {\n                                const schemas = plugin.schema(ctx);\n                                if (schemas.node) {\n                                    node = schemas.node;\n                                    const nodes = Object.entries<NodeSchema>(schemas.node);\n                                    ctx.update(nodesCtx, (ns) => [...ns, ...nodes]);\n                                }\n\n                                if (schemas.mark) {\n                                    mark = schemas.mark;\n                                    const marks = Object.entries<MarkSchema>(schemas.mark);\n                                    ctx.update(marksCtx, (ms) => [...ms, ...marks]);\n                                }\n                            }\n\n                            await ctx.wait(SchemaReady);\n\n                            const schema = ctx.get(schemaCtx);\n                            const nodeTypes = Object.keys(node).map((id) => [id, schema.nodes[id]] as const);\n                            const markTypes = Object.keys(mark).map((id) => [id, schema.marks[id]] as const);\n                            const type: TypeMapping<NodeKeys, MarkKeys> = Object.fromEntries([\n                                ...nodeTypes,\n                                ...markTypes,\n                            ]);\n                            return type;\n                        },\n                        options,\n                    );\n\n                    if (plugin.view) {\n                        const view = plugin.view(ctx);\n                        ctx.update(viewCtx, (v) => [\n                            ...v,\n                            ...Object.entries<ViewFactory>(view as Record<string, ViewFactory>),\n                        ]);\n                    }\n                },\n        ),\n        createPlugin,\n    );\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n"],"names":["getContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ContainerRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","theme","_extends","width","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","unit","Math","max","xs","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","hasOwn","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","isBuffer","deleteSelection","state","dispatch","selection","empty","tr","scrollIntoView","textblockAt","node","side","only","firstChild","lastChild","isTextblock","childCount","findCutBefore","$pos","parent","type","spec","isolating","let","depth","index","doc","resolve","before","findCutAfter","after","defaultBlockAt","match","edgeCount","edge","hasRequiredAttrs","splitBlock","$from","$to","NodeSelection","isBlock","parentOffset","canSplit","pos","split","atEnd","content","size","TextSelection","AllSelection","deflt","contentMatchAt","indexAfter","types","can","mapping","map","first","$first","canReplaceWith","setNodeMarkup","deleteBarrier","$cut","conn","nodeBefore","nodeAfter","compatibleContent","canReplace","delete","nodeSize","canJoin","clearIncompatible","join","joinMaybeClear","canDelAfter","findWrapping","matchType","validEnd","end","wrap","Fragment","create","step","ReplaceAroundStep","Slice","joinAt","selAfter","Selection","range","blockRange","liftTarget","lift","at","push","afterText","afterDepth","selectTextblockSide","sel","isInline","setSelection","start","selectTextblockStart","selectTextblockEnd","wrapIn","nodeType","attrs","wrapping","setBlockType","from","to","applicable","nodesBetween","hasMarkup","toggleMark","markType","$cursor","ranges","allowsMarkType","inlineContent","v","markApplies","isInSet","storedMarks","marks","removeStoredMark","addStoredMark","has","rangeHasMark","removeMark","spaceStart","isText","exec","text","spaceEnd","addMark","chainCommands","view","commands","backspace","endOfTextblock","delStep","replaceStep","slice","isAtom","$head","del","pcBaseKeymap","$anchor","code","sameParent","insertText","insert","createAndFill","above","replaceWith","macBaseKeymap","const","baseKeymap","navigator","test","platform","os","GOOD_LEAF_SIZE","RopeSequence","append","this","leafAppend","leafPrepend","appendInner","prepend","Append","sliceInner","min","get","getInner","forEach","f","forEachInner","forEachInvertedInner","result","elt","Leaf","__proto__","prototypeAccessors","flatten","concat","defineProperties","left","right","leftLen","inner","Branch","items","eventCount","popEvent","preserveItems","remap","mapFrom","remapping","maps","remaining","transform","addAfter","addBefore","item","Item","maybeStep","appendMap","reverse","addTransform","histOptions","newItems","oldItems","lastItem","steps","merged","invert","docs","merge","pop","overflow","DEPTH_OVERFLOW","n","cutPoint","cutOffEvents","Mapping","mirrorPos","mirrorOffset","addMaps","array","rebased","rebasedTransform","rebasedCount","rebasedItems","newUntil","iRebased","getMirror","newMaps","branch","emptyItemCount","compress","count","upto","events","getMap","newItem","last","HistoryState","done","undone","prevRanges","prevTime","rangesFor","_from","_to","mapRanges","histTransaction","history","redo","mustPreserveItems","historyKey","config","added","getBookmark","newHist","setMeta","historyState","cachedPreserveItems","cachedPreserveItemsPlugins","plugins","historyPreserveItems","PluginKey","closeHistoryKey","newGroupDelay","Plugin","init","apply","hist","historyTr","getMeta","appended","newGroup","time","docChanged","adjacent","isAdjacentTo","applyTransaction","handleDOMEvents","beforeinput","e","handled","inputType","undo","preventDefault","getState","InputRule","handler","string","offset","lastIndexOf","cutOff","wrappingInputRule","regexp","getAttrs","joinPredicate","Function","textblockTypeInputRule","$start","mac","normalizeKeyName","alt","ctrl","shift","meta","parts","mod","Error","modifiers","event","altKey","ctrlKey","metaKey","shiftKey","keymap","bindings","handleKeyDown","keydownHandler","prop","normalize","baseName","keyName","isChar","direct","charCodeAt","base","keyCode","fromCode","withShift","OrderedMap","find","found","undefined","update","newKey","self","remove","splice","addToStart","addToEnd","place","without","subtract","findDiffStart","a","b","childA","child","childB","sameMarkup","j","findDiffEnd","posA","posB","iA","iB","same","minSize","nodeStart","descendants","textBetween","blockSeparator","leafText","separated","isLeaf","withText","cut","cutByIndex","replaceChild","current","eq","RangeError","maybeChild","p","otherPos","findIndex","round","retIndex","curPos","toStringInner","toJSON","fromJSON","schema","nodeFromJSON","fromArray","joined","nodes","compareDeep","Mark","ReplaceError","message","err","addToSet","set","placed","excludes","rank","removeFromSet","_","json","sameSet","setFrom","none","sort","openStart","openEnd","removeRange","indexTo","offsetTo","insertInto","dist","replace","replaceOuter","$along","extra","resolveNoCache","prepareSliceForReplace","close","replaceThreeWay","replaceTwoWay","checkJoin","main","sub","joinable","$before","$after","addNode","addRange","$end","startIndex","endIndex","textOffset","validContent","insertAt","fragment","removeBetween","maxOpen","openIsolating","ResolvedPos","path","resolveDepth","val","dOff","posAtIndex","tmp","inclusive","marksAcross","next","sharedDepth","pred","d","NodeRange","str","rem","resolveCached","resolveCache","cached","resolveCachePos","resolveCacheSize","prototypeAccessors$1","emptyAttrs","Node","startPos","textContent","defaultAttrs","mark","includeParents","nodeAt","childAfter","childBefore","toDebugString","wrapMarks","contentMatch","matchFragment","replacement","one","two","allowsMarks","canAppend","check","m","markFromJSON","TextNode","super","JSON","stringify","ContentMatch","wrapCache","parse","nodeTypes","stream","TokenStream","expr","parseExpr","nfa","labeled","explore","nullFrom","states","out","term","known","indexOf","cmp","dfa","connect","compile","edges","exprs","loop","cur","work","dead","checkForDeadEnds","frag","defaultType","compatible","fillBefore","toEnd","seen","search","finished","tp","computed","computeWrapping","active","via","scan","inline","tokens","parseExprSeq","eat","parseExprSubscript","typeName","groups","resolveName","parseExprAtom","parseExprRange","parseNum","Number","defaults","attrName","attr","hasDefault","default","computeAttrs","built","given","initAttrs","Attribute","tok","SyntaxError","NodeType","group","markSet","atom","whitespace","isRequired","createChecked","allowedMarks","topType","topNode","MarkType","excluded","instance","Schema","contentExprCache","contentExpr","markExpr","gatherMarks","excl","bind","topNodeType","wrappings","ok","DOMParser","rules","tags","rule","tag","style","normalizeLists","some","r","dom","context","ParseContext","addAll","finish","parseSlice","matchTag","matches","namespace","namespaceURI","matchesContext","matchStyle","schemaRules","priority","parseDOM","loop$1","fromSchema","domParser","blockTags","address","article","aside","blockquote","canvas","dd","div","dl","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","li","noscript","ol","output","pre","section","table","tfoot","ul","ignoreTags","head","object","script","title","listTags","wsOptionsFor","preserveWhitespace","OPT_PRESERVE_WS","NodeContext","pendingMarks","solid","activeMarks","stashMarks","fill","popFromStashMark","applyPending","nextType","pending","markMayApply","inlineContext","parentNode","nodeName","toLowerCase","parser","open","isOpen","topContext","topOptions","topMatch","findPositions","needsBlock","selector","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","top","addDOM","addTextNode","getAttribute","readStyles","re","trim","parseStyles","addPendingMark","addElement","removePendingMark","nodeValue","domNodeBefore","previousSibling","insertNode","findInText","findInside","matchAfter","ruleID","prevItem","nextSibling","appendChild","normalizeList","ruleFromNode","ignore","ignoreFallback","skip","closeParent","sync","oldNeedsBlock","leafFallback","addElementByRule","consuming","ownerDocument","createTextNode","findPlace","continueAfter","enter","startIn","getContent","contentDOM","contentElement","querySelector","findAround","childNodes","findAtPoint","route","cx","enterInner","block","textblockFromContext","closeExtra","preserveWS","topOpen","currentPos","contains","compareDocumentPosition","textNode","option","useRoot","minDepth","part","$context","findSameMarkInSet","level","stashMark","DOMSerializer","gatherToDOM","toDOM","document","window","serializeFragment","createDocumentFragment","keep","rendered","spanning","add","markDOM","serializeMark","serializeNodeInner","renderSpec","onContent","serializeNode","structure","xmlNS","tagName","space","createElementNS","createElement","setAttributeNS","setAttribute","innerContent","domSerializer","nodesFromSchema","marksFromSchema","splitListItem","itemType","grandParent","depthBefore","depthAfter","near","liftListItem","endOfList","liftToOuterList","list","atStart","indexBefore","liftOutOfList","sinkListItem","nestedBefore","classesById","SelectionRange","anchor","lastNode","lastParent","replaceRange","selectionToInsertionEnd","deleteRange","replaceRangeWith","findFrom","dir","textOnly","findSelectionIn","bias","cls","jsonID","id","selectionClass","between","visible","ensureMarks","TextBookmark","dPos","mapResult","deleted","NodeBookmark","isSelectable","selectable","AllBookmark","startLen","ReplaceStep","_newFrom","newTo","Transaction","Date","now","curSelection","curSelectionFor","updated","selectionSet","setStoredMarks","storedMarksSet","addStep","setTime","replaceSelection","replaceSelectionWith","inheritMarks","isGeneric","scrolledIntoView","Transform","FieldDesc","desc","baseFields","_marks","_old","prev","Configuration","fields","pluginsByKey","plugin","EditorState","filterTransaction","rootTr","transactions","trs","newState","applyInner","haveNew","appendTransaction","oldState","newInstance","field","applyListeners","$config","reconfigure","pluginFields","addApplyListener","removeApplyListener","bindProps","createKey","factor16","pow","recoverIndex","MapResult","recover","StepMap","inverted","diff","recoverOffset","assoc","_map","simple","oldIndex","newIndex","oldSize","newSize","touches","oldStart","newStart","mirror","TransformError","mirrors","setMirror","appendMapping","startSize","mirr","appendMappingInverted","totalSize","inverse","corr","mustOverride","failed","stepsByID","Step","_doc","_mapping","_other","stepType","stepClass","StepResult","fail","fromReplace","contentBetween","gapFrom","gapTo","gap","inserted","canCut","innerRange","around","outer","findWrappingOutside","inside","innerMatch","findWrappingInside","withAttrs","typesAfter","innerType","rest","baseType","dropPoint","pass","insertPos","fits","mapFragment","mapped","gapStart","gapEnd","splitting","wrappers","canChangeType","startM","endM","newNode","typeAfter","AddMarkStep","oldSlice","RemoveMarkStep","fitsTrivially","Fitter","fit","removed","removing","adding","newSet","s","matched","toRemove","parentType","delSteps","allowed","unplaced","frontier","dropFromFragment","addToFragment","contentAt","closeNodeStart","contentAfterFits","invalidMarks","definesContent","defining","definingForContent","closeFragment","oldOpen","newOpen","coveredDepths","findFittable","placeNodes","openMore","dropNode","moveInline","mustMoveInline","placedSize","sliceDepth","frontierDepth","inject","openAtEnd","closeFrontierNode","openFrontierNode","taken","openEndCount","findCloseLevel","dropInner","move","targetDepths","preferredTarget","unshift","definingAsContext","preferredTargetIndex","leftNodes","preferredDepth","def","openDepth","targetDepth","expand","startSteps","point","insertPoint","covered","ie_edge","userAgent","ie_upto10","ie_11up","ie","ie_version","documentMode","gecko","gecko_version","chrome","chrome_version","safari","vendor","ios","maxTouchPoints","android","webkit","documentElement","webkit_version","domIndex","assignedSlot","host","reusedRange","textRange","createRange","setEnd","setStart","isEquivalentPosition","off","targetNode","targetOff","scanFor","atomElements","hasBlockDesc","contentEditable","pmViewDesc","selectionCollapsed","domSel","collapsed","isCollapsed","browser","rangeCount","getRangeAt","keyEvent","createEvent","initEvent","windowRect","clientWidth","bottom","clientHeight","getSide","clientRect","rect","getBoundingClientRect","scaleX","offsetWidth","scaleY","height","offsetHeight","scrollRectIntoView","startDOM","scrollThreshold","someProp","scrollMargin","atTop","body","bounding","moveX","moveY","defaultView","scrollBy","startX","scrollLeft","startY","scrollTop","dX","dY","scrollStack","stack","restoreScrollStack","dTop","preventScrollSupported","findOffsetInNode","coords","closest","coordsClosest","dxClosest","rowBot","rowTop","childIndex","rects","getClientRects","dx","len","singleRect","inRect","findOffsetInText","elementFromPoint","element","box","startI","floor","posAtCoords","caretPositionFromPoint","assign","caretRangeFromPoint","assign$1","draggable","targetKludge","outside","docView","nearestDesc","posBefore","posAfter","posFromDOM","posFromCaret","posFromElement","posAtStart","border","BIDI","coordsAtPos","domFromPos","supportEmptyRange","takeSide","flattenV","rectBefore","rectAfter","flattenH","ignoreForCoords","x","y","withFlushedState","viewState","activeElement","updateState","focus","maybeRTL","cachedState","cachedDir","cachedResult","nearest","boxes","endOfTextblockVertical","getSelection","modify","oldRange","oldNode","focusNode","oldOff","focusOffset","oldBidiLevel","caretBidiLevel","domAfterPos","removeAllRanges","endOfTextblockHorizontal","ViewDesc","children","dirty","matchesWidget","matchesMark","matchesNode","matchesHack","_nodeName","parseRule","stopEvent","destroy","posBeforeChild","posAtEnd","localPosFromDOM","domBefore","domAfter","onlyNodes","getDesc","nodeDOM","descAt","TrailingHackViewDesc","WidgetViewDesc","widget","domAtom","parseRange","fromOffset","toOffset","childBase","emptyChildAt","force","anchorDOM","headDOM","brKludge","anchorNode","anchorOffset","domSelExtended","collapse","DOMException","ignoreMutation","mutation","contentLost","markDirty","startInside","endInside","markParentsDirty","nothing","raw","classList","stop","ignoreSelection","CompositionViewDesc","textDOM","prototypeAccessors$2","mut","oldValue","MarkViewDesc","custom","nodeViews","reparseInView","replaceNodes","NodeViewDesc","outerDeco","innerDeco","updateChildren","descObj","hasAttribute","applyOuterDeco","CustomNodeViewDesc","TextViewDesc","sameOuterDeco","prototypeAccessors$3","composition","composing","localCompositionInfo","localComposition","compositionInChild","updater","ViewTreeUpdater","deco","onWidget","onNode","locals","forChild","decoIndex","restNode","parentIndex","widgets","compareSide","cutAt","filter","iterDeco","insideNode","syncToMarks","placeWidget","compIndex","findNodeMatch","findIndexWithChild","updateNodeAt","updateNextNode","addTextblockHacks","destroyRest","changed","protectLocalComposition","renderDescs","oldCSS","cssText","getComputedStyle","listStyle","iosHacks","nearbyTextNode","textPos","childStart","findTextInFragment","removeChild","compositionNodes","updateInner","updateOuterDeco","needsWrap","oldDOM","patchOuterDeco","computeOuterDeco","selectNode","deselectNode","removeAttribute","docViewDesc","pmIsDeco","inParent","trackWrites","parentDOM","prototypeAccessors$4","prototypeAccessors$5","descs","written","childDOM","rm","insertBefore","OuterDecoLevel","noDeco","class","outerDOM","prevComputed","curComputed","curDOM","patchAttributes","prevList","Boolean","curList","removeProperty","lockedNode","lock","preMatch","parentDesc","curDesc","descI","fI","Map","selectionFromDOM","origin","inWidget","isOnEdge","selectionBetween","editorOwnsSelection","editable","hasFocus","hasSelection","selectionToDOM","syncNodeSelection","mouseDown","allowDefault","curSel","domObserver","currentSelection","delayedSelectionSync","setCurSelection","disconnectSelection","cursorWrapper","img","disabled","selectCursorWrapper","resetEditableFrom","resetEditableTo","brokenSelectBetweenUneditable","temporarilyEditableNear","resetEditable","removeEventListener","hideSelectionGuard","addEventListener","setTimeout","removeClassOnSelectionChange","connectSelection","destroyBetween","maxKeep","markDesc","targetDesc","domNode","nextDOM","addHackNode","hack","setEditable","wasDraggable","lastSelectedViewDesc","clearNodeSelection","hasFocusAndSelection","moveSelectionBlock","$side","selectHorizontally","mods","nodePos","nodeLen","isIgnorable","skipIgnoredNodesLeft","moveNode","moveOffset","isBlockNode","setSelFocus","skipIgnoredNodesRight","selectVertically","beyond","stopNativeHorizontalDelete","nextNode","switchEditable","captureKeyDown","getMods","safariDownArrowBug","readDOMChange","typeOver","addedNodes","lastSelectionTime","lastSelectionOrigin","newSel","shared","from_","to_","lastKeyCode","startDoc","editableContent","parseBetween","preferredPos","preferredSide","compare","lastKeyCodeTime","change","endA","endB","findDiff","lastIOSEnter","resolveSelection","domChangeCount","nextSel","inlineChange","old","$newStart","$newEnd","skipClosingAndOpening","$next","looksLikeJoin","suppressSelectionUpdates","toB","lastAndroidDelete","markChange","$from1","chFrom","chTo","curMarks","prevMarks","isMarkChange","parsedSel","fromEnd","mayOpen","serializeForClipboard","serializer","detachedDoc","wrapMap","wrapper","parseFromClipboard","html","plainText","inCode","asText","parsed","metas","firstTag","innerHTML","readHTML","querySelectorAll","restoreReplacedSpaces","contextNode","sliceData","inlineParents","addContext","closeSlice","lastWrap","inLast","addToSibling","closeRight","wrapped","withWrappers","normalizeSiblings","sibling","closeRange","thead","tbody","caption","colgroup","col","td","th","_detachedDoc","implementation","createHTMLDocument","observeOptions","childList","characterData","characterDataOldValue","attributes","attributeOldValue","subtree","useCharData","SelectionState","DOMObserver","handleDOMChange","queue","flushingSoon","observer","MutationObserver","mutations","removedNodes","flushSoon","flush","onCharData","prevValue","onSelectionChange","suppressingSelectionUpdates","forceFlush","clearTimeout","observe","take","takeRecords","disconnect","ignoreSelectionChange","container","commonAncestorContainer","registerMutation","brs","cssChecked","whiteSpace","console","checkCSS","attributeName","handlers","editHandlers","setSelectionOrigin","ensureListeners","currentHandlers","eventHandlers","runCustomHandler","defaultPrevented","eventCoords","clientX","clientY","runHandlerOnContext","propName","updateSelection","focused","handleSingleClick","selectedNode","selectAt","selectClickedNode","selectClickedLeaf","handleDoubleClick","handleTripleClick","button","defaultTripleClick","forceDOMFlush","endComposition","keydown","inOrNearComposition","lastIOSEnterFallbackTimeout","keyup","keypress","charCode","fromCharCode","selectNodeModifier","mousedown","flushed","lastClick","click","dy","isNear","MouseDown","targetPos","mightDrag","addAttr","setUneditable","abs","timeStamp","compositionEndedAt","buttons","touchdown","contextmenu","timeoutComposition","scheduleComposeEnd","delay","composingTimeout","clearComposition","timestampFromCustomEvent","forceUpdate","compositionstart","compositionupdate","markCursor","compositionend","brokenClipboardAPI","doPaste","singleNode","sliceSingleNode","data","clipboardData","clearData","setData","selectNodeContents","blur","captureCopy","paste","getData","capturePaste","Dragging","dragCopyModifier","dragstart","dataTransfer","effectAllowed","dragging","dragend","dragover","dragenter","drop","eventPos","$mouse","isNode","beforeInsert","relatedTarget","compareObjs","WidgetType","noSpec","span","oldOffset","Decoration","valid","InlineType","inclusiveStart","inclusiveEnd","is","DecorationSet","local","decorations","buildTree","predicate","findInner","childOff","mapInner","newLocal","onRemove","oldChildren","oldEnd","newEnd","dSize","mustRebuild","fromLocal","toLocal","childOffset","childNode","gather","mapAndGatherRemainingDecorations","byPos","mapChildren","addInner","baseOffset","takeSpansForNode","moveSpans","withoutNulls","removeInner","dec","localSet","DecorationGroup","removeOverlap","localsInner","members","spans","hasNulls","localStart","working","insertAhead","viewDecorations","mappedDecos","member","sorted","EditorView","_props","directPlugins","checkStateComponent","_root","mount","mounted","getEditable","updateCursorWrapper","buildNodeViews","computeDocDeco","bubbles","eventBelongsToView","initInput","prevDirectPlugins","pluginViews","updatePluginViews","contenteditable","translate","updateStateInner","setProps","reconfigured","redraw","updateSel","nA","nB","changedNodeViews","scroll","scrollToSelection","updateDoc","oldScrollPos","overflowAnchor","refDOM","refTop","innerHeight","localRect","storeScrollPos","forceSelUpdate","sel1","sel2","selectionContextChanged","chromeKludge","anchorInRightPlace","newRefTop","resetScrollPos","destroyPluginViews","prevState","pluginView","setActive","stored","preventScroll","focusPreventScroll","getPrototypeOf","domAtPos","posAtDOM","destroyInput","isDestroyed","dispatchEvent","dispatchTransaction","_toArray","getStackUtil","size2","ctx","elements","top2","el","stackOverFlow","pushElement","hasText","openNode","args","popElement","createNodeInParserFail","closeNode","openMark","closeMark","addText","topElement","prevNode","currNode","maybeMerge","build","specMap","__privateAdd","remark","markdown","tree","runSync","flat","__privateMethod","_matchTarget","matchTarget_fn","parserMatchError","_runNode","runNode_fn","runner","createParser","State","createStack","run","toDoc","maybeMergeChildren","nextChildren","currChildren","currRest","__objRest","_a","prevChildren","prevRest","_b","__spreadProps","createMarkdownNode","isMark","_matchTarget2","matchTarget_fn2","entries","__spreadValues","serializerMatchError","_runProseNode","runProseNode_fn","_runProseMark","runProseMark_fn","_runNode2","runNode_fn2","getPriority","every","createSerializer","bail","error","middleware","callback","called","parameters","fnExpectsCallback","exception","Promise","then","stringifyPosition","position","line","column","VFileMessage","reason","fatal","source","ruleId","actual","expected","file","url","note","basename","ext","TypeError","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","includes","assertNonEmpty","assertPart","stem","encoding","unified","frozen","transformers","fns","pipeline","middlewareIndex","fn","use","middelware","trough","attachers","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","entry","isPlainObj","vfile","assertParser","newable","assertCompiler","assertNode","executor","reject","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","includeImageAlt","all","chunkStart","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","limit","prefix","consume","exit","tokenize","previous","contentStart","attempt","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","sliceStream","defineSkip","write","nok","disable","null","blankLine","partial","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","startBufferIndex","endBufferIndex","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","titleEscape","factoryWhitespace","normalizeIdentifier","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","decodeNamedCharacterReference","characterReference","char","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","insideSpan","destinationAfter","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","resolveText","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","hex","fromMarkdown","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","referenceType","ancestor","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","lastIndex","ceil","preprocess","combined","zwitch","invalid","unknown","track","options_","lineShift","containerFlow","safeOptions","indexStack","tracker","results","handle","bulletLastUsed","repeat","eol","indentLines","blank","patternInScope","pattern","listInScope","inConstruct","notInConstruct","_1","safe","unsafe","character","formatCodeAsIndented","fences","patternCompile","_compiled","RegExp","input","positions","infos","expression","numerical","escapeBackslashes","charAt","encode","whole","association","checkQuote","quote","containerPhrasing","peek","checkEmphasis","formatHeadingAsSetext","literalWithBreak","visit","EXIT","setext","suffix","subexit","imageReference","inlineCode","formatLinkAsAutolink","resourceLink","linkReference","checkBullet","bullet","checkBulletOrdered","bulletOrdered","checkRule","checkStrong","break","fence","checkFence","longestStreak","closeAtx","bulletCurrent","bulletOther","bulletOrderedOther","checkBulletOrderedOther","checkBulletOther","useDifferentMarker","firstListItem","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","fullPhrasingSpans","joinDefinition","tightDefinitions","toMarkdown","remarkParse","remarkStringify","ConfigReady","createTimer","themeTimerCtx","createSlice","ThemeEnvironmentReady","ThemeReady","themeEnvironment","themeManager","createThemeManager","emotionConfigCtx","emotionCtx","themeManagerCtx","record","waitTimers","emotion","initEmotion","key2","wait","InitReady","prosePluginsCtx","runExecutor","themeFactory","createThemePack","overrideFn","setExecutor","warn","sliceName","ThemeGlobal","override","initTimerCtx","editorCtx","inputRulesCtx","remarkPluginsCtx","viewCtx","remarkCtx","SchemaReady","schemaCtx","schemaTimerCtx","nodesCtx","marksCtx","extendPriority","remark2","remarkPlugins","plug","fromEntries","parserCtx","parserTimerCtx","ParserReady","schema2","parseMarkdown","serializerCtx","serializerTimerCtx","SerializerReady","defaultValueCtx","editorStateCtx","editorStateOptionsCtx","editorStateTimerCtx","EditorStateReady","getDoc","defaultValue","parser2","docTypeError","editorState","CommandsReady","optionsOverride","prosePlugins","_tr","_value","_oldState","createInputRules","createKeymap","editorViewCtx","editorViewOptionsCtx","rootCtx","editorViewTimerCtx","EditorViewReady","createViewContainer","editorView","editorView2","editor","createContainer","__privateGet","sliceMap","getSlice","payload","callCommandBeforeEditorView","command","cmd","_ctx","createCmd","createCmdKey","commandsCtx","commandsTimerCtx","commandManager","CommandManager","setCtx","createClock","Set","Ctx","Pre","internalPlugins","configPlugin","loader","action","_Editor","_container2","_clock","_plugins","_configureList","_ctx2","_pre","_loadInternal","contextNotFound","shallowClone","Symbol","factory","resetValue","_typeInfo","ctxCallOutOfScope","clock","timer","timing","_clock2","timerNotFound","timeout","listener","isResolved","CustomEvent","detail","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","memoize","cache","arg","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","processStyleName","styleName","processStyleValue","p1","p2","cursor","unitless","handleInterpolation","mergedProps","registered","interpolation","__emotion_styles","anim","_key","interpolated","_i","createStringFromObject","previousCursor","labelPattern","serializeStyles","stringMode","strings","identifierName","k","h","hashString","getRegisteredStyles","registeredStyles","classNames","rawClassName","insertStyles","serialized","isStringTag","registerStyles","sheet","insertWithoutScoping","css","classnames","toAdd","classnames2","createCache","speedy","isSpeedy","compat","_len","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","hydrate","ids","createEmotion","createThemeSliceKey","themeSlice","lazyGet","callWhenRegister","_cache","_flushListener","_executor","ThemeManager","ThemeBorder","ThemeCodeFence","ThemeColor","ThemeFont","ThemeIcon","ThemeImage","ThemeInnerEditor","ThemeInputChip","ThemeScrollbar","ThemeShadow","ThemeSize","ThemeTaskListItem","internalThemeKeys","hex2rgb","r2","g2","b2","g","getPalette","manager","color","functionReplacer","msg","serialize","themeMustInstalled","isPureText","clipboard","createPlugin","handlePaste","contentSlice","clipboardTextSerializer","clipboardPlugin","Undo","Redo","prosemirrorHistory","clike","Prism2","languages","lookbehind","greedy","punctuation","keyword","boolean","function","number","operator","c","register","refractorClike","macro","alias","directive","constant","cpp","refractorC","Prism3","modName","generic","arduino","refractorCpp","builtin","ino","bash","envVars","commandAfterHeredoc","insideString","environment","variable","entity","shebang","toBeCopied","shell","csharp","replacements","flags","nested","depthLog2","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","regularString","verbatimString","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attribute","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","markup","prolog","doctype","hooks","env","includedCdataInside","mathml","svg","xml","ssml","rss","atrule","important","markup2","addInlined","addAttribute","coord","PREFIXES","unchanged","alias2","ini","java","classNamePrefix","annotation","generics","specialEscape","escape","rangeChar","groupName","backreference","quantifier","alternation","javascript","parameter","hashbang","js","webmanifest","kotlin","interpolationInside","kt","kts","less","refractorCss","lua","makefile","yaml","anchorOrAlias","properties","plainKey","createValuePattern","scalar","datetime","yml","refractorMarkup","createInline","tableCell","tableRow","tableLine","bold","italic","strike","language","walkTokens","l","codeLang","codeBlock","grammar","highlight","html2","tagPattern","fromCodePoint","KNOWN_ENTITY_NAMES","autoloader","valueOf","random","loadLanguages","ele","getElementById","amp","lt","gt","quot","md","objectivec","objc","perl","brackets","filehandle","markupTemplating","getPlaceholder","buildPlaceholders","placeholderPattern","replaceFilter","placeholder","tokenizePlaceholders","t","substring","middle","Token","php","refractorMarkupTemplating","number2","delimiter","package","string_interpolation","python","decorator","py","ellipsis","ruby","percentExpression","symbolName","symbol","rb","rust","multilineComment","sass","scss","statement","sql","swift","literal","nil","omit","typescript","refractorJavascript","ts","basic","vbnet","refractorBasic","displayName","aliases","normal","definitions","Info","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","DefinedInfo","mask","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","attributes2","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","controls","controlsList","crossOrigin","dateTime","decoding","defer","dirName","download","encType","enterKeyHint","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","loading","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","spellCheck","srcDoc","srcLang","srcSet","tabIndex","typeMustMatch","useMap","align","aLink","archive","axis","background","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillRule","floodColor","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cy","defaultAction","descent","diffuseConstant","direction","dur","divisor","edgeMode","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","orient","orientation","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","dash","cap","kebab","camelcase","htmlBase","svgBase","parseSelector","subvalue","defaultTagName","buttonTypes","isProperties","addProperty","Type","dashes","isNaN","spaces","commas","parsePrimitive","finalResult","addChild","caseSensitive","createAdjustMap","core","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","indent","additional","lines","following","following2","characterReferenceCharacters","characters","terminated","namedReference","diff2","nonTerminated","warning","referenceCode","prohibited","disallowed","referenceContext","warningContext","textContext","_self2","uniqueId","plainTextGrammar","manual","Prism","disableWorkerMessageHandler","util","encode2","o","objId","deepClone","visited","getLanguage","element2","parentElement","setLanguage","currentScript","scripts","getElementsByTagName","isActive","defaultActivation","no","plain","plaintext","txt","redef","lang2","ret","newToken","DFS","propertyType","highlightAll","highlightAllUnder","highlightElement","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","immediateClose","tokenList","LinkedList","matchGrammar","toArray","callbacks","matchedStr","matchPattern","lookbehindLength","startNode","rematch","patterns","cause","patternObj","global","currentNode","reach","removeCount","matchStr","removeFrom","nestedRematch","stringify2","highlightAutomaticallyCallback","readyState","requestAnimationFrame","WorkerGlobalScope","globalThis","Refractor","refractor","syntax","aliasOrLanguage","listLanguages","flatNodes","flatMap","refractor2","highlight2","allLanguages","listLanguages2","decoration","configureRefractor","getDecorations","transaction","decorationSet","isNodeName","isPreviousNodeName","findChildren","prism","overrideOptions","$prose","prismPlugin","hasMark","isTextAndNotHasMark","isTextSelection","findParentNode","isInCodeFence","createToggleIcon","iconName","disableForMark","$","enable","buttonMap","ButtonItems","icon","isHidden","Buttonize","createTooltip","buttonMap2","utils","onFlush","getStyle","palette","lineWidth","injectStyle","getClassName","render","filterButton","noActive","createButtonManager","containerClassName","Element","stopPropagation","hide","isBottom","$editor","selectionWidth","buttonManager","shouldHide","recreate","setHide","isTyping","tooltipPlugin","handleClick","tooltip","AtomList","_wrapRegExp","BabelRegExp","_super","_groups","WeakMap","_this","setPrototypeOf","buildGroups","inherits","substitution","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","visitParents","visitor","parents","subresult","grandparents","toResult","clean","remarkInlineLinks","SKIP","SupportedKeys","ToggleInlineCode","codeInline","createMark","withMark","inputRules","markRule","shortcuts","createShortcut","ToggleItalic","em","ToggleLink","ModifyLink","HTMLElement","marks2","linkMark","okay","text2","inputChipRenderer","buttonText","onUpdate","renderByView","doc2","shouldDisplay","show","getCurrentLink","ToggleBold","WrapInBlockquote","createNode","WrapInBulletList","bulletList","id2","languageOptions","backtickInputRegex","tildeInputRegex","TurnIntoCodeFence","codeFence","languageList","fold","dataset","select","innerText","onchange","HTMLSelectElement","getPos","renderer","onSelectLanguage","onDestroy","updatedNode","injectRoot","InsertHardbreak","hardbreak","headingIndex","TurnIntoHeading","headingPluginKey","toLocaleLowerCase","walkThrough","id22","createId","nextState","InsertHr","ModifyImage","InsertImage","findSelectedNodeOfType","SplitListItem","SinkListItem","LiftListItem","WrapInOrderedList","orderedList","TurnIntoText","filterHTMLPlugin","isHTML","isParent","nthChild","commonmarkPlugins","links","commonmarkNodes","commonmark","DropCursorView","cursorPos","setCursor","updateOverlay","nodeRect","parentLeft","parentTop","offsetParent","pageXOffset","pageYOffset","scheduleRemoval","disableDropCursor","dragleave","GapCursor","GapBookmark","closedBefore","closedAfter","allowGapCursor","mustMove","$cur","arrow","dirStr","$found","readFromCache","addToCache","cachePos","Rect","TableMap","problems","freshColWidth","colwidth","colspan","tableNodeTypes","tableRole","findCell","colCount","nextCell","rectBetween","leftA","rightA","topA","bottomA","leftB","rightB","topB","bottomB","cellsInRect","row","positionAt","rowStart","rowEnd","rowEndIndex","hasRowSpan","rowNode","rowWidth","prevRow","cell","rowspan","findWidth","mapPos","colWidths","cellNode","w","colW","widthIndex","expectedPos","missing","tableMap","badWidths","colWidth","findBadColWidths","computeMap","cellAround","isInTable","selectionCell","$anchorCell","$headCell","cellNear","pointsAtCell","inSameTable","$a","$b","moved","setAttr","removeColSpan","CellSelection","cells","tableChanged","isRowSelection","rowSelection","isColSelection","colSelection","rowContent","cellRect","extraLeft","extraRight","forEachCell","anchorTop","headTop","anchorBot","headBot","anchorRect","headRect","anchorLeft","headLeft","anchorRight","headRight","anchorCell","headCell","CellBookmark","shiftArrow","deleteCellSelection","maybeSetSelection","atEndOfCell","$cell","baseContent","cellPos","selectedRect","tableStart","isHeaderEnabledByType","cellPositions","header_cell","toggleHeader","useDeprecatedLogic","deprecated_toggleHeader","isHeaderRowEnabled","isHeaderColumnEnabled","selectionStartsAt","cellsRect","newType","relativeCellPos","TableView","cellMinWidth","updateColumns","overrideCol","overrideValue","totalWidth","fixedWidth","hasWidth","cssWidth","minWidth","ResizeState","activeHandle","textBefore","setHandle","setDragging","customInputRulesKey","customInputRules","isInputRules","handleTextInput","matchLength","markStart","markEnd","last1","matchStart","matchEnd","textStart","textEnd","excludedMarks","getMarksBetween","calculateTextPosition","targetNodeRect","descend","findParentNodeClosestToPos","equalNodeType","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","log","LN2","portalContext","getId","portals","Portals","nodeContext","ReactNodeContainer","Provider","Content","containerRef","nanoid","customAlphabet","addPortal","removePortalByKey","elementName","isInlineOrMark","renderPortal","Component","portal","createPortal","EditorComponent","forwardRef","refs","getEditor","renderReact","divRef","editorRef","editor2","catch","useGetEditor","ReactEditor","setPortals","ps","ReactNodeView","createReactView","useEditor","deps","selectWrapper","valueWrapper","downIcon","spellcheck","codeContent","HTMLLIElement","value2","onClickOutside","createIcon","icon2","$placeholder","setIcon","nextIcon","onerror","onload","innerEditor","inner$","outerView","innerView","isEditing","openEditor","Backspace","state2","outerState","outerTr","offsetMap","closeEditor","createInnerEditor","preview","codeStyle","hideCodeStyle","previewPanelStyle","isInit","overlap","newVal","isChild","calcInputPos","inputChip","isBindMode","calculatePosition","HTMLInputElement","onKeydown","taskListItem","checkboxWrapper","checkboxStyler","checkbox","iconMapping","divider","brokenImage","taskList","strikeThrough","leftArrow","rightArrow","upArrow","downArrow","alignLeft","alignRight","alignCenter","unchecked","liftList","sinkList","Nord","lightColor","shadow","primary","secondary","neutral","surface","darkColor","editorLayout","code2","footnote","font","typography","createTheme","isDarkMode","colorSet","rgb","bg","hover","getShadow","getIcon","getNord","nord","matchMedia","hasMetadata","findThenRun","headless","prose","prosePlugin","commandKey","defaultKey","getUtils","applyMethods","getType","ir","getKey","tuples","addMetadata","withExtend","creator","extendFactory","ns","schemas","ms","markTypes","brokenModifierNames"],"sourceRoot":""}